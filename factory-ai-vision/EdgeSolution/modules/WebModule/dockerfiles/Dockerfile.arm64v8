# =========================================================
# === Build Static UI                                   ===
# =========================================================
FROM node:12 as builder

WORKDIR /app
COPY ui/package.json .
COPY ui/yarn.lock .
RUN yarn install --production
COPY ui/tsconfig.json .
COPY ui/src/ ./src
COPY ui/public/ ./public
RUN yarn build

# =========================================================
# === Build Backend                                     ===
# =========================================================
FROM arm64v8/python:3.8-slim-buster as backend-base

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    libffi-dev \
    libssl-dev \
    python3-dev \
    python3-opencv \
    && rm -rf /var/lib/apt/lists/*
RUN ln -s /usr/lib/python3/dist-packages/cv2.cpython-37m-aarch64-linux-gnu.so /usr/local/lib/python3.8/site-packages/cv2.so

# =========================================================
# === Build Backend Production                          ===
# =========================================================
FROM backend-base as backend-production

WORKDIR /app

RUN python -m pip install --upgrade pip

COPY backend/requirements/core.txt requirements/core.txt
RUN pip install -r ./requirements/core.txt

COPY backend/requirements/base.txt requirements/base.txt
RUN pip install -r ./requirements/base.txt

COPY backend/requirements/production-arm.txt requirements/production-arm.txt
RUN pip install -r ./requirements/production-arm.txt

COPY backend/manage.py .
COPY backend/config.py .
COPY backend/vision_on_edge vision_on_edge
COPY backend/configs configs
RUN python manage.py makemigrations
RUN python manage.py migrate

COPY --from=builder /app/build vision_on_edge/ui_production
EXPOSE 8000

CMD python manage.py runserver 0.0.0.0:8000
