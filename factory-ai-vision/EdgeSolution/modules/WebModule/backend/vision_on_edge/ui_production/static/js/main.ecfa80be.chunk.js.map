{"version":3,"sources":["store/project/projectTypes.ts","store/part/partReducer.ts","store/labelingPage/labelingPageTypes.ts","store/State.ts","store/camera/cameraReducer.ts","store/camera/cameraTypes.ts","store/part/partTypes.ts","store/labelingPage/labelingPageReducer.ts","components/LiveViewContainer/LiveViewContainer.type.ts","store/location/locationReducer.ts","store/location/locationTypes.ts","store/dialog/dialogIsOpenReducer.ts","store/dialog/dialogIsOpenTypes.ts","store/project/projectReducer.ts","store/image/imageReducer.ts","store/image/imageTypes.ts","store/setting/settingReducer.ts","store/rootReducer.ts","store/index.ts","components/ImageLink.tsx","pages/Home.tsx","store/camera/cameraActions.ts","components/AddButton.tsx","components/AddModuleDialog/AddModuleDialog.tsx","pages/Cameras.tsx","components/ConfirmDialog.tsx","hooks/useParts.ts","components/LiveViewContainer/LiveViewScene.tsx","components/LabelingPage/util/useImage.ts","components/LiveViewContainer/LiveViewContainer.tsx","components/ListItem/ListItem.tsx","components/CameraDetails/CameraDetailInfo.tsx","hooks/useInterval.ts","store/project/projectActions.ts","hooks/useQuery.ts","components/CameraConfigure/CameraConfigureInfo.tsx","components/LoadingDialog/LoadingDialog.tsx","components/CameraConfigure/CreateCameraConfig.tsx","pages/CameraDetails.tsx","hooks/useCameras.ts","components/LabelingPage/util/resizeImage.ts","store/labelingPage/labelingPageActions.ts","components/LabelingPage/Box.tsx","components/LabelingPage/RemoveBoxButton.tsx","components/LabelingPage/Scene.tsx","store/image/imageActions.ts","components/LabelingPage/PrevNextButton.tsx","pages/LabelingPage.tsx","components/LabelingPageDialog.tsx","components/LabelDisplayImage.tsx","components/RTSPVideo/RTSPVideo.tsx","store/part/partActions.ts","util/GetIDFromUrl.ts","util/getFilteredImages.ts","util/formatDropdownValue.ts","components/CapturePhoto/CapturePhotos.tsx","components/UploadPhotos/UploadPhotos.tsx","components/WarningDialog/WarningDialog.tsx","themes/mainTheme.ts","themes/errorTheme.ts","hooks/useProject.ts","pages/PartDetails.tsx","store/location/locationActions.ts","pages/Locations.tsx","pages/LocationDetails.tsx","components/ManualIdentification/ImageItem.tsx","components/ManualIdentification/ImagesContainer.tsx","pages/ManualIdentification.tsx","pages/Parts.tsx","TelemetryService.ts","components/AddModuleDialog/AddCameraLink.tsx","components/AddModuleDialog/AddLocationLink.tsx","components/AddModuleDialog/AddPartLink.tsx","pages/PartIdentification.tsx","store/setting/settingAction.ts","pages/Setting.tsx","routes/PrivateRoute.tsx","routes/RootRouter.tsx","components/Breadcrumb.tsx","components/MainLayout/LeftNav.tsx","components/MainLayout/MainLayout.tsx","components/TelemetryProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Status","reducer","AnnotationState","LabelingCursorStates","WorkState","LabelingType","initialState","dialogIsOpen","cameras","locations","images","labelingPageState","annotations","part","capturedImages","isValid","project","isLoading","data","id","camera","location","parts","needRetraining","accuracyRangeMin","accuracyRangeMax","maxImages","modelUrl","sendMessageToCloud","framesPerMin","accuracyThreshold","probThreshold","originData","trainingMetrics","prevConsequence","curConsequence","inferenceMetrics","successRate","successfulInferences","unIdetifiedItems","isGpu","averageTime","status","None","error","trainingLog","setting","loading","current","key","namespace","origin","isTrainerValid","appInsightHasInit","camerasReducer","state","action","type","payload","concat","idx","findIndex","e","slice","checkIfImagesCountIsValidToTrain","newCapturedImage","newState","filter","image","labels","length","CreatingState","labelingPageStateReducer","push","annotation","creatingAnnotation","updater","annotationState","Finish","label","x1","x2","y1","y2","pop","index","locationsReducer","dialogIsOpenReducer","projectReducer","newStatus","TrainingFailed","StartInference","labelImagesReducer","updatedImageIdx","settingReducer","cvProjects","pyload","rootReducer","combineReducers","partReducer","persistConfig","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","memo","to","imgSrc","defaultSrc","bgImgSrc","imgPadding","width","height","bgImgStyle","pointerCursor","onClick","Flex","column","styles","style","Image","src","padding","objectFit","backgroundImage","cursor","Text","align","Home","gap","size","weight","color","backgroundColor","requestCamerasFailure","alert","getCameras","dispatch","axios","then","getCamerasSuccess","catch","err","postCamera","newCamera","method","postCameraSuccess","response","Error","log","request","AddButton","Button","primary","fluid","circular","content","AddModuleDialog","trigger","header","fields","onConfirm","useState","reduce","acc","cur","formData","setFormData","isSubmitDisabled","some","required","Dialog","display","flexDirection","alignItems","confirmButton","disabled","cancelButton","alignSelf","hAlign","map","Input","placeholder","value","onChange","_","R","TextArea","Cameras","useDispatch","useSelector","is_demo","useEffect","flexFlow","justifyContent","Grid","columns","i","name","backgroundSize","backgroundPosition","backgroundRepeat","rtsp","ConfirmDialog","primaryStyles","open","setOpen","onOpen","footer","space","useParts","isDemo","setParts","url","undefined","Number","fetch","res","json","console","getRelativePosition","layer","transform","getAbsoluteTransform","copy","invert","pos","getStage","getPointerPosition","point","LiveViewScene","AOIs","setAOIs","visible","imageInfo","creatingState","setCreatingState","divRef","useRef","stageRef","imgRef","layerRef","imgEle","imgWidth","imgHeight","anim","Konva","Animation","start","stop","getBoundingClientRect","divWidth","divHeight","stageWidth","stageHeight","scale","Math","min","x","y","offsetX","offsetY","position","ref","Disabled","onMouseDown","target","getLayer","prev","uniqid","Creating","onMouseMove","rear","onMouseUp","AOILayer","holes","box","boundary","onBoxChange","updateBox","newBox","tmp","newAOIs","removeBox","ele","Mask","fill","sceneFunc","ctx","shape","beginPath","moveTo","lineTo","forEach","fillStrokeShape","listening","AOIBox","cancelBtnVisible","setCanceBtnVisible","groupRef","handleDrag","radius","onMouseEnter","onMouseLeave","cache","drawBorder","points","closed","stroke","strokeWidth","draggable","onDragMove","container","defaultState","usePrevious","useImage","crossOrigin","isMixedReplace","imageState","setImageState","prevUrl","prevImageWidth","prevImageHeight","img","document","createElement","onload","onerror","addEventListener","removeEventListener","window","requestAnimationFrame","checkImageSize","cancelAnimationFrame","LiveViewContainer","showVideo","initialAOIData","cameraId","useAOI","showAOI","setShowAOI","lasteUpdatedAOIs","showUpdateSuccessTxt","setShowUpdateSuccessTxt","setLoading","setError","hostname","creatingAOI","setCreatingAOI","onCheckboxClick","a","Axios","patch","area","JSON","stringify","onUpdate","timer","setTimeout","clearTimeout","hasEdit","updateBtnDisabled","Alert","danger","message","Checkbox","labelPosition","toggle","checked","Waiting","visibility","ListItem","title","footerText","children","vAlign","CameraStatus","online","text","margin","isCameraOnline","CameraConfigStatus","FinishTraining","includes","deleteCameraSuccess","deleteCamera","WaitTraining","join","useInterval","callback","delay","savedCallback","setInterval","clearInterval","getTrainingLogSuccess","postProjectFail","updateProjectData","partialProjectData","thunkGetProject","isTestModel","get","parseInt","split","download_uri","metrics_is_send_iothub","metrics_frame_per_minutes","metrics_accuracy_threshold","cvProjectId","customvision_project_id","prob_threshold","toString","getProjectSuccess","thunkPostProject","projectId","selectedLocations","selectedParts","selectedCamera","getState","isProjectEmpty","projectData","headers","getTrain","thunkGetTrainingLog","useQuery","URLSearchParams","useLocation","search","CameraConfigureInfoContainer","CameraConfigureInfo","allTrainingLog","useAllTrainingLog","cameraName","history","useHistory","showConsequenceDashboard","setShowConsequenceDashboard","successInferenceFooter","useNotification","unIdentifiedItemFooter","onDeleteConfigure","useCallback","confirm","thunkDeleteProject","dispacth","new","precision","recall","mAP","previous","getTrainingMetricsSuccess","thunkGetTrainingMetrics","success_rate","inference_num","unidentified_num","gpu","average_time","thunkGetInferenceMetrics","Loader","rowGap","fontWeight","round","gridColumn","marginLeft","as","Link","paddingTop","marginTop","targetState","checkPeriod","showNotification","setShowNotification","allLogs","setAllLogs","ConsequenceDashboard","textAlign","CreateCameraConfigButton","design","border","CameraDetails","cameraIdInproject","find","hasProject","aoiData","getAOIData","cameraArea","parse","useCameras","getResizeImageFunction","defaultSize","scaleX","scaleY","requestAnnotationsSuccess","BoxObj","init","attribute","Empty","createWithPoint","p","obj","this","add","newObj","P1Added","setVerticesToValidValue","setVerticesToInt","setVerticesPointsOrder","object","Box2d","workState","onSelect","selected","annotationIndex","changeCursorState","vertices","setVertices","anchorRadius","boxRef","dispatchLabel","newAnnotation","updateAnnotation","mouseMoveListener","evt","onDragAnchor","xi","yi","getSize","setAttr","anotherPosXArr","anotherPosYArr","splice","xx","yy","nwseResize","neswResize","prevVertices","on","off","cancelBubble","onDragEnd","imageSize","setShowOuterRemoveButton","setColor","setStrokeWidth","pointer","Scene","labelingType","setWorkState","resizeImage","setImageSize","noMoreCreate","useMemo","SingleAnnotation","default","cursorState","setCursorState","selectedAnnotationIndex","setSelectedAnnotationIndex","showOuterRemoveButton","isDragging","setIsDragging","cursorType","crosshair","removeAnnotation","Selecting","outcomeSize","outcomeScale","iconOnly","onDragStart","fontSize","requestLabelImagesFailure","postLabelImageSuccess","getLabelImages","getLabelImagesSuccess","postLabelImage","newImage","saveLabelImageAnnotation","imageId","info","updateLabelImageAnnotation","PrevNextButton","prevDisabled","nextDisabled","onPrevClick","onNextClick","icon","Tooltip","checkOnePointBox","LabelingPage","imageIndex","closeDialog","setIndex","isOnePointBox","imageUrl","parsedLabels","getAnnotations","forceOpen","annotationToShape","imgScale","edge","Line","Circle","labelImage","labelText","stage","imgSize","shapes","useLayoutEffect","querySelector","offsetWidth","offsetHeight","Stage","FastLayer","newShapes","destroy","j","draw","RTSPVideo","React","partId","canCapture","onVideoStart","onVideoPause","setOpenLabelingPage","streamId","setStreamId","captureLabelMode","setCaptureLabelMode","onDisconnect","stream_id","thunkAddCapturedImages","RadioGroup","checkedValue","onCheckedValueChange","newProps","items","ImageBtn","getIdFromUrl","getFilteredImages","isRelabel","is_relabel","formatDropdownValue","Array","isArray","CapturePhotos","goLabelImageIdx","setGoLabelImageIdx","setSelectedCamera","openLabelingPage","filteredImages","prevImageLength","maxHeight","CameraSelector","availableCameras","Dropdown","newSelectedCamera","CapturedImagesContainer","imageCount","gridGap","borderColor","justifyItems","overflow","arr","when","UploadPhotos","files","FormData","append","accept","multiple","WarningDialog","onCancel","contentText","theme","siteVariables","colorScheme","brand","foreground","colors","background","shadow","foregroundHover","backgroundHover","borderHover","shadowHover","foregroundActive","backgroundActive","borderActive","shadowActive","foregroundFocus","backgroundFocus","borderFocus","shadowFocus","foregroundPressed","backgroundPressed","borderPressed","shadowPressed","foregroundDisabled","backgroundDisabled","borderDisabled","shadowDisabled","foreground1","foreground2","foreground3","foreground4","background1","background2","background3","background4","border1","border2","foregroundHover1","foregroundHover2","backgroundHover1","foregroundPressed1","foregroundActive1","foregroundActive2","backgroundActive1","borderActive1","borderActive2","foregroundFocus1","foregroundFocus2","foregroundFocus3","foregroundFocus4","backgroundFocus1","backgroundFocus2","backgroundFocus3","borderFocusWithin","borderFocus1","foregroundDisabled1","backgroundDisabled1","mainTheme","mergeThemes","themes","teams","errorTheme","LoadingDialog","errorMessage","Loading","Failed","Success","success","getContent","useProject","PartDetails","setName","description","setDescription","setStatus","onDelete","delete","rows","gridColumnGap","Provider","dismissible","PartInfoForm","CaptureImagePanel","path","Tab","pathname","activeIndex","Menu","pointing","requestLocationsFailure","postLocation","newLocation","postLocationSuccess","Locations","getLocationsSuccess","LocationDetails","Divider","minHeight","confidenceLevel","relabelImages","setJudgedImageList","partItems","isPartCorrect","filteredPartItems","selectedPartItem","setSelectedPartItem","flex","truncated","next","judgedImageList","selectedPartId","borderWidth","borderStyle","ManualIdentification","confidenceLevelRange","setConfidenceLevelRange","ascend","setAscend","sortRef","sorted","prevIsAscend","setRelabelImages","confidence","reverse","sort","b","columnGap","allowCross","handle","dragging","restProps","prefixCls","overlay","placement","minWidth","maxWidth","relabelImage","judgedImage","imgInList","judgedIds","every","Parts","partsAPI","imagesAPI","all","spread","partsRes","wrap","right","bottom","Item","reactPlugin","appInsights","ai","initialize","instrumentationKey","isAppInsightOn","browserHistory","ReactPlugin","ApplicationInsights","config","maxBatchInterval","disableFetchTracking","disableTelemetry","extensions","extensionConfig","identifier","loadAppInsights","getAppInsights","AddCameraLink","textDecoration","reload","AddLocationLink","AddPartLink","sendTrainInfoToAppInsight","selectedPartIds","interestedImagesLength","appInsight","trackEvent","properties","source","PartIdentification","maxImage","setIsTestModel","useDropdownItems","cameraLoading","dropDownCameras","setSelectedCameraById","partLoading","dropDownParts","setSelectedPartsById","locationLoading","dropDownLocations","setSelectedLocationById","maxImgCountError","setMaxImgCountError","max","partName","rangeMessage","suggestMessage","setSuggestMessage","handleSubmitConfigure","setData","keyName","minimumLengthPart","relatedPartIdx","Infinity","accracyRangeDisabled","messageToCloudDisabled","moduleName","setSelectedModuleItem","isMultiple","inline","TestModelButton","originItems","dropDownItems","setDropDownItems","selectedItem","setSelectedItem","replace","finally","correspondedItems","correspondedItem","ModuleSelector","ids","getAddModuleLink","settingSuccess","settingFailed","thunkGetSetting","training_key","endpoint","is_trainer_valid","app_insight_has_init","is_collect_data","thunkGetAllCvProjects","settingId","Setting","settingData","originSettingData","checkboxChecked","setCheckboxChecked","isUserGuideOpen","setIsUserGuideOpen","otherError","setOtherError","notEmpty","cannotUpdateOrSave","isCollectData","updateIsCollectData","hasInit","paddingBottom","gridTemplateColumns","gridTemplateRows","href","rel","getStore","isSettingEmpty","requestConfig","iot_hub_connection_string","device_id","module_id","newCheckboxChecked","initialDropdownItem","PreviousProjectPanel","isProjectLoading","projectError","loadFullImages","setLoadFullImages","otherLoading","setOtherLoading","createProjectModel","setCreateProjectModel","projectName","setProjectName","successDialog","setSuccessDialog","onCreateNewProject","didCancel","dropdownItems","Object","entries","selectedDropdownItems","vertical","PrivateRoute","component","rest","render","RootRouter","Breadcrumb","pathTitles","getTitle","preventDefault","NavItem","activeStyle","cameraInUsed","Segment","inverted","MainLayout","gridRow","boxShadow","zIndex","TopNav","withRouter","withAITracking","initialized","AppInsightsInstrumentationKey","Boolean","App","appInsightInfo","setAppInsightInfo","appInsightKey","settings","appInsightKeyData","settingsData","className","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ecfa80be.chunk.js","sourcesContent":["import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport type { State } from '../State';\n\nexport type Project = {\n  isLoading: boolean;\n  trainingLog: string;\n  data: ProjectData;\n  originData: ProjectData;\n  inferenceMetrics: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n    isGpu: boolean;\n    averageTime: number;\n  };\n  trainingMetrics: TrainingMetrics;\n  status: Status;\n  error: Error;\n};\n\nexport type TrainingMetrics = {\n  prevConsequence: Consequence;\n  curConsequence: Consequence;\n};\n\nexport enum Status {\n  None = 'none',\n  WaitTraining = 'waitTraining',\n  FinishTraining = 'finishTraining',\n  TrainingFailed = 'trainingFailed',\n  StartInference = 'startInference',\n}\n\nexport type Consequence = {\n  precision: number;\n  recall: number;\n  mAP: number;\n};\n\nexport type ProjectData = {\n  id: number;\n  camera: any;\n  location: any;\n  parts: any[];\n  needRetraining: boolean;\n  accuracyRangeMin: number;\n  accuracyRangeMax: number;\n  maxImages: number;\n  sendMessageToCloud: boolean;\n  framesPerMin: number;\n  accuracyThreshold: number;\n  modelUrl: string;\n  cvProjectId?: string;\n  // use text input brings a better UX, so we set it to string here\n  probThreshold: string;\n};\n\n// Describing the different ACTION NAMES available\n// FIXME Replace constant with string\nexport const GET_PROJECT_REQUEST = 'GET_PROJECT_REQUEST';\nexport type GetProjectRequestAction = {\n  type: typeof GET_PROJECT_REQUEST;\n};\n\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\nexport type GetProjectSuccessAction = {\n  type: typeof GET_PROJECT_SUCCESS;\n  payload: {\n    project: ProjectData;\n  };\n};\n\nexport const GET_PROJECT_FAILED = 'GET_PROJECT_FAILED';\nexport type GetProjectFailedAction = {\n  type: typeof GET_PROJECT_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_LOG_REQUEST = 'GET_TRAINING_LOG_REQUEST';\nexport type GetTrainingLogRequesAction = {\n  type: typeof GET_TRAINING_LOG_REQUEST;\n};\n\nexport const GET_TRAINING_LOG_SUCCESS = 'GET_TRAINING_LOG_SUCCESS';\nexport type GetTrainingLogSuccessAction = {\n  type: typeof GET_TRAINING_LOG_SUCCESS;\n  payload: {\n    trainingLog: string;\n    newStatus: Status;\n  };\n};\n\nexport const GET_TRAINING_LOG_FAILED = 'GET_TRAINING_LOG_FAILED';\nexport type GetTrainingLogFailedAction = {\n  type: typeof GET_TRAINING_LOG_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_METRICS_REQUEST = 'GET_TRAINING_METRICS_REQUEST';\nexport type GetTrainingMetricsRequestAction = {\n  type: typeof GET_TRAINING_METRICS_REQUEST;\n};\n\nexport const GET_TRAINING_METRICS_SUCCESS = 'GET_TRAINING_METRICS_SUCCESS';\nexport type GetTrainingMetricsSuccessAction = {\n  type: typeof GET_TRAINING_METRICS_SUCCESS;\n  payload: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n};\n\nexport const GET_TRAINING_METRICS_FAILED = 'GET_TRAINING_METRICS_FAILED';\nexport type GetTrainingMetricsFailedAction = {\n  type: typeof GET_TRAINING_METRICS_FAILED;\n  error: Error;\n};\n\nexport const GET_INFERENCE_METRICS_REQUEST = 'GET_TRAINING_INFERENCE_REQUEST';\nexport type GetInferenceMetricsRequestAction = {\n  type: typeof GET_INFERENCE_METRICS_REQUEST;\n};\n\nexport const GET_INFERENCE_METRICS_SUCCESS = 'GET_INFERENCE_METRICS_SUCCESS';\nexport type GetInferenceMetricsSuccessAction = {\n  type: typeof GET_INFERENCE_METRICS_SUCCESS;\n  payload: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n    isGpu: boolean;\n    averageTime: number;\n  };\n};\n\nexport const GET_INFERENCE_METRICS_FAILED = 'GET_INFERENCE_METRICS_FAILED';\nexport type GetInferenceMetricsFailedAction = {\n  type: typeof GET_INFERENCE_METRICS_FAILED;\n  error: Error;\n};\n\nexport const POST_PROJECT_REQUEST = 'POST_PROJECT_REQUEST';\nexport type PostProjectRequestAction = {\n  type: typeof POST_PROJECT_REQUEST;\n};\n\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\nexport type PostProjectSuccessAction = {\n  type: typeof POST_PROJECT_SUCCESS;\n};\n\nexport const POST_PROJECT_FALIED = 'POST_PROJECT_FALIED';\nexport type PostProjectFaliedAction = {\n  type: typeof POST_PROJECT_FALIED;\n  error: Error;\n};\n\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport type DeleteProjectSuccessAction = {\n  type: typeof DELETE_PROJECT_SUCCESS;\n};\n\nexport const DELETE_PROJECT_FALIED = 'DELETE_PROJECT_FALIED';\nexport type DeleteProjectFaliedAction = {\n  type: typeof DELETE_PROJECT_FALIED;\n};\n\nexport const UPDATE_PROJECT_DATA = 'UPDATE_PROJECT_DATA';\nexport type UpdateProjectDataAction = {\n  type: typeof UPDATE_PROJECT_DATA;\n  payload: Partial<ProjectData>;\n};\n\nexport const UPDATE_ORIGIN_PROJECT_DATA = 'UPDATE_ORIGIN_PROJECT_DATA';\nexport type UpdateOriginProjectDataAction = {\n  type: typeof UPDATE_ORIGIN_PROJECT_DATA;\n};\n\nexport const START_INFERENCE = 'START_INFERENCE';\nexport type StartInferenceAction = {\n  type: typeof START_INFERENCE;\n};\n\nexport const STOP_INFERENCE = 'STOP_INFERENCE';\nexport type StopInferenceAction = {\n  type: typeof STOP_INFERENCE;\n};\n\nexport const RESET_STATUS = 'RESET_STATUS';\nexport type ResetStatusAction = {\n  type: typeof RESET_STATUS;\n};\n\nexport type UpdateProbThresholdRequestAction = {\n  type: 'UPDATE_PROB_THRESHOLD_REQUEST';\n};\n\nexport type UpdateProbThresholdSuccessAction = {\n  type: 'UPDATE_PROB_THRESHOLD_SUCCESS';\n};\n\nexport type UpdateProbThresholdFailedAction = {\n  type: 'UPDATE_PROB_THRESHOLD_FAILED';\n  error: Error;\n};\n\nexport type ProjectActionTypes =\n  | GetProjectRequestAction\n  | GetProjectSuccessAction\n  | GetProjectFailedAction\n  | GetTrainingLogRequesAction\n  | GetTrainingLogSuccessAction\n  | GetTrainingLogFailedAction\n  | PostProjectRequestAction\n  | PostProjectSuccessAction\n  | PostProjectFaliedAction\n  | DeleteProjectSuccessAction\n  | DeleteProjectFaliedAction\n  | UpdateProjectDataAction\n  | UpdateOriginProjectDataAction\n  | GetTrainingMetricsRequestAction\n  | GetTrainingMetricsSuccessAction\n  | GetTrainingMetricsFailedAction\n  | GetInferenceMetricsRequestAction\n  | GetInferenceMetricsSuccessAction\n  | GetInferenceMetricsFailedAction\n  | StartInferenceAction\n  | StopInferenceAction\n  | ResetStatusAction\n  | UpdateProbThresholdRequestAction\n  | UpdateProbThresholdSuccessAction\n  | UpdateProbThresholdFailedAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type ProjectThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, Action<string>>;\n","import { initialState } from '../State';\nimport {\n  PartActionTypes,\n  ADD_CAPTURED_IMAGE,\n  Part,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\n\nconst partReducer = (state = initialState.part, action: PartActionTypes): Part => {\n  switch (action.type) {\n    case ADD_CAPTURED_IMAGE:\n      return { ...state, capturedImages: [...state.capturedImages, action.payload.newCapturedImage] };\n    case UPDATE_CAPTURED_IMAGES:\n      return { ...state, capturedImages: action.payload.capturedImages };\n    default:\n      return state;\n  }\n};\n\ntype PartReducerType = typeof partReducer;\nconst checkIfImagesCountIsValidToTrain = (reducer: PartReducerType) => (\n  state = initialState.part,\n  action: PartActionTypes,\n): Part => {\n  const newState = reducer(state, action);\n  const isValid = newState.capturedImages.filter((image) => image.labels).length >= 15;\n  return { ...newState, isValid };\n};\n\nexport default checkIfImagesCountIsValidToTrain(partReducer);\n","// * Request Operation\nexport const REQUEST_ANNOTATION_FAILURE = 'REQUEST_ANNOTATION_FAILURE';\nexport type RequestAnnotationSuccessAction = { type: typeof REQUEST_ANNOTATION_SUCCESS; payload: any };\nexport const REQUEST_ANNOTATION_SUCCESS = 'REQUEST_ANNOTATION_SUCCESS';\nexport type RequestAnnotationFailureAction = { type: typeof REQUEST_ANNOTATION_FAILURE };\n\n// * Store Operation\nexport const CREATE_ANNOTATION = 'CREATE_ANNOTATION';\nexport type CreateAnnotationAction = { type: typeof CREATE_ANNOTATION; payload: { annotation: Annotation } };\nexport const UPDATE_CREATING_ANNOTATION = 'UPDATE_CREATING_ANNOTATION';\nexport type UpdateCreatingAnnotationAction = {\n  type: typeof UPDATE_CREATING_ANNOTATION;\n  payload: { updater: (annotation: Annotation) => Annotation };\n};\nexport const UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nexport type UpdateAnnotationAction = {\n  type: typeof UPDATE_ANNOTATION;\n  payload: { annotation: Annotation; index: number };\n};\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport type RemoveAnnotationAction = {\n  type: typeof REMOVE_ANNOTATION;\n  payload: { index: number };\n};\nexport const RESET_ANNOTATION = 'RESET_ANNOTATION';\nexport type ResetAnnotationAction = {\n  type: typeof RESET_ANNOTATION;\n};\n\nexport type AnnotationAction =\n  | RequestAnnotationSuccessAction\n  | RequestAnnotationFailureAction\n  | CreateAnnotationAction\n  | UpdateCreatingAnnotationAction\n  | UpdateAnnotationAction\n  | RemoveAnnotationAction\n  | ResetAnnotationAction;\n\nexport type Position2D = {\n  x: number;\n  y: number;\n};\nexport type BoxLabel = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\nexport type Size2D = { width: number; height: number };\nexport type Annotation = {\n  id: number;\n  label: BoxLabel;\n  attribute: string;\n  annotationState: AnnotationState;\n};\n\nexport enum AnnotationState {\n  Empty = 'Empty',\n  P1Added = 'P1Added',\n  Finish = 'Finish',\n}\n\nexport enum LabelingCursorStates {\n  default = 'default',\n  pointer = 'pointer',\n  crosshair = 'crosshair',\n  neswResize = 'nesw-resize',\n  nwseResize = 'nwse-resize',\n}\nexport interface Box2dComponentProps {\n  workState: WorkState;\n  scale: number;\n  onSelect: Function;\n  annotation: Annotation;\n  annotationIndex: number;\n  selected: boolean;\n  visible?: boolean;\n  dispatch: any;\n  changeCursorState?: (cursorType?: LabelingCursorStates) => void;\n  // instanceID: number;\n}\nexport type BoxObject = {\n  init: () => Annotation;\n  createWithPoint: (point: Position2D, attribute: string) => Annotation;\n  add: (point: Position2D, arg1: Annotation) => Annotation;\n  setVerticesToValidValue: (arg0: Annotation) => Annotation;\n  setVerticesToInt: (arg0: Annotation) => Annotation;\n  setVerticesPointsOrder: (arg0: Annotation) => Annotation;\n};\n\nexport enum WorkState {\n  Creating = 'Creating',\n  Selecting = 'Selecting',\n  None = 'None',\n}\n\nexport enum LabelingType {\n  SingleAnnotation = 0,\n  MultiAnnotation = 1,\n}\n","import { Annotation } from './labelingPage/labelingPageTypes';\nimport { Camera } from './camera/cameraTypes';\nimport { Part } from './part/partTypes';\nimport { Location } from './location/locationTypes';\nimport { Project, Status } from './project/projectTypes';\nimport { LabelImage } from './image/imageTypes';\nimport { Setting } from './setting/settingType';\n\nexport interface State {\n  dialogIsOpen: boolean;\n  cameras: Camera[];\n  locations: Location[];\n  labelingPageState: LabelingPageState;\n  part: Part;\n  project: Project;\n  images: LabelImage[];\n  setting: Setting;\n}\n\nexport type LabelingPageState = { annotations: Annotation[] };\n\nexport const initialState: State = {\n  dialogIsOpen: false,\n  cameras: [],\n  locations: [],\n  images: [],\n  labelingPageState: { annotations: [] },\n  part: {\n    capturedImages: [],\n    isValid: true,\n  },\n  project: {\n    isLoading: false,\n    data: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 20,\n      modelUrl: '',\n      sendMessageToCloud: false,\n      framesPerMin: 6,\n      accuracyThreshold: 50,\n      probThreshold: '10',\n    },\n    originData: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 50,\n      modelUrl: '',\n      sendMessageToCloud: false,\n      framesPerMin: 6,\n      accuracyThreshold: 50,\n      probThreshold: '10',\n    },\n    trainingMetrics: {\n      prevConsequence: null,\n      curConsequence: null,\n    },\n    inferenceMetrics: {\n      successRate: null,\n      successfulInferences: null,\n      unIdetifiedItems: null,\n      isGpu: false,\n      averageTime: null,\n    },\n    status: Status.None,\n    error: null,\n    trainingLog: '',\n  },\n  setting: {\n    loading: false,\n    error: null,\n    current: {\n      id: -1,\n      key: '',\n      namespace: '',\n    },\n    origin: {\n      id: -1,\n      key: '',\n      namespace: '',\n    },\n    isTrainerValid: false,\n    appInsightHasInit: false,\n  },\n};\n","import {\n  GET_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  POST_CAMERA_SUCCESS,\n  Camera,\n  CameraAction,\n  DELETE_CAMERA_SUCCESS,\n} from './cameraTypes';\nimport { initialState } from '../State';\n\nconst camerasReducer = (state = initialState.cameras, action: CameraAction): Camera[] => {\n  switch (action.type) {\n    case GET_CAMERA_SUCCESS:\n      return action.payload;\n    case REQUEST_CAMERA_FAILURE:\n      return state;\n    case POST_CAMERA_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_CAMERA_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default camerasReducer;\n","// Describing the shape of the camera's slice of state\nexport type Camera = {\n  id?: number;\n  name: string;\n  rtsp: string;\n  area?: string;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_CAMERA_SUCCESS = 'GET_CAMERA_SUCCESS';\nexport const POST_CAMERA_SUCCESS = 'POST_CAMERA_SUCCESS';\nexport const DELETE_CAMERA_SUCCESS = 'DELETE_CAMERA_SUCCESS';\nexport const REQUEST_CAMERA_FAILURE = 'REQUEST_CAMERA_FAILURE';\n\nexport type GetCamerasSuccess = { type: typeof GET_CAMERA_SUCCESS; payload: Camera[] };\nexport type PostCameraSuccess = { type: typeof POST_CAMERA_SUCCESS; payload: Camera };\nexport type DeleteCameraSuccess = { type: typeof DELETE_CAMERA_SUCCESS; payload: { id: number } };\nexport type RequestCamerasFailure = { type: typeof REQUEST_CAMERA_FAILURE };\n\nexport type CameraAction =\n  | GetCamerasSuccess\n  | PostCameraSuccess\n  | DeleteCameraSuccess\n  | RequestCamerasFailure;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { LabelImage } from '../image/imageTypes';\n\n// Describing the shape of the chat's slice of state\nexport type Part = { capturedImages: LabelImage[]; isValid: boolean };\n\n// Describing the different ACTION NAMES available\nexport const ADD_CAPTURED_IMAGE = 'ADD_CAPTURED_IMAGE';\n\nexport type AddCapturedImageAction = {\n  type: typeof ADD_CAPTURED_IMAGE;\n  payload: {\n    newCapturedImage: LabelImage;\n  };\n};\n\nexport const UPDATE_CAPTURED_IMAGES = 'UPDATE_CAPTURED_IMAGES';\n\nexport type UpdateCapturedImageAction = {\n  type: typeof UPDATE_CAPTURED_IMAGES;\n  payload: {\n    capturedImages: LabelImage[];\n  };\n};\n\nexport type PartActionTypes = AddCapturedImageAction | UpdateCapturedImageAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type PartThunk<ReturnType = void> = ThunkAction<ReturnType, Part, unknown, Action<string>>;\n","import {\n  AnnotationState,\n  UPDATE_ANNOTATION,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  REMOVE_ANNOTATION,\n  AnnotationAction,\n  RESET_ANNOTATION,\n} from './labelingPageTypes';\nimport { initialState, LabelingPageState } from '../State';\n\nconst labelingPageStateReducer = (\n  state = initialState.labelingPageState,\n  action: AnnotationAction,\n): LabelingPageState => {\n  const newState = state;\n  switch (action.type) {\n    case REQUEST_ANNOTATION_SUCCESS:\n      newState.annotations = action.payload.annotations;\n      break;\n    case REQUEST_ANNOTATION_FAILURE:\n      break;\n    case CREATE_ANNOTATION:\n      newState.annotations.push(action.payload.annotation);\n      break;\n    case UPDATE_CREATING_ANNOTATION:\n      {\n        const creatingAnnotation = action.payload.updater(\n          newState.annotations[newState.annotations.length - 1],\n        );\n\n        if (creatingAnnotation.annotationState === AnnotationState.Finish) {\n          if (\n            (creatingAnnotation.label.x1 | 0) === (creatingAnnotation.label.x2 | 0) &&\n            (creatingAnnotation.label.y1 | 0) === (creatingAnnotation.label.y2 | 0)\n          ) {\n            newState.annotations.pop();\n          } else {\n            newState.annotations[newState.annotations.length - 1] = creatingAnnotation;\n            newState.annotations = [...newState.annotations];\n          }\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION:\n      newState.annotations[action.payload.index] = action.payload.annotation;\n      break;\n    case REMOVE_ANNOTATION:\n      newState.annotations = newState.annotations\n        .slice(0, action.payload.index)\n        .concat(newState.annotations.slice(action.payload.index + 1));\n      break;\n    case RESET_ANNOTATION:\n      newState.annotations = initialState.labelingPageState.annotations;\n      break;\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport default labelingPageStateReducer;\n","import { Dispatch, SetStateAction } from 'react';\nimport { Box } from '../../type';\n\nexport enum CreatingState {\n  Disabled,\n  Waiting,\n  Creating,\n}\n\nexport type LiveViewProps = {\n  AOIs: Box[];\n  setAOIs: Dispatch<SetStateAction<Box[]>>;\n  visible: boolean;\n  imageInfo: [HTMLImageElement, string, { width: number; height: number }];\n  creatingState: CreatingState;\n  setCreatingState: Dispatch<SetStateAction<CreatingState>>;\n};\n\nexport type AOILayerProps = {\n  imgWidth: number;\n  imgHeight: number;\n  AOIs: Box[];\n  setAOIs: Dispatch<SetStateAction<Box[]>>;\n  visible: boolean;\n  creatingState: CreatingState;\n};\n\nexport type MaskProps = {\n  width: number;\n  height: number;\n  holes: Box[];\n  visible: boolean;\n};\n\nexport type AOIBoxProps = {\n  box: Box;\n  onBoxChange: (updateBox: (prevBox: Box) => Box) => void;\n  boundary: { x1: number; y1: number; x2: number; y2: number };\n  visible: boolean;\n  removeBox: (id: string) => void;\n  creatingState: CreatingState;\n};\n","import {\n  GET_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  POST_LOCATION_SUCCESS,\n  Location,\n  LocationAction,\n} from './locationTypes';\nimport { initialState } from '../State';\n\nconst locationsReducer = (state = initialState.locations, action: LocationAction): Location[] => {\n  switch (action.type) {\n    case GET_LOCATION_SUCCESS:\n      return action.payload;\n    case REQUEST_LOCATION_FAILURE:\n      return state;\n    case POST_LOCATION_SUCCESS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default locationsReducer;\n","// Describing the shape of the loaction's slice of state\nexport type Location = {\n  id?: number;\n  name: string;\n  description: string;\n  projectId?: number;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const REQUEST_LOCATION_FAILURE = 'REQUEST_LOCATION_FAILURE';\nexport const POST_LOCATION_SUCCESS = 'POST_LOCATION_SUCCESS';\n\nexport type GetLocationsSuccess = { type: typeof GET_LOCATION_SUCCESS; payload: Location[] };\nexport type RequestLocationsFailure = { type: typeof REQUEST_LOCATION_FAILURE };\nexport type PostLocationSuccess = { type: typeof POST_LOCATION_SUCCESS; payload: Location };\n\nexport type LocationAction = GetLocationsSuccess | RequestLocationsFailure | PostLocationSuccess;\n","import {\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n  DialogIsOpenAction,\n} from './dialogIsOpenTypes';\nimport { initialState } from '../State';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import { initialState } from '../State';\nimport {\n  Project,\n  ProjectActionTypes,\n  GET_PROJECT_SUCCESS,\n  GET_PROJECT_FAILED,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FALIED,\n  GET_PROJECT_REQUEST,\n  UPDATE_PROJECT_DATA,\n  POST_PROJECT_REQUEST,\n  GET_TRAINING_LOG_REQUEST,\n  GET_TRAINING_LOG_SUCCESS,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GET_TRAINING_METRICS_REQUEST,\n  GET_TRAINING_METRICS_SUCCESS,\n  GET_TRAINING_METRICS_FAILED,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GET_INFERENCE_METRICS_FAILED,\n  UPDATE_ORIGIN_PROJECT_DATA,\n  RESET_STATUS,\n} from './projectTypes';\n\nconst projectReducer = (state = initialState.project, action: ProjectActionTypes): Project => {\n  switch (action.type) {\n    case GET_PROJECT_REQUEST:\n      return { ...state, isLoading: true, error: null };\n    case GET_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: { ...action.payload.project },\n        originData: { ...action.payload.project },\n        error: null,\n      };\n    case GET_PROJECT_FAILED:\n      return { ...state, isLoading: false, error: action.error };\n    case POST_PROJECT_REQUEST:\n      return { ...state, isLoading: true };\n    case POST_PROJECT_SUCCESS:\n      return { ...state, isLoading: false };\n    case POST_PROJECT_FALIED:\n      return { ...state, isLoading: false, error: action.error };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n          sendMessageToCloud: false,\n          framesPerMin: 6,\n          accuracyThreshold: 50,\n          probThreshold: '10',\n        },\n        originData: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n          sendMessageToCloud: false,\n          framesPerMin: 6,\n          accuracyThreshold: 50,\n          probThreshold: '10',\n        },\n        inferenceMetrics: {\n          successRate: 0,\n          successfulInferences: 0,\n          unIdetifiedItems: 0,\n          isGpu: false,\n          averageTime: 0,\n        },\n        trainingMetrics: {\n          curConsequence: null,\n          prevConsequence: null,\n        },\n        trainingLog: '',\n        status: Status.None,\n        error: null,\n      };\n    case DELETE_PROJECT_FALIED:\n      return { ...state };\n    case UPDATE_PROJECT_DATA:\n      return { ...state, data: { ...state.data, ...action.payload } };\n    case UPDATE_ORIGIN_PROJECT_DATA:\n      return { ...state, originData: state.data };\n    case GET_TRAINING_LOG_REQUEST:\n      return {\n        ...state,\n      };\n    case GET_TRAINING_LOG_SUCCESS:\n      return {\n        ...state,\n        trainingLog: action.payload.trainingLog,\n        status: action.payload.newStatus,\n      };\n    case GET_TRAINING_LOG_FAILED:\n      return {\n        ...state,\n        trainingLog: '',\n        data: { ...state.data },\n        status: Status.TrainingFailed,\n        error: action.error,\n      };\n    case GET_TRAINING_METRICS_REQUEST:\n      return state;\n    case GET_TRAINING_METRICS_SUCCESS:\n      return {\n        ...state,\n        trainingMetrics: action.payload,\n        status: Status.StartInference,\n      };\n    case GET_TRAINING_METRICS_FAILED:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case GET_INFERENCE_METRICS_REQUEST:\n      return state;\n    case GET_INFERENCE_METRICS_SUCCESS:\n      return { ...state, inferenceMetrics: action.payload };\n    case GET_INFERENCE_METRICS_FAILED:\n      return { ...state, error: action.error };\n    case RESET_STATUS:\n      return { ...state, status: Status.None };\n    case 'UPDATE_PROB_THRESHOLD_REQUEST':\n      return { ...state, isLoading: true, error: null };\n    case 'UPDATE_PROB_THRESHOLD_SUCCESS':\n      return { ...state, isLoading: false };\n    case 'UPDATE_PROB_THRESHOLD_FAILED':\n      return { ...state, isLoading: false, error: action.error };\n    default:\n      return { ...state };\n  }\n};\n\nexport default projectReducer;\n","import {\n  GET_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  POST_LABEL_IMAGE_SUCCESS,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  LabelImageAction,\n  LabelImage,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n} from './imageTypes';\nimport { initialState } from '../State';\n\nconst labelImagesReducer = (state = initialState.images, action: LabelImageAction): LabelImage[] => {\n  switch (action.type) {\n    case GET_LABEL_IMAGE_SUCCESS:\n      return action.payload;\n    case REQUEST_LABEL_IMAGE_FAILURE:\n      return state;\n    case POST_LABEL_IMAGE_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_LABEL_IMAGE_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    case UPDATE_LABEL_IMAGE_ANNOTATION: {\n      const newState = [...state];\n      const updatedImageIdx = newState.findIndex((e) => e.id === action.payload.id);\n      newState[updatedImageIdx] = {\n        ...newState[updatedImageIdx],\n        labels: action.payload.labels,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default labelImagesReducer;\n","// Describe the shape of the labelImage's slice of state\nexport type LabelImage = {\n  id: number;\n  image: string;\n  labels: string;\n  part: string;\n  is_relabel: boolean;\n  confidence: number;\n};\n\n// Describe the different ACTION NAMES available\nexport const GET_LABEL_IMAGE_SUCCESS = 'GET_LABEL_IMAGE_SUCCESS';\nexport const POST_LABEL_IMAGE_SUCCESS = 'POST_LABEL_IMAGE_SUCCESS';\nexport const DELETE_LABEL_IMAGE_SUCCESS = 'DELETE_LABEL_IMAGE_SUCCESS';\nexport const REQUEST_LABEL_IMAGE_FAILURE = 'REQUEST_LABEL_IMAGE_FAILURE';\nexport const UPDATE_LABEL_IMAGE_ANNOTATION = 'UPDATE_LABEL_IMAGE_ANNOTATION';\n\nexport type GetLabelImagesSuccess = { type: typeof GET_LABEL_IMAGE_SUCCESS; payload: LabelImage[] };\nexport type PostLabelImageSuccess = { type: typeof POST_LABEL_IMAGE_SUCCESS; payload: LabelImage };\nexport type DeleteLabelImageSuccess = { type: typeof DELETE_LABEL_IMAGE_SUCCESS; payload: { id: number } };\nexport type RequestLabelImagesFailure = { type: typeof REQUEST_LABEL_IMAGE_FAILURE };\nexport type UpdateLabelImageAnnotation = {\n  type: typeof UPDATE_LABEL_IMAGE_ANNOTATION;\n  payload: { id: number; labels: any };\n};\n\nexport type LabelImageAction =\n  | GetLabelImagesSuccess\n  | PostLabelImageSuccess\n  | DeleteLabelImageSuccess\n  | RequestLabelImagesFailure\n  | UpdateLabelImageAnnotation;\n","import { initialState } from '../State';\nimport { SettingActionType, Setting } from './settingType';\n\nconst settingReducer = (state = initialState.setting, action: SettingActionType): Setting => {\n  switch (action.type) {\n    case 'UPDATE_KEY':\n      return { ...state, current: { ...state.current, key: action.payload } };\n    case 'UPDATE_NAMESPACE':\n      return { ...state, current: { ...state.current, namespace: action.payload } };\n    case 'REQUEST_START':\n      return { ...state, loading: true };\n    case 'REQUEST_SUCCESS':\n      return action.payload;\n    case 'REQUEST_FAIL':\n      return { ...state, error: action.error };\n    case 'GET_ALL_CV_PROJECTS_REQUEST':\n      return { ...state, loading: true };\n    case 'GET_ALL_CV_PROJECTS_SUCCESS':\n      return { ...state, loading: false, cvProjects: action.pyload };\n    case 'GET_ALL_CV_PROJECTS_ERROR':\n      return { ...state, loading: false, error: action.error };\n    default:\n      return state;\n  }\n};\n\nexport default settingReducer;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport camerasReducer from './camera/cameraReducer';\nimport partReducer from './part/partReducer';\nimport labelingPageStateReducer from './labelingPage/labelingPageReducer';\nimport locationsReducer from './location/locationReducer';\nimport dialogIsOpenReducer from './dialog/dialogIsOpenReducer';\nimport projectReducer from './project/projectReducer';\nimport labelImagesReducer from './image/imageReducer';\nimport settingReducer from './setting/settingReducer';\n\nconst rootReducer = combineReducers({\n  cameras: camerasReducer,\n  locations: locationsReducer,\n  part: partReducer,\n  labelingPageState: labelingPageStateReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  project: projectReducer,\n  images: labelImagesReducer,\n  setting: settingReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State } from './State';\nimport { persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React, { FC, memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex, Text, Image } from '@fluentui/react-northstar';\n\ntype BgImgStyle = {\n  backgroundSize?: '60%';\n  backgroundPosition?: 'center';\n  backgroundRepeat?: 'no-repeat';\n};\ninterface ImageLinkProps {\n  to?: string;\n  imgSrc?: string;\n  defaultSrc?: string;\n  bgImgSrc?: string;\n  label?: string;\n  imgPadding?: string;\n  width: string;\n  height?: string;\n  bgImgStyle?: BgImgStyle;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst ImageLink: FC<ImageLinkProps> = ({\n  to = '',\n  imgSrc,\n  defaultSrc,\n  bgImgSrc,\n  label = '',\n  imgPadding = '0.625em',\n  width = '6.25em',\n  height = '6.25em',\n  bgImgStyle,\n  pointerCursor = false,\n  onClick,\n}) => {\n  return (\n    <Flex column styles={{ width }}>\n      {to === '' ? (\n        <div style={{ height }} onClick={onClick}>\n          <Image\n            src={imgSrc ?? defaultSrc}\n            styles={{\n              padding: imgPadding,\n              height: '100%',\n              objectFit: 'contain',\n              backgroundImage: `url(${bgImgSrc})`,\n              cursor: pointerCursor ? 'pointer' : 'default',\n              ...bgImgStyle,\n            }}\n          />\n        </div>\n      ) : (\n        <Link to={to}>\n          <div style={{ height }} onClick={onClick}>\n            <Image\n              src={imgSrc ?? defaultSrc}\n              styles={{\n                padding: imgPadding,\n                height: '100%',\n                objectFit: 'contain',\n                backgroundImage: `url(${bgImgSrc})`,\n                ...bgImgStyle,\n              }}\n            />\n          </div>\n        </Link>\n      )}\n      <Text align=\"center\">{label}</Text>\n    </Flex>\n  );\n};\n\nexport default memo(ImageLink);\n","import React, { FC } from 'react';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nimport ImageLink from '../components/ImageLink';\n\nconst Home: FC = () => {\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text size=\"larger\" weight=\"semibold\">\n        Hello User!\n      </Text>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        GET STARTED:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/location-filled.png\"\n          to=\"/locations\"\n          label=\"Register a new Location\"\n          width=\"6.25em\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/camera-filled.png\"\n          to=\"/cameras\"\n          label=\"Register a new Camera\"\n          width=\"6.25em\"\n          imgPadding=\"0.625em 0.1875em 0.625em 0.1875em\"\n        />\n        <ImageLink imgSrc=\"/icons/part-filled.png\" to=\"/parts\" label=\"Register a new Part\" width=\"6.25em\" />\n      </Flex>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        SELECT FROM THE FOLLOWING TASKS:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/doubleCube.png\"\n          to=\"/partIdentification\"\n          label=\"Identify Parts\"\n          width=\"6.25em\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/manual-filled.png\"\n          to=\"/manual\"\n          label=\"Identify items manually\"\n          width=\"6.25em\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport {\n  GET_CAMERA_SUCCESS,\n  POST_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  GetCamerasSuccess,\n  RequestCamerasFailure,\n  PostCameraSuccess,\n  Camera,\n  DELETE_CAMERA_SUCCESS,\n  DeleteCameraSuccess,\n} from './cameraTypes';\n\nconst getCamerasSuccess = (data: Camera[]): GetCamerasSuccess => ({\n  type: GET_CAMERA_SUCCESS,\n  payload: data,\n});\n\nconst deleteCameraSuccess = (id: number): DeleteCameraSuccess => ({\n  type: DELETE_CAMERA_SUCCESS,\n  payload: { id },\n});\n\nconst requestCamerasFailure = (error: any): RequestCamerasFailure => {\n  alert(error);\n  return { type: REQUEST_CAMERA_FAILURE };\n};\n\nconst postCameraSuccess = (data: Camera): PostCameraSuccess => ({\n  type: POST_CAMERA_SUCCESS,\n  payload: data,\n});\n\nexport const getCameras = () => (dispatch): Promise<void> => {\n  return axios('/api/cameras/')\n    .then(({ data }) => {\n      dispatch(getCamerasSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const postCamera = (newCamera: Camera) => (dispatch): Promise<void> => {\n  return axios('/api/cameras/', {\n    method: 'POST',\n    data: newCamera,\n  })\n    .then(({ data }) => {\n      dispatch(postCameraSuccess(data));\n      return void 0;\n    })\n    .catch((e) => {\n      if (e.response) {\n        throw new Error(e.response.data.log);\n      } else if (e.request) {\n        throw new Error(e.request);\n      } else {\n        throw e;\n      }\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const deleteCamera = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/cameras/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteCameraSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n","import React, { FC } from 'react';\nimport { Button, AddIcon } from '@fluentui/react-northstar';\n\ninterface AddButtonProps {\n  onClick?: () => void;\n}\nconst AddButton: FC<AddButtonProps> = ({ onClick }) => (\n  <Button\n    primary\n    fluid\n    circular\n    content={<AddIcon size=\"largest\" circular />}\n    styles={{ width: '6em', height: '6em' }}\n    onClick={onClick}\n  />\n);\n\nexport default AddButton;\n","import React, { useState } from 'react';\nimport { Dialog, Input, Flex, TextArea } from '@fluentui/react-northstar';\nimport * as R from 'ramda';\n\nimport AddButton from '../AddButton';\n\nexport type AddModuleDialogProps = {\n  header: string;\n  fields: { placeholder: string; key: string; type: 'input' | 'textArea'; required: boolean }[];\n  onConfirm: (formData: Record<string, string>) => void;\n  trigger?: JSX.Element;\n};\n\nexport const AddModuleDialog: React.FC<AddModuleDialogProps> = ({ trigger, header, fields, onConfirm }) => {\n  const [formData, setFormData] = useState(\n    fields.reduce((acc, cur) => {\n      return { ...acc, [cur.key]: '' };\n    }, {}),\n  );\n\n  const isSubmitDisabled = fields.some((e) => e.required && !formData[e.key]);\n\n  return (\n    <Dialog\n      styles={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '500px',\n      }}\n      confirmButton={{ content: 'Submit', disabled: isSubmitDisabled }}\n      cancelButton=\"Cancel\"\n      onConfirm={(): void => onConfirm(formData)}\n      header={header}\n      trigger={\n        trigger || (\n          <div style={{ alignSelf: 'flex-end' }}>\n            <AddButton />\n          </div>\n        )\n      }\n      content={\n        <Flex column gap=\"gap.large\" hAlign=\"center\">\n          {fields.map((e) =>\n            e.type === 'input' ? (\n              <Input\n                key={e.key}\n                placeholder={e.placeholder}\n                value={formData[e.key]}\n                onChange={(_, { value }): void => setFormData(R.assoc(e.key, value, formData))}\n                fluid\n                required={e.required}\n              />\n            ) : (\n              <TextArea\n                key={e.key}\n                placeholder={e.placeholder}\n                value={formData[e.key]}\n                onChange={(_, { value }): void => setFormData(R.assoc(e.key, value, formData))}\n                styles={{ height: '100px' }}\n                fluid\n                required={e.required}\n              />\n            ),\n          )}\n        </Flex>\n      }\n    />\n  );\n};\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid } from '@fluentui/react-northstar';\n\nimport { postCamera, getCameras } from '../store/camera/cameraActions';\nimport ImageLink from '../components/ImageLink';\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { AddModuleDialog } from '../components/AddModuleDialog/AddModuleDialog';\n\nconst Cameras: FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { cameras } = useSelector<State, { dialogIsOpen: boolean; cameras: Camera[] }>((state) => ({\n    dialogIsOpen: state.dialogIsOpen,\n    cameras: state.cameras.filter((e) => !e.is_demo),\n  }));\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {cameras.map((camera, i) => (\n          <ImageLink\n            key={i}\n            to={`/cameras/detail?name=${camera.name}`}\n            defaultSrc=\"/icons/Play.png\"\n            bgImgSrc=\"/icons/defaultCamera.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            bgImgStyle={{\n              backgroundSize: '60%',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n            }}\n            label={camera.name}\n          />\n        ))}\n      </Grid>\n      <AddModuleDialog\n        header=\"Add Camera\"\n        fields={[\n          {\n            placeholder: 'Name',\n            key: 'name',\n            type: 'input',\n            required: true,\n          },\n          {\n            placeholder: 'RTSP URL',\n            key: 'rtsp',\n            type: 'input',\n            required: true,\n          },\n        ]}\n        onConfirm={({ name, rtsp }): void => {\n          dispatch(postCamera({ name, rtsp, is_demo: false }));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Cameras;\n","import React, { FC, useState, CSSProperties } from 'react';\nimport { Flex, Text, Button, Dialog } from '@fluentui/react-northstar';\n\n/**\n * @param trigger Trigger Button\n * @param primaryStyles CSS style of Confirm Button\n */\ninterface FluentUIStylesProperties extends CSSProperties {\n  [':hover']: any;\n  [':active']: any;\n}\n\ninterface ConfirmDialogProps {\n  trigger: JSX.Element;\n  onConfirm: () => void;\n  primaryStyles: FluentUIStylesProperties;\n  content: string;\n}\nconst ConfirmDialog: FC<ConfirmDialogProps> = ({ trigger, onConfirm, primaryStyles, content }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '20em', padding: '0.5em' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      footer={\n        <Flex column gap=\"gap.large\">\n          <Text size=\"large\" align=\"center\">\n            {content}\n          </Text>\n          <Flex space=\"around\">\n            <Button primary content=\"Confirm\" styles={primaryStyles} onClick={onConfirm} />\n            <Button content=\"Cancel\" onClick={(): void => setOpen(false)} />\n          </Flex>\n        </Flex>\n      }\n    />\n  );\n};\n\nexport default ConfirmDialog;\n","import { useEffect, useState } from 'react';\n\n/**\n * Fetch the parts data from server\n */\nexport const useParts = (isDemo?: boolean): any[] => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const url = isDemo === undefined ? '/api/parts/' : `/api/parts/?is_demo=${Number(isDemo)}`;\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data);\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [isDemo]);\n\n  return parts;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Stage, Image as KonvaImage, Shape, Group, Line, Layer, Circle, Path } from 'react-konva';\nimport Konva from 'konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport * as R from 'ramda';\nimport uniqid from 'uniqid';\n\nimport {\n  LiveViewProps,\n  MaskProps,\n  AOIBoxProps,\n  AOILayerProps,\n  CreatingState,\n} from './LiveViewContainer.type';\n\nconst getRelativePosition = (layer: Konva.Layer): { x: number; y: number } => {\n  const transform = layer.getAbsoluteTransform().copy();\n  transform.invert();\n  const pos = layer.getStage().getPointerPosition();\n  return transform.point(pos);\n};\n\nexport const LiveViewScene: React.FC<LiveViewProps> = ({\n  AOIs,\n  setAOIs,\n  visible,\n  imageInfo,\n  creatingState,\n  setCreatingState,\n}) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const stageRef = useRef(null);\n  const imgRef = useRef(null);\n  const layerRef = useRef<Konva.Layer>(null);\n\n  const [imgEle, status, { width: imgWidth, height: imgHeight }] = imageInfo;\n\n  /* The component need to support image with Content-type \"multipart/x-mixed-replace\",\n     which will keep updating the image data.\n     Keep updating the canvas by using Konva.Animation so we can see the latest image.\n  */\n  useEffect(() => {\n    const anim = new Konva.Animation(() => {}, layerRef.current);\n    anim.start();\n\n    return (): void => {\n      anim.stop();\n    };\n  }, []);\n\n  useEffect(() => {\n    const { width: divWidth, height: divHeight } = divRef.current.getBoundingClientRect();\n    stageRef.current.width(divWidth);\n    stageRef.current.height(divHeight);\n  }, []);\n\n  /* Fit Image to Stage */\n  useEffect(() => {\n    if (imgWidth !== 0 && imgHeight !== 0) {\n      const { width: stageWidth, height: stageHeight } = stageRef.current.size();\n      const scale = Math.min(stageWidth / imgWidth, stageHeight / imgHeight);\n      layerRef.current.scale({ x: scale, y: scale });\n\n      const offsetX = (stageWidth - imgWidth * scale) / 2;\n      const offsetY = (stageHeight - imgHeight * scale) / 2;\n      layerRef.current.position({ x: offsetX, y: offsetY });\n    }\n  }, [imgHeight, imgWidth]);\n\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    if (creatingState === CreatingState.Disabled) return;\n\n    const { x, y } = getRelativePosition(e.target.getLayer());\n    setAOIs((prev) => [...prev, { id: uniqid(), x1: x, y1: y, x2: x, y2: y }]);\n    setCreatingState(CreatingState.Creating);\n  };\n\n  const onMouseMove = (e: KonvaEventObject<MouseEvent>): void => {\n    if (creatingState !== CreatingState.Creating) return;\n\n    const { x, y } = getRelativePosition(e.target.getLayer());\n    setAOIs(R.adjust(-1, (rear) => ({ ...rear, x2: x, y2: y })));\n  };\n\n  return (\n    <div ref={divRef} style={{ width: '100%', height: '100%' }}>\n      <Stage ref={stageRef} style={{ cursor: creatingState !== CreatingState.Disabled ? 'crosshair' : '' }}>\n        <Layer\n          ref={layerRef}\n          onMouseDown={onMouseDown}\n          onMouseMove={onMouseMove}\n          onMouseUp={(): void => {\n            if (creatingState === CreatingState.Creating) setCreatingState(CreatingState.Disabled);\n          }}\n        >\n          <KonvaImage image={imgEle} ref={imgRef} />\n          {\n            /* Render when image is loaded to prevent AOI boxes show in unscale size */\n            status === 'loaded' && (\n              <AOILayer\n                imgWidth={imgWidth}\n                imgHeight={imgHeight}\n                AOIs={AOIs}\n                setAOIs={setAOIs}\n                visible={visible}\n                creatingState={creatingState}\n              />\n            )\n          }\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nconst AOILayer: React.FC<AOILayerProps> = ({\n  imgWidth,\n  imgHeight,\n  AOIs,\n  setAOIs,\n  visible,\n  creatingState,\n}): JSX.Element => {\n  return (\n    <>\n      <Mask width={imgWidth} height={imgHeight} holes={AOIs} visible={visible} />\n      {AOIs.map((e, i) => (\n        <AOIBox\n          key={e.id}\n          box={e}\n          visible={visible}\n          boundary={{ x1: 0, y1: 0, x2: imgWidth, y2: imgHeight }}\n          onBoxChange={(updateBox): void =>\n            setAOIs((prev) => {\n              const newBox = updateBox(prev[i]);\n              if (newBox.x1 > newBox.x2) {\n                const tmp = newBox.x1;\n                newBox.x1 = newBox.x2;\n                newBox.x2 = tmp;\n              }\n\n              if (newBox.y1 > newBox.y2) {\n                const tmp = newBox.y1;\n                newBox.y1 = newBox.y2;\n                newBox.y2 = tmp;\n              }\n\n              const newAOIs = [...prev];\n              newAOIs[i] = newBox;\n              return newAOIs;\n            })\n          }\n          removeBox={(id): void => {\n            setAOIs((prev) => prev.filter((ele) => ele.id !== id));\n          }}\n          creatingState={creatingState}\n        />\n      ))}\n    </>\n  );\n};\n\nconst Mask: React.FC<MaskProps> = ({ width, height, holes, visible }) => {\n  return (\n    <Shape\n      width={width}\n      height={height}\n      fill={'rgba(0,0,0,0.5)'}\n      visible={visible}\n      sceneFunc={(ctx, shape): void => {\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(shape.width(), 0);\n        ctx.lineTo(shape.width(), shape.height());\n        ctx.lineTo(0, shape.height());\n        ctx.lineTo(0, 0);\n\n        // Nonozero-rule\n        holes.forEach(({ x1, y1, x2, y2 }) => {\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x1, y2);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, y1);\n          ctx.lineTo(x1, y1);\n        });\n\n        ctx.fillStrokeShape(shape);\n      }}\n      listening={false}\n    />\n  );\n};\n\nconst AOIBox: React.FC<AOIBoxProps> = ({ box, onBoxChange, visible, boundary, removeBox, creatingState }) => {\n  const { x1, y1, x2, y2 } = box;\n  const COLOR = 'white';\n  const [cancelBtnVisible, setCanceBtnVisible] = useState(false);\n  const groupRef = useRef<Konva.Group>(null);\n\n  const handleDrag = (e: KonvaEventObject<DragEvent>): void => {\n    let { x, y } = e.target.position();\n\n    if (x < boundary.x1) {\n      x = boundary.x1;\n      e.target.x(x);\n    }\n\n    if (x > boundary.x2) {\n      x = boundary.x2;\n      e.target.x(x);\n    }\n\n    if (y < boundary.y1) {\n      y = boundary.y1;\n      e.target.y(y);\n    }\n\n    if (y > boundary.y2) {\n      y = boundary.y2;\n      e.target.y(y);\n    }\n\n    switch (e.target.name()) {\n      case 'leftTop':\n        onBoxChange((prev) => ({ ...prev, x1: x, y1: y }));\n        break;\n      case 'rightTop':\n        onBoxChange((prev) => ({ ...prev, x2: x, y1: y }));\n        break;\n      case 'rightBottom':\n        onBoxChange((prev) => ({ ...prev, x2: x, y2: y }));\n        break;\n      case 'leftBottom':\n        onBoxChange((prev) => ({ ...prev, x1: x, y2: y }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const scale = groupRef.current?.getLayer().scale().x || 1;\n\n  const radius = 5 / scale;\n\n  return (\n    <Group\n      visible={visible}\n      onMouseEnter={(): void => setCanceBtnVisible(true)}\n      onMouseLeave={(): void => setCanceBtnVisible(false)}\n      cache={[{ drawBorder: true }]}\n      ref={groupRef}\n    >\n      {/** A bigger region for mouseEnter event */}\n      <Line x={x1} y={y1 - 80} points={[0, -80, 0, y2 - y1, x2 - x1, y2 - y1, x2 - x1, -80]} closed />\n      <Line\n        x={x1}\n        y={y1}\n        points={[0, 0, 0, y2 - y1, x2 - x1, y2 - y1, x2 - x1, 0]}\n        closed\n        stroke={COLOR}\n        strokeWidth={2 / scale}\n      />\n      <Circle draggable name=\"leftTop\" x={x1} y={y1} radius={radius} fill={COLOR} onDragMove={handleDrag} />\n      <Circle draggable name=\"rightTop\" x={x2} y={y1} radius={radius} fill={COLOR} onDragMove={handleDrag} />\n      <Circle\n        draggable\n        name=\"rightBottom\"\n        x={x2}\n        y={y2}\n        radius={radius}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Circle\n        draggable\n        name=\"leftBottom\"\n        x={x1}\n        y={y2}\n        radius={radius}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Path\n        x={x1}\n        y={y1 - 30 / scale}\n        data=\"M 0 0 L 20 20 M 20 0 L 0 20\"\n        stroke=\"red\"\n        strokeWidth={5}\n        visible={cancelBtnVisible && creatingState === CreatingState.Disabled}\n        onMouseEnter={(e): void => {\n          e.target.getStage().container().style.cursor = 'pointer';\n        }}\n        onMouseLeave={(e): void => {\n          e.target.getStage().container().style.cursor = 'default';\n        }}\n        onClick={(): void => removeBox(box.id)}\n        scale={{ x: 1 / scale, y: 1 / scale }}\n      />\n    </Group>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\n\ntype ImageState = {\n  image: HTMLImageElement;\n  status: string;\n  size: { width: number; height: number };\n};\nconst defaultState: ImageState = {\n  image: undefined,\n  status: 'loading',\n  size: { width: 0, height: 0 },\n};\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nconst useImage = (\n  url: string,\n  crossOrigin: string,\n  isMixedReplace = false,\n): [HTMLImageElement, string, { width: number; height: number }] => {\n  const [imageState, setImageState] = useState<ImageState>(defaultState);\n  const { image, status, size } = imageState;\n\n  const prevUrl = usePrevious<string>(url);\n  const prevImageWidth = usePrevious(image?.width);\n  const prevImageHeight = usePrevious(image?.height);\n\n  useEffect(() => {\n    if (!url) return;\n\n    const img = document.createElement('img');\n\n    if (url !== prevUrl) {\n      setImageState((prev) => ({ ...prev, image: prev.image, status: 'loading' }));\n    }\n\n    const onload = (): void => {\n      setImageState({\n        image: img,\n        status: 'loaded',\n        size: { width: img.width, height: img.height },\n      });\n    };\n\n    const onerror = (): void => {\n      setImageState((prev) => ({ ...prev, image: undefined, status: 'failed' }));\n    };\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n\n    img.src = url;\n\n    return (): void => {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, prevUrl]);\n\n  useEffect(() => {\n    let request;\n    const checkImageSize = (): void => {\n      if (prevImageWidth !== image?.width || prevImageHeight !== image?.height)\n        setImageState((prev) => ({ ...prev, size: { width: image?.width, height: image?.height } }));\n      request = window.requestAnimationFrame(checkImageSize);\n    };\n\n    // For Mixed Replace case, keep checking if the image size has change\n    if (isMixedReplace) {\n      request = window.requestAnimationFrame(checkImageSize);\n\n      return (): void => window.cancelAnimationFrame(request);\n    }\n  }, [isMixedReplace, image, prevImageWidth, prevImageHeight]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status, size];\n};\n\nexport default useImage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as R from 'ramda';\nimport Axios from 'axios';\nimport uniqid from 'uniqid';\n\nimport { Text, Checkbox, Flex, Button, Alert } from '@fluentui/react-northstar';\nimport { LiveViewScene } from './LiveViewScene';\nimport { AOIData, Box } from '../../type';\nimport useImage from '../LabelingPage/util/useImage';\nimport { CreatingState } from './LiveViewContainer.type';\n\nexport const LiveViewContainer: React.FC<{\n  showVideo: boolean;\n  initialAOIData: AOIData;\n  cameraId: number;\n}> = ({ showVideo, initialAOIData, cameraId }) => {\n  const [showAOI, setShowAOI] = useState(initialAOIData.useAOI);\n  const lasteUpdatedAOIs = useRef(initialAOIData.AOIs);\n  const [AOIs, setAOIs] = useState<Box[]>(lasteUpdatedAOIs.current);\n  const [showUpdateSuccessTxt, setShowUpdateSuccessTxt] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>(null);\n  const imageInfo = useImage(`http://${window.location.hostname}:5000/video_feed?inference=1`, '', true);\n  const [creatingAOI, setCreatingAOI] = useState(CreatingState.Disabled);\n\n  const onCheckboxClick = async (): Promise<void> => {\n    setShowAOI(!showAOI);\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: !showAOI,\n          AOIs: lasteUpdatedAOIs.current,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      if (!showAOI) setAOIs(lasteUpdatedAOIs.current);\n    } catch (e) {\n      // Set back to the state before updating for switch case\n      setShowAOI(showAOI);\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  const onUpdate = async (): Promise<void> => {\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: showAOI,\n          AOIs,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      lasteUpdatedAOIs.current = R.clone(AOIs);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (showUpdateSuccessTxt) {\n      const timer = setTimeout(() => {\n        setShowUpdateSuccessTxt(false);\n      }, 3000);\n      return (): void => clearTimeout(timer);\n    }\n  }, [showUpdateSuccessTxt]);\n\n  useEffect(() => {\n    if (!AOIs.length)\n      setAOIs([\n        {\n          id: uniqid(),\n          x1: imageInfo[2].width * 0.1,\n          y1: imageInfo[2].height * 0.1,\n          x2: imageInfo[2].width * 0.9,\n          y2: imageInfo[2].height * 0.9,\n        },\n      ]);\n  }, [AOIs.length, imageInfo[2].width, imageInfo[2].height]);\n\n  const hasEdit = !R.equals(lasteUpdatedAOIs.current, AOIs);\n  const updateBtnDisabled = !showAOI || !hasEdit;\n\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Flex space=\"between\">\n        <Text styles={{ width: '150px' }} size=\"medium\">\n          Live View:\n        </Text>\n        {error && <Alert danger header=\"Failed to Update!\" content={`${error.name}: ${error.message}`} />}\n        <Flex hAlign=\"end\" gap=\"gap.small\">\n          <Checkbox\n            labelPosition=\"start\"\n            label=\"Show area of interest\"\n            toggle\n            checked={showAOI}\n            onClick={onCheckboxClick}\n          />\n          <Button\n            content=\"Update\"\n            primary\n            disabled={updateBtnDisabled}\n            onClick={onUpdate}\n            loading={loading}\n          />\n          <Button\n            content=\"Create Area of Interest\"\n            primary={creatingAOI !== CreatingState.Disabled}\n            disabled={!showAOI}\n            onClick={(): void => {\n              if (creatingAOI === CreatingState.Disabled) setCreatingAOI(CreatingState.Waiting);\n              else setCreatingAOI(CreatingState.Disabled);\n            }}\n            circular\n            styles={{ padding: '0 5px' }}\n          />\n          <Text styles={{ visibility: showUpdateSuccessTxt ? 'visible' : 'hidden' }}>Updated!</Text>\n        </Flex>\n      </Flex>\n      <div style={{ width: '100%', height: '50vh', backgroundColor: 'black' }}>\n        {showVideo ? (\n          <LiveViewScene\n            AOIs={AOIs}\n            setAOIs={setAOIs}\n            visible={showAOI}\n            imageInfo={imageInfo}\n            creatingState={creatingAOI}\n            setCreatingState={setCreatingAOI}\n          />\n        ) : null}\n      </div>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Flex, Text } from '@fluentui/react-northstar';\n\ntype ListItemProps = {\n  title: string;\n  footerText?: string;\n};\n\nexport const ListItem: React.FC<ListItemProps> = ({ title, footerText = '', children }) => {\n  return (\n    <div>\n      <Flex vAlign=\"center\" gap=\"gap.medium\">\n        <Text style={{ width: '200px' }} size=\"medium\">{`${title}: `}</Text>\n        {typeof children === 'string' || typeof children === 'number' ? (\n          <Text size=\"medium\">{children}</Text>\n        ) : (\n          children\n        )}\n      </Flex>\n      <Text size=\"smallest\" error>\n        {footerText}\n      </Text>\n    </div>\n  );\n};\n","import React, { FC, memo } from 'react';\nimport { Flex, Text, Grid, Button, Status } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ConfirmDialog from '../ConfirmDialog';\nimport { deleteCamera } from '../../store/camera/cameraActions';\nimport { State } from '../../store/State';\nimport { Project, Status as CameraConfigStatus } from '../../store/project/projectTypes';\nimport { useParts } from '../../hooks/useParts';\nimport { LiveViewContainer } from '../LiveViewContainer';\nimport { AOIData } from '../../type';\nimport { ListItem } from '../ListItem';\n\ninterface CameraDetailInfoProps {\n  AOIs: AOIData;\n  name: string;\n  rtsp: string;\n  id: number;\n}\nconst CameraDetailInfo: FC<CameraDetailInfoProps> = ({ id, name, rtsp, AOIs }) => {\n  const dispatch = useDispatch();\n\n  const { data: project, status } = useSelector<State, Project>((state) => state.project);\n  const parts = useParts();\n\n  const isCameraOnline = [CameraConfigStatus.FinishTraining, CameraConfigStatus.StartInference].includes(\n    status,\n  );\n\n  return (\n    <Flex styles={{ padding: '1em 2em' }} column gap=\"gap.medium\">\n      <h1>Details</h1>\n      <Grid columns=\"2\" styles={{ gap: '3em' }}>\n        <Flex column gap=\"gap.medium\">\n          <Text size=\"medium\" content={`Name: ${name}`} />\n          <Text size=\"medium\" content={`RTSP Url: ${rtsp}`} />\n        </Flex>\n        <ConfirmDialog\n          trigger={\n            <Button\n              primary\n              content=\"Delete Camera\"\n              styles={{\n                backgroundColor: '#C4314B',\n                ':hover': { backgroundColor: '#A72037' },\n                ':active': { backgroundColor: '#8E192E' },\n              }}\n            />\n          }\n          content=\"Delete Camera\"\n          primaryStyles={{\n            backgroundColor: '#C4314B',\n            ':hover': { backgroundColor: '#A72037' },\n            ':active': { backgroundColor: '#8E192E' },\n          }}\n          onConfirm={(): void => {\n            dispatch(deleteCamera(id));\n          }}\n        />\n      </Grid>\n      {status !== CameraConfigStatus.WaitTraining && status !== CameraConfigStatus.None && (\n        <>\n          <ListItem title=\"Status\">\n            <CameraStatus online={isCameraOnline} />\n          </ListItem>\n          <ListItem title=\"Configured for\">\n            {parts\n              .filter((e) => project.parts.includes(e.id))\n              .map((e) => e.name)\n              .join(', ')}\n          </ListItem>\n          <LiveViewContainer showVideo={true} initialAOIData={AOIs} cameraId={project.camera} />\n        </>\n      )}\n    </Flex>\n  );\n};\n\nconst CameraStatus = ({ online }): JSX.Element => {\n  const text = online ? 'Online' : 'Offline';\n  const state = online ? 'success' : 'unknown';\n\n  return (\n    <Flex gap=\"gap.smaller\" vAlign=\"center\">\n      <Status state={state} />\n      <Text styles={{ margin: '5px' }} size=\"medium\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default memo(CameraDetailInfo);\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay): void => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick(): void {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return (): void => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import Axios from 'axios';\nimport {\n  ProjectThunk,\n  GetProjectSuccessAction,\n  GET_PROJECT_SUCCESS,\n  GetProjectFailedAction,\n  GET_PROJECT_FAILED,\n  PostProjectSuccessAction,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  PostProjectFaliedAction,\n  DeleteProjectSuccessAction,\n  DELETE_PROJECT_SUCCESS,\n  DeleteProjectFaliedAction,\n  DELETE_PROJECT_FALIED,\n  ProjectData,\n  PostProjectRequestAction,\n  POST_PROJECT_REQUEST,\n  GetProjectRequestAction,\n  GET_PROJECT_REQUEST,\n  UpdateProjectDataAction,\n  UPDATE_PROJECT_DATA,\n  GetTrainingLogRequesAction,\n  GET_TRAINING_LOG_REQUEST,\n  GetTrainingLogSuccessAction,\n  GET_TRAINING_LOG_SUCCESS,\n  GetTrainingLogFailedAction,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GetTrainingMetricsRequestAction,\n  GET_TRAINING_METRICS_REQUEST,\n  GetTrainingMetricsSuccessAction,\n  GET_TRAINING_METRICS_SUCCESS,\n  GetTrainingMetricsFailedAction,\n  GET_TRAINING_METRICS_FAILED,\n  Consequence,\n  GetInferenceMetricsRequestAction,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GetInferenceMetricsSuccessAction,\n  GetInferenceMetricsFailedAction,\n  GET_INFERENCE_METRICS_FAILED,\n  StartInferenceAction,\n  START_INFERENCE,\n  STOP_INFERENCE,\n  StopInferenceAction,\n  UPDATE_ORIGIN_PROJECT_DATA,\n  UpdateOriginProjectDataAction,\n  ResetStatusAction,\n  RESET_STATUS,\n  UpdateProbThresholdRequestAction,\n  UpdateProbThresholdSuccessAction,\n  UpdateProbThresholdFailedAction,\n} from './projectTypes';\n\nconst getProjectRequest = (): GetProjectRequestAction => ({ type: GET_PROJECT_REQUEST });\nconst getProjectSuccess = (project: ProjectData): GetProjectSuccessAction => ({\n  type: GET_PROJECT_SUCCESS,\n  payload: { project },\n});\nconst getProjectFailed = (error: Error): GetProjectFailedAction => ({ type: GET_PROJECT_FAILED, error });\n\nconst getTrainingLogRequest = (): GetTrainingLogRequesAction => ({ type: GET_TRAINING_LOG_REQUEST });\nconst getTrainingLogSuccess = (trainingLog: string, newStatus: Status): GetTrainingLogSuccessAction => ({\n  type: GET_TRAINING_LOG_SUCCESS,\n  payload: {\n    trainingLog,\n    newStatus,\n  },\n});\nconst getTrainingStatusFailed = (error: Error): GetTrainingLogFailedAction => ({\n  type: GET_TRAINING_LOG_FAILED,\n  error,\n});\n\nconst postProjectRequest = (): PostProjectRequestAction => ({ type: POST_PROJECT_REQUEST });\nconst postProjectSuccess = (): PostProjectSuccessAction => ({ type: POST_PROJECT_SUCCESS });\nconst postProjectFail = (error: Error): PostProjectFaliedAction => ({ type: POST_PROJECT_FALIED, error });\n\nconst deleteProjectSuccess = (): DeleteProjectSuccessAction => ({ type: DELETE_PROJECT_SUCCESS });\nconst deleteProjectFailed = (): DeleteProjectFaliedAction => ({ type: DELETE_PROJECT_FALIED });\n\nconst getTrainingMetricsRequest = (): GetTrainingMetricsRequestAction => ({\n  type: GET_TRAINING_METRICS_REQUEST,\n});\nconst getTrainingMetricsSuccess = (\n  curConsequence: Consequence,\n  prevConsequence: Consequence,\n): GetTrainingMetricsSuccessAction => ({\n  type: GET_TRAINING_METRICS_SUCCESS,\n  payload: { prevConsequence, curConsequence },\n});\nconst getTrainingMetricsFailed = (error: Error): GetTrainingMetricsFailedAction => ({\n  type: GET_TRAINING_METRICS_FAILED,\n  error,\n});\n\nconst getInferenceMetricsRequest = (): GetInferenceMetricsRequestAction => ({\n  type: GET_INFERENCE_METRICS_REQUEST,\n});\nconst getInferenceMetricsSuccess = (\n  successRate: number,\n  successfulInferences: number,\n  unIdetifiedItems: number,\n  isGpu: boolean,\n  averageTime: number,\n): GetInferenceMetricsSuccessAction => ({\n  type: GET_INFERENCE_METRICS_SUCCESS,\n  payload: { successRate, successfulInferences, unIdetifiedItems, isGpu, averageTime },\n});\nconst getInferenceMetricsFailed = (error: Error): GetInferenceMetricsFailedAction => ({\n  type: GET_INFERENCE_METRICS_FAILED,\n  error,\n});\n\nexport const startInference = (): StartInferenceAction => ({\n  type: START_INFERENCE,\n});\n\nexport const stopInference = (): StopInferenceAction => ({\n  type: STOP_INFERENCE,\n});\n\nexport const updateProjectData = (partialProjectData: Partial<ProjectData>): UpdateProjectDataAction => ({\n  type: UPDATE_PROJECT_DATA,\n  payload: partialProjectData,\n});\n\nexport const updateOriginProjectData = (): UpdateOriginProjectDataAction => ({\n  type: UPDATE_ORIGIN_PROJECT_DATA,\n});\n\nexport const resetStatus = (): ResetStatusAction => ({\n  type: RESET_STATUS,\n});\n\nconst updateProbThresholdRequest = (): UpdateProbThresholdRequestAction => ({\n  type: 'UPDATE_PROB_THRESHOLD_REQUEST',\n});\n\nconst updateProbThresholdSuccess = (): UpdateProbThresholdSuccessAction => ({\n  type: 'UPDATE_PROB_THRESHOLD_SUCCESS',\n});\n\nconst updateProbThresholdFailed = (error: Error): UpdateProbThresholdFailedAction => ({\n  type: 'UPDATE_PROB_THRESHOLD_FAILED',\n  error,\n});\n\nexport const thunkGetProject = (isTestModel?: boolean): ProjectThunk => (dispatch): Promise<void> => {\n  dispatch(getProjectRequest());\n\n  const url = isTestModel === undefined ? '/api/projects/' : `/api/projects/?is_demo=${Number(isTestModel)}`;\n\n  return Axios.get(url)\n    .then(({ data }) => {\n      const project: ProjectData = {\n        id: data[0]?.id ?? null,\n        camera: parseInt(data[0]?.camera.split('/')[5], 10) ?? null,\n        location: parseInt(data[0]?.location.split('/')[5], 10) ?? null,\n        parts: data[0]?.parts.map((ele) => parseInt(ele.split('/')[5], 10)) ?? [],\n        modelUrl: data[0]?.download_uri ?? '',\n        needRetraining: data[0]?.needRetraining ?? true,\n        accuracyRangeMin: data[0]?.accuracyRangeMin ?? 60,\n        accuracyRangeMax: data[0]?.accuracyRangeMax ?? 80,\n        maxImages: data[0]?.maxImages ?? 20,\n        sendMessageToCloud: data[0]?.metrics_is_send_iothub,\n        framesPerMin: data[0]?.metrics_frame_per_minutes,\n        accuracyThreshold: data[0]?.metrics_accuracy_threshold,\n        cvProjectId: data[0]?.customvision_project_id,\n        probThreshold: data[0]?.prob_threshold.toString() ?? '10',\n      };\n      dispatch(getProjectSuccess(project));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(getProjectFailed(err));\n    });\n};\n\nexport const thunkPostProject = (\n  projectId,\n  selectedLocations,\n  selectedParts,\n  selectedCamera,\n  isTestModel,\n): ProjectThunk => (dispatch, getState): Promise<number> => {\n  const isProjectEmpty = projectId === null;\n  const url = isProjectEmpty ? `/api/projects/` : `/api/projects/${projectId}/`;\n\n  dispatch(postProjectRequest());\n\n  const projectData = getState().project.data;\n\n  return Axios(url, {\n    data: {\n      location: `http://localhost:8000/api/locations/${selectedLocations.id}/`,\n      parts: selectedParts.map((e) => `http://localhost:8000/api/parts/${e.id}/`),\n      camera: `http://localhost:8000/api/cameras/${selectedCamera.id}/`,\n      download_uri: projectData.modelUrl,\n      needRetraining: projectData.needRetraining,\n      accuracyRangeMin: projectData.accuracyRangeMin,\n      accuracyRangeMax: projectData.accuracyRangeMax,\n      maxImages: projectData.maxImages,\n      metrics_is_send_iothub: projectData.sendMessageToCloud,\n      metrics_frame_per_minutes: projectData.framesPerMin,\n      metrics_accuracy_threshold: projectData.accuracyThreshold,\n    },\n    method: isProjectEmpty ? 'POST' : 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(({ data }) => {\n      dispatch(postProjectSuccess());\n      getTrain(data.id, isTestModel);\n      return data.id;\n    })\n    .catch((err) => {\n      dispatch(postProjectFail(err));\n    }) as Promise<number>;\n};\nconst getTrain = (projectId, isTestModel: boolean): void => {\n  const url = isTestModel ? `/api/projects/${projectId}/train?demo=True` : `/api/projects/${projectId}/train`;\n  Axios.get(url).catch((err) => console.error(err));\n};\n\nexport const thunkDeleteProject = (projectId): ProjectThunk => (dispatch): Promise<any> => {\n  return Axios.get(`/api/projects/${projectId}/reset_camera`)\n    .then(() => {\n      return dispatch(deleteProjectSuccess());\n    })\n    .catch((err) => {\n      alert(err);\n      dispatch(deleteProjectFailed());\n    });\n};\n\nexport const thunkGetTrainingLog = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getTrainingLogRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      if (data.status === 'failed') throw new Error(data.log);\n      else if (data.status === 'ok' || data.status === 'demo ok')\n        dispatch(getTrainingLogSuccess('', Status.FinishTraining));\n      else dispatch(getTrainingLogSuccess(data.log, Status.WaitTraining));\n      return void 0;\n    })\n    .catch((err) => dispatch(getTrainingStatusFailed(err)));\n};\n\nexport const thunkGetTrainingMetrics = (projectId: number) => (dispacth): Promise<any> => {\n  dispacth(getTrainingMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/train_performance`)\n    .then(({ data }) => {\n      const curConsequence: Consequence = data.new\n        ? {\n            precision: data.new.precision,\n            recall: data.new.recall,\n            mAP: data.new.map,\n          }\n        : null;\n\n      const prevConsequence: Consequence = data.previous\n        ? {\n            precision: data.previous.precision,\n            recall: data.previous.recall,\n            mAP: data.previous.map,\n          }\n        : null;\n\n      return dispacth(getTrainingMetricsSuccess(curConsequence, prevConsequence));\n    })\n    .catch((err) => dispacth(getTrainingMetricsFailed(err)));\n};\n\nexport const thunkGetInferenceMetrics = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getInferenceMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      return dispatch(\n        getInferenceMetricsSuccess(\n          data.success_rate,\n          data.inference_num,\n          data.unidentified_num,\n          data.gpu,\n          data.average_time,\n        ),\n      );\n    })\n    .catch((err) => dispatch(getInferenceMetricsFailed(err)));\n};\n\nexport const thunkUpdateProbThreshold = (): ProjectThunk => (dispatch, getState): Promise<any> => {\n  dispatch(updateProbThresholdRequest());\n\n  const projectId = getState().project.data.id;\n  const { probThreshold } = getState().project.data;\n\n  return Axios.get(`/api/projects/${projectId}/update_prob_threshold?prob_threshold=${probThreshold}`)\n    .then(() => dispatch(updateProbThresholdSuccess()))\n    .catch((e) => {\n      if (e.response) {\n        throw new Error(e.response.data.log);\n      } else if (e.request) {\n        throw new Error(e.request);\n      } else {\n        throw e;\n      }\n    })\n    .catch((e) => {\n      dispatch(updateProbThresholdFailed(e));\n    });\n};\n\nexport const thunkUpdateAccuracyRange = (): ProjectThunk => (dispatch, getState): Promise<any> => {\n  dispatch(postProjectRequest());\n\n  const projectId = getState().project.data.id;\n  const { accuracyRangeMin, accuracyRangeMax } = getState().project.data;\n\n  return Axios.patch(`/api/projects/${projectId}/`, {\n    accuracyRangeMin,\n    accuracyRangeMax,\n  })\n    .then(() => {\n      dispatch(postProjectSuccess());\n      return void 0;\n    })\n    .catch((e) => {\n      if (e.response) {\n        throw new Error(e.response.data.log);\n      } else if (e.request) {\n        throw new Error(e.request);\n      } else {\n        throw e;\n      }\n    })\n    .catch((e) => {\n      dispatch(postProjectFail(e));\n    });\n};\n","import { useLocation } from 'react-router-dom';\n\n/**\n * Get query parameter in the route\n */\nexport const useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import React, { useEffect, FC, useState, useCallback } from 'react';\nimport { Flex, Text, Button, Loader, Grid, Alert, Input } from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useInterval } from '../../hooks/useInterval';\nimport {\n  thunkDeleteProject,\n  thunkGetTrainingLog,\n  thunkGetTrainingMetrics,\n  thunkGetInferenceMetrics,\n  resetStatus,\n  updateProjectData,\n  thunkUpdateProbThreshold,\n  thunkUpdateAccuracyRange,\n} from '../../store/project/projectActions';\nimport { Project, Status as CameraConfigStatus, TrainingMetrics } from '../../store/project/projectTypes';\nimport { State } from '../../store/State';\nimport { useQuery } from '../../hooks/useQuery';\nimport { ListItem } from '../ListItem';\n\nexport const CameraConfigureInfoContainer: React.FC<{ projectId: number }> = ({ projectId }) => {\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Configuration</h1>\n      <CameraConfigureInfo projectId={projectId} />\n    </Flex>\n  );\n};\n\nconst CameraConfigureInfo: React.FC<{ projectId: number }> = ({ projectId }) => {\n  const {\n    error,\n    trainingLog,\n    status,\n    trainingMetrics,\n    isLoading,\n    inferenceMetrics,\n    data: project,\n  } = useSelector<State, Project>((state) => state.project);\n  const allTrainingLog = useAllTrainingLog(trainingLog);\n  const dispatch = useDispatch();\n  const cameraName = useQuery().get('name');\n  const isDemo = useQuery().get('isDemo') === 'true';\n  const history = useHistory();\n  const [showConsequenceDashboard, setShowConsequenceDashboard] = useState(false);\n  const successInferenceFooter = useNotification(inferenceMetrics.successfulInferences, 60000);\n  const unIdentifiedItemFooter = useNotification(inferenceMetrics.successfulInferences, 120000);\n\n  const onDeleteConfigure = useCallback((): void => {\n    // eslint-disable-next-line no-restricted-globals\n    const sureDelete = confirm('Delete this configuration?');\n    if (!sureDelete) return;\n    const result = (dispatch(thunkDeleteProject(projectId)) as unknown) as Promise<any>;\n    result\n      .then((data) => {\n        if (data) return history.push(`/cameras/detail?name=${cameraName}`);\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  }, [dispatch, history, cameraName, projectId]);\n\n  useEffect(() => {\n    dispatch(thunkGetTrainingLog(projectId));\n  }, [dispatch, projectId]);\n  useInterval(\n    () => {\n      dispatch(thunkGetTrainingLog(projectId));\n    },\n    status === CameraConfigStatus.WaitTraining ? 5000 : null,\n  );\n\n  useEffect(() => {\n    if (status === CameraConfigStatus.FinishTraining) {\n      dispatch(thunkGetTrainingMetrics(projectId));\n    }\n  }, [dispatch, status, projectId]);\n\n  useInterval(\n    () => {\n      dispatch(thunkGetInferenceMetrics(projectId));\n    },\n    status === CameraConfigStatus.StartInference ? 5000 : null,\n  );\n\n  useEffect(() => {\n    return (): void => {\n      dispatch(resetStatus());\n    };\n  }, [dispatch]);\n\n  if (status === CameraConfigStatus.WaitTraining || status === CameraConfigStatus.None)\n    return (\n      <>\n        <Loader size=\"smallest\" />\n        <pre>{allTrainingLog}</pre>\n      </>\n    );\n\n  return (\n    <>\n      {error && <Alert danger header={error.name} content={`${error.message}`} />}\n      <ListItem title=\"Maximum Confidence Level\">\n        <Input\n          value={project.probThreshold}\n          onChange={(_, { value }): void => {\n            dispatch(updateProjectData({ probThreshold: value }));\n          }}\n        />\n        <span>%</span>\n        <Button\n          primary\n          content=\"Update Confidence Level\"\n          onClick={(): void => {\n            dispatch(thunkUpdateProbThreshold());\n          }}\n          disabled={!project.probThreshold || isLoading}\n          loading={isLoading}\n        />\n      </ListItem>\n      <Grid columns={2} styles={{ rowGap: '20px' }}>\n        <ListItem title=\"Success Rate\">\n          <Text styles={{ color: 'rgb(244, 152, 40)', fontWeight: 'bold' }} size=\"medium\">\n            {`${inferenceMetrics.successRate}%`}\n          </Text>\n        </ListItem>\n        <ListItem title={`Running on ${inferenceMetrics.isGpu ? 'GPU' : 'CPU'} (accelerated)`}>\n          {`${Math.round(inferenceMetrics.averageTime * 100) / 100}/ms`}\n        </ListItem>\n        <div style={{ gridColumn: '1 / span 2' }}>\n          <ListItem\n            title=\"Successful Inferences\"\n            footerText={\n              successInferenceFooter\n                ? 'If you are not seeing inference result, we recommend to change the confidence level to 10%.'\n                : ''\n            }\n          >\n            {inferenceMetrics.successfulInferences}\n          </ListItem>\n        </div>\n      </Grid>\n      <ListItem\n        title=\"Unidentified Items\"\n        footerText={\n          unIdentifiedItemFooter\n            ? 'If you are not receiving any images, we recommend to change the accuracy range to minimum 10%.'\n            : ''\n        }\n      >\n        <Text styles={{ margin: '5px' }} size=\"medium\">\n          {inferenceMetrics.unIdetifiedItems}\n        </Text>\n        <Button content=\"Identify Manually\" primary styles={{ marginLeft: '100px' }} as={Link} to=\"/manual\" />\n      </ListItem>\n      <Text>Accuracy Range: </Text>\n      <Flex gap=\"gap.medium\" vAlign=\"center\">\n        <Text>Minimum:</Text>\n        <Input\n          value={project.accuracyRangeMin}\n          type=\"number\"\n          onChange={(_, { value }): void => {\n            dispatch(updateProjectData({ accuracyRangeMin: parseInt(value, 10) }));\n          }}\n        />\n        <Text>%</Text>\n        <Text>Maximum:</Text>\n        <Input\n          value={project.accuracyRangeMax}\n          type=\"number\"\n          onChange={(_, { value }): void => {\n            dispatch(updateProjectData({ accuracyRangeMax: parseInt(value, 10) }));\n          }}\n        />\n        <Text>%</Text>\n        <Button\n          content=\"Update Accuracy Range\"\n          primary\n          loading={isLoading}\n          disabled={isLoading}\n          onClick={(): void => {\n            dispatch(thunkUpdateAccuracyRange());\n          }}\n        />\n      </Flex>\n      <Flex hAlign=\"center\" column gap=\"gap.large\" styles={{ paddingTop: '70px' }}>\n        <Button\n          content={\n            showConsequenceDashboard ? 'Hide detail for training metric' : 'Show detail training metric'\n          }\n          primary\n          onClick={(): void => setShowConsequenceDashboard((prev) => !prev)}\n        />\n        {showConsequenceDashboard && <ConsequenceDashboard trainingMetrics={trainingMetrics} />}\n      </Flex>\n      <Flex gap=\"gap.medium\" styles={{ marginTop: 'auto' }} hAlign=\"center\">\n        <Button primary as={Link} to=\"/partIdentification\">\n          Edit Configuration\n        </Button>\n        <Button primary disabled={isDemo} onClick={onDeleteConfigure}>\n          Delete Configuration\n        </Button>\n      </Flex>\n    </>\n  );\n};\n\n/**\n * Check the condition for certain time, and show the notification for the given period.\n * @param targetState Check this state if it equals to zero\n * @param checkPeriod How long it last when it is zero\n */\nfunction useNotification(targetState: number, checkPeriod: number): boolean {\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    let timer;\n    if (showNotification) {\n      timer = setTimeout(() => setShowNotification(false), 10000);\n    }\n    return (): void => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [showNotification]);\n\n  useEffect(() => {\n    // The effect only need to be trigger when inferenceMetrics.successfulInferences keep 0 for the check period\n    if (targetState === 0) {\n      const timer = setTimeout(() => {\n        if (targetState === 0) setShowNotification(true);\n      }, checkPeriod);\n\n      return (): void => clearTimeout(timer);\n    }\n  }, [checkPeriod, targetState]);\n\n  return showNotification;\n}\n\n/**\n * Retrun a string which contains all logs get from server during training\n * @param trainingLog The log get from the api export\n */\nconst useAllTrainingLog = (trainingLog: string): string => {\n  const [allLogs, setAllLogs] = useState(trainingLog);\n  useEffect(() => {\n    setAllLogs((prev) => `${prev}\\n${trainingLog}`);\n  }, [trainingLog]);\n  return allLogs;\n};\n\ninterface ConsequenceDashboardProps {\n  trainingMetrics: TrainingMetrics;\n}\nconst ConsequenceDashboard: FC<ConsequenceDashboardProps> = ({\n  trainingMetrics: { curConsequence, prevConsequence },\n}) => {\n  return (\n    <table style={{ textAlign: 'center', width: '60%' }}>\n      <tr>\n        <td style={{ width: '200px' }}></td>\n        <td>Precision</td>\n        <td>Recall</td>\n        <td>mAP</td>\n      </tr>\n      <tr>\n        <td>Updated Model Metrics</td>\n        <td style={{ color: '#9a0089' }}>\n          {curConsequence?.precision === null ? '' : `${((curConsequence?.precision * 1000) | 0) / 10}%`}\n        </td>\n        <td style={{ color: '#0063b1' }}>\n          {curConsequence?.recall === null ? '' : `${((curConsequence?.recall * 1000) | 0) / 10}%`}\n        </td>\n        <td style={{ color: '#69c138' }}>\n          {curConsequence?.mAP === null ? '' : `${((curConsequence?.mAP * 1000) | 0) / 10}%`}\n        </td>\n      </tr>\n      {prevConsequence && (\n        <tr>\n          <td>Previous Model Metrics</td>\n          <td style={{ color: '#9a0089' }}>\n            {prevConsequence?.precision === null ? '' : `${((prevConsequence?.precision * 1000) | 0) / 10}%`}\n          </td>\n          <td style={{ color: '#0063b1' }}>\n            {prevConsequence?.recall === null ? '' : `${((prevConsequence?.recall * 1000) | 0) / 10}%`}\n          </td>\n          <td style={{ color: '#69c138' }}>\n            {prevConsequence?.mAP === null ? '' : `${((prevConsequence?.mAP * 1000) | 0) / 10}%`}\n          </td>\n        </tr>\n      )}\n    </table>\n  );\n};\n","import React from 'react';\nimport { Dialog, Flex, Loader, ErrorIcon, Text, AcceptIcon } from '@fluentui/react-northstar';\n\nexport enum Status {\n  None,\n  Loading,\n  Success,\n  Failed,\n}\n\nexport const LoadingDialog = ({\n  status = Status.None,\n  errorMessage = '',\n  onConfirm = () => {},\n}): JSX.Element => {\n  const getContent = (): JSX.Element => {\n    switch (status) {\n      case Status.Loading:\n        return <Loader label=\"Loading\" size=\"largest\" />;\n      case Status.Failed:\n        return (\n          <>\n            <ErrorIcon size=\"largest\" />\n            <Text error>{errorMessage}</Text>\n          </>\n        );\n      case Status.Success:\n        return (\n          <>\n            <AcceptIcon size=\"largest\" style={{ color: 'green' }} />\n            <Text success>Success</Text>\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Dialog\n      styles={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n      confirmButton={status !== Status.Loading && 'Confirm'}\n      onConfirm={onConfirm}\n      open={status !== Status.None}\n      content={\n        <>\n          <Flex hAlign=\"center\" column>\n            {getContent()}\n          </Flex>\n        </>\n      }\n    />\n  );\n};\n","import React from 'react';\nimport { Button, Flex, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const CreateCameraConfigButton: React.FC = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <h1>Configuration</h1>\n      <Flex hAlign=\"center\" vAlign=\"center\" design={{ height: '100%' }} column gap=\"gap.large\">\n        <Button\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular color=\"brand\" />}\n          style={{ width: 100, height: 100, border: '5px solid #0094d8' }}\n          color=\"brand\"\n          as={Link}\n          to=\"/partIdentification\"\n        />\n        <h2>Configure Task for the Device</h2>\n      </Flex>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CameraDetailInfo from '../components/CameraDetails/CameraDetailInfo';\nimport { CameraConfigureInfoContainer, CreateCameraConfigButton } from '../components/CameraConfigure';\nimport { getCameras } from '../store/camera/cameraActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { State } from '../store/State';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { useQuery } from '../hooks/useQuery';\nimport { AOIData } from '../type';\n\nconst CameraDetails: FC = (): JSX.Element => {\n  const cameraIdInproject = useSelector<State, number>((state) => state.project.data.camera);\n  const projectId = useSelector<State, number>((state) => state.project.data.id);\n  const dispatch = useDispatch();\n  const name = useQuery().get('name');\n  const isDemo = useQuery().get('isDemo');\n  const camera = useSelector<State, Camera>((state) => state.cameras.find((ele) => ele.name === name));\n\n  useEffect(() => {\n    dispatch(thunkGetProject(isDemo === 'true'));\n    dispatch(getCameras());\n  }, [dispatch, isDemo]);\n\n  if (!camera) return <Redirect to=\"/cameras\" />;\n\n  const hasProject = cameraIdInproject === camera.id;\n  // TODO Get this inside live view container\n  const aoiData = getAOIData(camera.area);\n\n  return (\n    <Grid columns=\"2\" design={{ height: '100%' }}>\n      <CameraDetailInfo id={camera.id} name={name} rtsp={camera.rtsp} AOIs={aoiData} />\n      {hasProject ? <CameraConfigureInfoContainer projectId={projectId} /> : <CreateCameraConfigButton />}\n    </Grid>\n  );\n};\n\nexport default CameraDetails;\n\nconst getAOIData = (cameraArea: string): AOIData => {\n  try {\n    return JSON.parse(cameraArea);\n  } catch (e) {\n    return {\n      useAOI: false,\n      AOIs: [],\n    };\n  }\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { getCameras } from '../store/camera/cameraActions';\n\n/**\n * Fetch the cameras data from server and set to Redux Store\n */\nexport const useCameras = (): Camera[] => {\n  const dispatch = useDispatch();\n  const cameras: Camera[] = useSelector<State, Camera[]>((state) => state.cameras.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return cameras;\n};\n","import { Size2D } from '../../../store/labelingPage/labelingPageTypes';\n\nconst getResizeImageFunction = (defaultSize: Size2D) => (size: Size2D): [Size2D, number] => {\n  if (size.width !== 0) {\n    if (size.width > size.height) {\n      const scaleX = defaultSize.width / size.width;\n\n      return [{ width: defaultSize.width, height: size.height * scaleX }, scaleX];\n    }\n    const scaleY = defaultSize.height / size.height;\n\n    return [{ height: defaultSize.height, width: size.width * scaleY }, scaleY];\n  }\n  return [defaultSize, 1];\n};\n\nexport default getResizeImageFunction;\n","import {\n  Annotation,\n  AnnotationState,\n  BoxObject,\n  Position2D,\n  REQUEST_ANNOTATION_SUCCESS,\n  REMOVE_ANNOTATION,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  UPDATE_ANNOTATION,\n  RESET_ANNOTATION,\n  RequestAnnotationSuccessAction,\n  CreateAnnotationAction,\n  UpdateAnnotationAction,\n  UpdateCreatingAnnotationAction,\n  RemoveAnnotationAction,\n  ResetAnnotationAction,\n} from './labelingPageTypes';\n\nexport const requestAnnotationsSuccess = (data: Annotation[]): RequestAnnotationSuccessAction => ({\n  type: REQUEST_ANNOTATION_SUCCESS,\n  payload: { annotations: data },\n});\n\nexport const getAnnotations = (imageId: number) => (dispatch, getState): void => {\n  const { images } = getState();\n  const { labels } = images.find((image) => image.id === imageId);\n\n  if (labels === null) {\n    dispatch(requestAnnotationsSuccess([]));\n  } else {\n    const annotations: Annotation[] = JSON.parse(labels).map((parsedLabels, i) => ({\n      id: i,\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n\n    dispatch(requestAnnotationsSuccess(annotations));\n  }\n};\n\nexport const createAnnotation = (pos: Position2D): CreateAnnotationAction => {\n  const annotation = BoxObj.createWithPoint(pos, '');\n  return {\n    type: CREATE_ANNOTATION,\n    payload: { annotation },\n  };\n};\n\nexport const updateCreatingAnnotation = (pos: Position2D): UpdateCreatingAnnotationAction => {\n  const updater = (annotation: Annotation): Annotation => BoxObj.add(pos, annotation);\n  return {\n    type: UPDATE_CREATING_ANNOTATION,\n    payload: { updater },\n  };\n};\n\nexport const updateAnnotation = (index: number = null, annotation: Annotation): UpdateAnnotationAction => ({\n  type: UPDATE_ANNOTATION,\n  payload: { index, annotation: BoxObj.setVerticesToValidValue(annotation) },\n});\n\nexport const removeAnnotation = (index: number = null): RemoveAnnotationAction => ({\n  type: REMOVE_ANNOTATION,\n  payload: { index },\n});\n\nexport const resetAnnotation = (): ResetAnnotationAction => ({\n  type: RESET_ANNOTATION,\n});\n\n// * Annotation Functions\nexport const BoxObj: BoxObject = {\n  init(): Annotation {\n    return {\n      id: null,\n      label: { x1: 0, y1: 0, x2: 0, y2: 0 },\n      attribute: '',\n      annotationState: AnnotationState.Empty,\n    };\n  },\n  createWithPoint(p: Position2D, attribute) {\n    const obj = {\n      ...this.init(),\n      attribute,\n    };\n    return this.add(p, obj);\n  },\n  add({ x, y }, obj) {\n    // make the original object immutable, for future history usage\n    const newObj = { ...obj };\n\n    if (obj.annotationState === AnnotationState.Empty) {\n      newObj.label.x1 = x;\n      newObj.label.y1 = y;\n      newObj.label.x2 = x; // initialize x2 y2\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.P1Added;\n    } else if (obj.annotationState === AnnotationState.P1Added) {\n      newObj.label.x2 = x;\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.Finish;\n    }\n\n    return this.setVerticesToValidValue(newObj);\n  },\n  setVerticesToInt(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    newObj.label = {\n      x1: Math.round(x1),\n      y1: Math.round(y1),\n      x2: Math.round(x2),\n      y2: Math.round(y2),\n    };\n    return newObj;\n  },\n  setVerticesPointsOrder(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    if (x1 > x2) {\n      newObj.label.x1 = x2;\n      newObj.label.x2 = x1;\n    }\n    if (y1 > y2) {\n      newObj.label.y1 = y2;\n      newObj.label.y2 = y1;\n    }\n\n    return newObj;\n  },\n  setVerticesToValidValue(object: Annotation): Annotation {\n    return this.setVerticesPointsOrder(this.setVerticesToInt(object));\n  },\n  // setFinished(obj: Annotation): Annotation {\n  //   if (obj.state === AnnotationState.Created) return;\n\n  //   const newObj = R.clone(obj);\n  //   newObj.state = AnnotationState.Created;\n  //   newObj.creatingState = undefined;\n\n  //   return newObj;\n  // },\n  // setStateCreated(idx: number, annotations: Annotation[]): Annotation[] {\n  //   const { creatingState } = annotations[idx];\n\n  //   if (creatingState === 'addedX2Y2') return R.update(idx, this.setFinished, annotations);\n  //   if (creatingState === 'addedX1Y1') return R.remove(idx, 1, annotations);\n  //   return R.clone(annotations);\n  // },\n};\n","import React, { useState, useRef, useEffect, FC, useCallback } from 'react';\nimport { Line, Group, Circle } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport {\n  BoxLabel,\n  Box2dComponentProps,\n  WorkState,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport { updateAnnotation } from '../../store/labelingPage/labelingPageActions';\n\nexport const Box2d: FC<Box2dComponentProps> = ({\n  scale,\n  workState,\n  onSelect,\n  selected,\n  annotationIndex,\n  visible = true,\n  annotation,\n  dispatch,\n  changeCursorState = null,\n}) => {\n  const [vertices, setVertices] = useState<BoxLabel>(annotation.label);\n  const anchorRadius: number = 5 / scale;\n  const strokeWidth: number = 2 / scale;\n  const boxRef = useRef(null);\n\n  const dispatchLabel = (): void => {\n    changeCursorState();\n\n    if (!dispatch) return;\n    const newAnnotation = { ...annotation };\n    newAnnotation.label = vertices;\n    dispatch(updateAnnotation(annotationIndex, newAnnotation));\n  };\n\n  const mouseMoveListener = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (workState === WorkState.Creating && selected) {\n        setVertices((prev) => ({ ...prev, x2: e.evt.offsetX / scale, y2: e.evt.offsetY / scale }));\n      }\n    },\n    [workState, setVertices, selected, scale],\n  );\n\n  const onDragAnchor = useCallback(\n    ({ xi = 'x1', yi = 'y1' }) => (e: KonvaEventObject<DragEvent>): void => {\n      const stage = e.target.getStage();\n      const { width, height } = stage.getSize();\n      let x = Math.round(e.target.position().x);\n      let y = Math.round(e.target.position().y);\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > width / scale) x = width / scale;\n      if (y > height / scale) y = height / scale;\n      // * Round the anchor (circle) position so user can only drag anchor on integer.\n      e.target.setAttr('x', x);\n      e.target.setAttr('y', y);\n\n      const anotherPosXArr = ['x1', 'x2'];\n      const anotherPosYArr = ['y1', 'y2'];\n      anotherPosXArr.splice(\n        anotherPosXArr.findIndex((xx) => xx === xi),\n        1,\n      );\n      anotherPosYArr.splice(\n        anotherPosYArr.findIndex((yy) => yy === yi),\n        1,\n      );\n      if (vertices[anotherPosXArr[0]] > vertices[xi]) {\n        if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n          changeCursorState(LabelingCursorStates.nwseResize);\n        } else {\n          changeCursorState(LabelingCursorStates.neswResize);\n        }\n      } else if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n        changeCursorState(LabelingCursorStates.neswResize);\n      } else {\n        changeCursorState(LabelingCursorStates.nwseResize);\n      }\n\n      setVertices((prevVertices) => ({ ...prevVertices, [xi]: x, [yi]: y }));\n    },\n    [changeCursorState, scale, vertices],\n  );\n\n  useEffect(() => {\n    const layer = boxRef.current.getLayer();\n    layer.on('mousemove', mouseMoveListener);\n    return (): void => {\n      layer.off('mousemove', mouseMoveListener);\n    };\n  }, [mouseMoveListener]);\n  useEffect(() => {\n    setVertices(annotation.label);\n  }, [annotation.label]);\n\n  return (\n    <Group\n      ref={(e): void => {\n        if (e) {\n          boxRef.current = e;\n        }\n      }}\n      visible={visible}\n      onMouseDown={(e): void => {\n        if (workState === WorkState.None) {\n          onSelect(annotationIndex);\n          e.cancelBubble = true;\n        }\n      }}\n    >\n      <Line\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke=\"red\"\n        strokeWidth={strokeWidth}\n        closed={true}\n      />\n      <Group visible={selected}>\n        <Circle\n          key={'anchor-0'}\n          name={'anchor-0'}\n          x={vertices.x1}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-1'}\n          name={'anchor-1'}\n          x={vertices.x2}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-2'}\n          name={'anchor-2'}\n          x={vertices.x2}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-3'}\n          name={'anchor-3'}\n          x={vertices.x1}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n      </Group>\n    </Group>\n  );\n};\n\nexport const DisplayBox: FC<{ vertices: BoxLabel; color: string; scale: number }> = ({\n  scale,\n  vertices,\n  color,\n}) => {\n  return (\n    <>\n      <Line\n        ref={(ref): void => {\n          if (ref) ref.cache();\n        }}\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke={color}\n        strokeWidth={1 / scale}\n        closed={true}\n      />\n      <Circle x={vertices.x1} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y2} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x1} y={vertices.y2} radius={3 / scale} fill={color} />\n    </>\n  );\n};\n","import React, { FC, memo, Dispatch, useState, useEffect } from 'react';\nimport { Group, Line, Rect } from 'react-konva';\n\nimport { Size2D, LabelingCursorStates, BoxLabel } from '../../store/labelingPage/labelingPageTypes';\n\ninterface RemoveBoxButtonProps {\n  visible: boolean;\n  imageSize: Size2D;\n  label: BoxLabel;\n  changeCursorState: (cursorType?: LabelingCursorStates) => void;\n  scale: number;\n  setShowOuterRemoveButton: Dispatch<boolean>;\n  removeBox: () => void;\n}\nconst RemoveBoxButton: FC<RemoveBoxButtonProps> = ({\n  visible,\n  imageSize,\n  label,\n  changeCursorState,\n  scale,\n  setShowOuterRemoveButton,\n  removeBox,\n}) => {\n  const [color, setColor] = useState<string>('#F9526B');\n  const [strokeWidth, setStrokeWidth] = useState<number>(1.5 / scale);\n  let x: number;\n  let y: number;\n\n  if (\n    label.x1 < 0 ||\n    label.x2 > imageSize.width / scale ||\n    label.y1 < 0 ||\n    label.y2 > imageSize.height / scale\n  ) {\n    x = 0;\n    y = -60;\n  } else if (label.x1 > 30 / scale || label.x2 < (imageSize.width - 25) / scale) {\n    if (label.x1 > 30 / scale) x = label.x1 - 20 / scale;\n    else x = label.x2 + 25 / scale;\n\n    if (label.y1 > 12 / scale) {\n      y = label.y1 - 10 / scale;\n    } else {\n      y = label.y1 + 12 / scale;\n    }\n  } else {\n    x = 12 / scale;\n    if (label.y1 > 20 / scale) {\n      y = label.y1 - 20 / scale;\n    } else {\n      // * Make remove button disappear\n      y = -60;\n    }\n  }\n  if (y === -60) setShowOuterRemoveButton(true);\n  else setShowOuterRemoveButton(false);\n\n  useEffect(() => {\n    setStrokeWidth(1.5 / scale);\n  }, [scale]);\n\n  return (\n    <Group\n      visible={visible}\n      x={x}\n      y={y}\n      onMouseEnter={(): void => {\n        changeCursorState(LabelingCursorStates.pointer);\n        setColor('#E73550');\n        setStrokeWidth(3 / scale);\n      }}\n      onMouseLeave={(): void => {\n        changeCursorState();\n        setColor('#F9526B');\n        setStrokeWidth(1.5 / scale);\n      }}\n      onClick={(e): void => {\n        removeBox();\n        e.cancelBubble = true;\n      }}\n    >\n      <Rect x={-5 / scale} y={-5 / scale} width={10 / scale} height={10 / scale} />\n      <Line\n        points={[-5 / scale, -5 / scale, 5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n      <Line\n        points={[5 / scale, -5 / scale, -5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n    </Group>\n  );\n};\n\nexport default memo(RemoveBoxButton);\n","import React, { FC, useState, useEffect, useCallback, useRef, Dispatch, useMemo } from 'react';\nimport { Button, CloseIcon } from '@fluentui/react-northstar';\nimport { Stage, Layer, Image, Group, Text as KonvaText } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useDispatch } from 'react-redux';\n\nimport useImage from './util/useImage';\nimport getResizeImageFunction from './util/resizeImage';\nimport { Box2d } from './Box';\nimport {\n  Size2D,\n  Annotation,\n  WorkState,\n  LabelingType,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport {\n  createAnnotation,\n  updateCreatingAnnotation,\n  removeAnnotation,\n} from '../../store/labelingPage/labelingPageActions';\nimport RemoveBoxButton from './RemoveBoxButton';\n\nconst defaultSize: Size2D = {\n  width: 800,\n  height: 600,\n};\n\ninterface SceneProps {\n  url?: string;\n  labelingType: LabelingType;\n  annotations: Annotation[];\n  workState: WorkState;\n  setWorkState: Dispatch<WorkState>;\n}\nconst Scene: FC<SceneProps> = ({ url = '', labelingType, annotations, workState, setWorkState }) => {\n  const dispatch = useDispatch();\n  const resizeImage = useCallback(getResizeImageFunction(defaultSize), [defaultSize]);\n  const [imageSize, setImageSize] = useState<Size2D>(defaultSize);\n  const noMoreCreate = useMemo(\n    () => labelingType === LabelingType.SingleAnnotation && annotations.length === 1,\n    [labelingType, annotations],\n  );\n  const [cursorState, setCursorState] = useState<LabelingCursorStates>(LabelingCursorStates.default);\n  const [image, status, size] = useImage(url, 'anonymous');\n  const [selectedAnnotationIndex, setSelectedAnnotationIndex] = useState<number>(null);\n  const [showOuterRemoveButton, setShowOuterRemoveButton] = useState<boolean>(false);\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const scale = useRef<number>(1);\n  const changeCursorState = useCallback(\n    (cursorType?: LabelingCursorStates): void => {\n      if (!cursorType) {\n        if (noMoreCreate) {\n          setCursorState(LabelingCursorStates.default);\n        } else {\n          setCursorState(LabelingCursorStates.crosshair);\n        }\n      } else {\n        setCursorState(cursorType);\n      }\n    },\n    [noMoreCreate],\n  );\n  const removeBox = useCallback((): void => {\n    dispatch(removeAnnotation(selectedAnnotationIndex));\n    setWorkState(WorkState.None);\n    setShowOuterRemoveButton(false);\n  }, [dispatch, selectedAnnotationIndex, setWorkState, setShowOuterRemoveButton]);\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate || workState === WorkState.Creating) return;\n\n    dispatch(createAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }));\n    setSelectedAnnotationIndex(annotations.length - 1);\n    setWorkState(WorkState.Creating);\n  };\n\n  const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\n    if (workState === WorkState.Creating) {\n      dispatch(\n        updateCreatingAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }),\n      );\n      if (annotations.length - 1 === selectedAnnotationIndex) {\n        setWorkState(WorkState.Selecting);\n      } else {\n        setWorkState(WorkState.None);\n      }\n    }\n  };\n\n  const onSelect = (index: number): void => {\n    setSelectedAnnotationIndex(index);\n    setWorkState(WorkState.Selecting);\n  };\n\n  useEffect(() => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) {\n      changeCursorState();\n      setSelectedAnnotationIndex(0);\n    } else {\n      changeCursorState();\n    }\n  }, [noMoreCreate, changeCursorState]);\n  useEffect(() => {\n    if (workState === WorkState.None && !noMoreCreate) setSelectedAnnotationIndex(null);\n  }, [workState, noMoreCreate]);\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  const isLoading = status === 'loading' || (imageSize.height === 0 && imageSize.width === 0);\n\n  return (\n    <div style={{ margin: '0.2em' }}>\n      {annotations.length !== 0 &&\n      showOuterRemoveButton &&\n      !isDragging &&\n      workState !== WorkState.Creating ? (\n        <Button\n          iconOnly\n          text\n          styles={{ color: '#F9526B', ':hover': { color: '#E73550' } }}\n          content={<CloseIcon size=\"large\" />}\n          onClick={removeBox}\n        />\n      ) : (\n        <div style={{ height: '2em' }} />\n      )}\n      <Stage\n        width={imageSize.width}\n        height={imageSize.height}\n        scale={{ x: scale.current, y: scale.current }}\n        style={{ cursor: cursorState }}\n      >\n        <Layer\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onDragStart={(): void => {\n            setIsDragging(true);\n          }}\n          onDragEnd={(): void => {\n            setIsDragging(false);\n          }}\n        >\n          <Image image={image} />\n          {!isLoading &&\n            annotations.map((annotation, i) => (\n              <Group key={i}>\n                <RemoveBoxButton\n                  imageSize={imageSize}\n                  visible={!isDragging && workState !== WorkState.Creating && i === selectedAnnotationIndex}\n                  label={annotation.label}\n                  scale={scale.current}\n                  changeCursorState={changeCursorState}\n                  setShowOuterRemoveButton={setShowOuterRemoveButton}\n                  removeBox={removeBox}\n                />\n                <Box2d\n                  workState={workState}\n                  onSelect={onSelect}\n                  annotation={annotation}\n                  scale={scale.current}\n                  annotationIndex={i}\n                  selected={i === selectedAnnotationIndex}\n                  dispatch={dispatch}\n                  changeCursorState={changeCursorState}\n                />\n              </Group>\n            ))}\n          {isLoading && (\n            <KonvaText\n              x={imageSize.width / 2 - 50}\n              y={imageSize.height / 2 - 25}\n              fontSize={50}\n              text=\"Loading...\"\n              fill=\"rgb(255, 0, 0)\"\n            />\n          )}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Scene;\n","import axios from 'axios';\nimport {\n  LabelImage,\n  GetLabelImagesSuccess,\n  GET_LABEL_IMAGE_SUCCESS,\n  DeleteLabelImageSuccess,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  PostLabelImageSuccess,\n  POST_LABEL_IMAGE_SUCCESS,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n  UpdateLabelImageAnnotation,\n} from './imageTypes';\nimport { Annotation } from '../labelingPage/labelingPageTypes';\n\nconst getLabelImagesSuccess = (data: LabelImage[]): GetLabelImagesSuccess => ({\n  type: GET_LABEL_IMAGE_SUCCESS,\n  payload: data,\n});\n\nconst deleteLabelImageSuccess = (id: number): DeleteLabelImageSuccess => ({\n  type: DELETE_LABEL_IMAGE_SUCCESS,\n  payload: { id },\n});\n\nconst requestLabelImagesFailure = (error: any): any => {\n  console.error(error);\n  return { type: REQUEST_LABEL_IMAGE_FAILURE };\n};\n\nexport const postLabelImageSuccess = (image: LabelImage): PostLabelImageSuccess => ({\n  type: POST_LABEL_IMAGE_SUCCESS,\n  payload: image,\n});\n\nexport const getLabelImages = () => (dispatch): Promise<void> => {\n  return axios('/api/images/')\n    .then(({ data }) => {\n      dispatch(getLabelImagesSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\n\nexport const postLabelImage = (newImage: LabelImage | FormData) => (dispatch): Promise<void> => {\n  return axios('/api/images/', {\n    method: 'POST',\n    data: newImage,\n  })\n    .then(({ data }) => {\n      dispatch(postLabelImageSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const deleteLabelImage = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/images/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteLabelImageSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const saveLabelImageAnnotation = (imageId: number, annotations: Annotation[]) => (\n  dispatch,\n): Promise<void> => {\n  const url = `/api/images/${imageId}/`;\n  return axios({\n    url,\n    method: 'PATCH',\n    data: {\n      labels: JSON.stringify(annotations.map((e) => e.label)),\n    },\n  })\n    .then(({ data }) => {\n      console.info('Save successfully');\n      dispatch(updateLabelImageAnnotation(data.id, data.labels));\n      // dispatch(requestAnnotationsSuccess(annotations));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const updateLabelImageAnnotation = (imageId: number, labels: any): UpdateLabelImageAnnotation => ({\n  type: UPDATE_LABEL_IMAGE_ANNOTATION,\n  payload: { id: imageId, labels },\n});","import React, { FC } from 'react';\nimport { Flex, Button, ChevronStartIcon, ChevronEndIcon, Tooltip } from '@fluentui/react-northstar';\n\ninterface PrevNextButtonProps {\n  prevDisabled: boolean;\n  nextDisabled: boolean;\n  onPrevClick: () => void;\n  onNextClick: () => void;\n}\nconst PrevNextButton: FC<PrevNextButtonProps> = ({\n  children,\n  prevDisabled,\n  nextDisabled,\n  onPrevClick,\n  onNextClick,\n}) => {\n  return (\n    <Flex vAlign=\"center\">\n      {\n        <Button\n          text\n          disabled={prevDisabled}\n          icon={<ChevronStartIcon size=\"larger\" />}\n          onClick={onPrevClick}\n        />\n      }\n      {children}\n      {\n        <Tooltip\n          content=\"Save and Next\"\n          trigger={\n            <Button\n              text\n              disabled={nextDisabled}\n              icon={<ChevronEndIcon size=\"larger\" />}\n              onClick={onNextClick}\n            />\n          }\n        />\n      }\n    </Flex>\n  );\n};\n\nexport default PrevNextButton;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Button, Text } from '@fluentui/react-northstar';\n\nimport Scene from '../components/LabelingPage/Scene';\nimport { LabelingType, Annotation, WorkState } from '../store/labelingPage/labelingPageTypes';\nimport { State } from '../store/State';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getAnnotations, resetAnnotation } from '../store/labelingPage/labelingPageActions';\nimport { saveLabelImageAnnotation } from '../store/image/imageActions';\nimport { RelabelImage } from '../components/ManualIdentification/types';\nimport PrevNextButton from '../components/LabelingPage/PrevNextButton';\n\ninterface LabelingPageProps {\n  labelingType: LabelingType;\n  images: LabelImage[] | RelabelImage[];\n  imageIndex: number;\n  closeDialog: () => void;\n}\nconst LabelingPage: FC<LabelingPageProps> = ({ labelingType, images, imageIndex, closeDialog }) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState<number>(imageIndex);\n  const [workState, setWorkState] = useState<WorkState>(WorkState.None);\n\n  const annotations = useSelector<State, Annotation[]>((state) => state.labelingPageState.annotations);\n\n  const isOnePointBox = checkOnePointBox(annotations);\n  const imageUrl = images[index]?.image;\n  const imageId = images[index]?.id;\n\n  useEffect(() => {\n    if (typeof imageId === 'number') dispatch(getAnnotations(imageId));\n    return (): void => {\n      dispatch(resetAnnotation());\n    };\n  }, [dispatch, imageId]);\n\n  return (\n    <Flex column hAlign=\"center\">\n      <Text size=\"larger\" weight=\"semibold\">\n        DRAW A RECTANGLE AROUND THE PART\n      </Text>\n      <Text size=\"larger\" styles={{ alignSelf: 'flex-start' }}>\n        {index + 1}\n      </Text>\n      <PrevNextButton\n        prevDisabled={index === 0 || workState === WorkState.Creating || isOnePointBox}\n        nextDisabled={index === images.length - 1 || workState === WorkState.Creating || isOnePointBox}\n        onPrevClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev - 1 + images.length) % images.length);\n        }}\n        onNextClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev + 1) % images.length);\n        }}\n      >\n        <Scene\n          url={imageUrl ?? '/icons/Play.png'}\n          annotations={annotations}\n          workState={workState}\n          setWorkState={setWorkState}\n          labelingType={labelingType}\n        />\n      </PrevNextButton>\n      <Flex gap=\"gap.medium\">\n        <Button\n          primary\n          content={index === images.length - 1 ? 'Save and Done' : 'Save and Next'}\n          disabled={isOnePointBox || workState === WorkState.Creating}\n          onClick={(): void => {\n            dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n            if (index === images.length - 1) closeDialog();\n            setIndex((prev) => (prev + 1) % images.length);\n          }}\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            closeDialog();\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst checkOnePointBox = (annotations: Annotation[]): boolean => {\n  if (annotations.length === 0) return false;\n  const { label } = annotations[annotations.length - 1];\n  return label.x1 === label.x2 && label.y1 === label.y2;\n};\n\nexport default LabelingPage;\n","import React, { memo, FC, useState, useEffect } from 'react';\nimport { Dialog } from '@fluentui/react-northstar';\n\nimport LabelingPage from '../pages/LabelingPage';\nimport { LabelingType } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { RelabelImage } from './ManualIdentification/types';\n\ninterface LabelingPageDialogProps {\n  trigger: JSX.Element;\n  imageIndex: number;\n  images: LabelImage[] | RelabelImage[];\n  isRelabel: boolean;\n  forceOpen?: boolean;\n}\nconst LabelingPageDialog: FC<LabelingPageDialogProps> = ({\n  trigger,\n  images,\n  imageIndex,\n  forceOpen = false,\n}): JSX.Element => {\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    setOpen(forceOpen);\n  }, [forceOpen]);\n\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '80%' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      content={\n        <LabelingPage\n          closeDialog={(): void => setOpen(false)}\n          labelingType={LabelingType.SingleAnnotation}\n          images={images}\n          imageIndex={imageIndex}\n        />\n      }\n    />\n  );\n};\n\nexport default memo(LabelingPageDialog);\n","import React, { useEffect, useMemo, useCallback, useLayoutEffect, memo, MouseEvent, FC, useRef } from 'react';\nimport Konva from 'konva';\nimport { Text } from '@fluentui/react-northstar';\n\nimport useImage from './LabelingPage/util/useImage';\nimport { AnnotationState, Annotation, Size2D } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport getResizeImageFunction from './LabelingPage/util/resizeImage';\n\ninterface LabelDisplayImageProps {\n  labelImage: LabelImage;\n  labelText?: string;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst LabelDisplayImage: FC<LabelDisplayImageProps> = ({\n  labelImage,\n  labelText = '',\n  pointerCursor = false,\n  onClick,\n}) => {\n  const stage = useRef<Konva.Stage>(null);\n  const layer = useRef<Konva.FastLayer>(null);\n  const img = useRef<Konva.Image>(null);\n\n  const imgSize = useRef<Size2D>({ width: 400, height: 300 });\n  const imgScale = useRef<number>(1);\n  const shapes = useRef<BoxShape[]>([]);\n  const [image, , size] = useImage(labelImage.image, 'anonymous');\n  const resizeImage = useCallback(getResizeImageFunction(imgSize.current), [imgSize.current]);\n\n  const annotations = useMemo<Annotation[]>(() => {\n    if (!labelImage?.labels) return [];\n\n    return JSON.parse(labelImage.labels).map((parsedLabels, i) => ({\n      id: i,\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n  }, [labelImage]);\n  useLayoutEffect(() => {\n    const container: HTMLDivElement = document.querySelector('#container');\n    const width = container.offsetWidth;\n    const height = container.offsetHeight;\n    imgSize.current = { width, height };\n  }, []);\n  useEffect(() => {\n    if (size.width > 0) {\n      if (layer.current === null) {\n        const [outcomeSize, outcomeScale] = resizeImage(size);\n        imgScale.current = outcomeScale;\n\n        stage.current = new Konva.Stage({\n          height: outcomeSize.height,\n          width: outcomeSize.width,\n          scale: { x: outcomeScale, y: outcomeScale },\n          container: `display-${labelImage.id}`,\n        });\n\n        layer.current = new Konva.FastLayer();\n\n        img.current = new Konva.Image({ image });\n\n        layer.current.add(img.current);\n        stage.current.add(layer.current);\n      }\n      const newShapes = annotations.map((e) => annotationToShape(e, imgScale.current));\n\n      for (let i = 0; i < shapes.current.length; i++) {\n        shapes.current[i].edge.destroy();\n        shapes.current[i].points.forEach((e) => e.destroy());\n      }\n\n      shapes.current = newShapes;\n      for (let i = 0; i < newShapes.length; i++) {\n        const { points, edge } = newShapes[i];\n        layer.current.add(edge);\n\n        for (let j = 0; j < points.length; j++) {\n          layer.current.add(points[j]);\n        }\n      }\n\n      layer.current.draw();\n    }\n  }, [size, image, resizeImage, labelImage.id, annotations]);\n\n  return (\n    <div\n      onClick={onClick}\n      id=\"container\"\n      style={{\n        cursor: pointerCursor ? 'pointer' : 'default',\n        display: 'flex',\n        flexFlow: 'column',\n        height: '100%',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <div id={`display-${labelImage.id}`} />\n      <Text align=\"center\">{labelText}</Text>\n    </div>\n  );\n};\n\ntype BoxShape = {\n  id: number;\n  edge: Konva.Line;\n  points: Konva.Circle[];\n};\nconst annotationToShape = (annotation: Annotation, imgScale: number): BoxShape => {\n  const { id, label } = annotation;\n  const edge = new Konva.Line({\n    points: [\n      label.x1,\n      label.y1,\n      label.x2,\n      label.y1,\n      label.x2,\n      label.y2,\n      label.x1,\n      label.y2,\n      label.x1,\n      label.y1,\n    ],\n    stroke: 'red',\n    strokeWidth: 1 / imgScale,\n    closed: true,\n  });\n\n  const points = [];\n\n  points.push(new Konva.Circle({ x: label.x1, y: label.y1, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x1, y: label.y2, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x2, y: label.y2, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x2, y: label.y1, radius: 3 / imgScale, fill: 'red' }));\n\n  return {\n    id,\n    edge,\n    points,\n  };\n};\n\nexport default memo(LabelDisplayImage);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Image, Tooltip, Flex, RadioGroup } from '@fluentui/react-northstar';\n\nimport { thunkAddCapturedImages } from '../../store/part/partActions';\nimport { RTSPVideoProps } from './RTSPVideo.type';\n\nexport const RTSPVideoComponent: React.FC<RTSPVideoProps> = ({\n  rtsp = null,\n  partId,\n  canCapture,\n  onVideoStart,\n  onVideoPause,\n  setOpenLabelingPage,\n}) => {\n  const dispatch = useDispatch();\n  const [streamId, setStreamId] = useState<string>('');\n  const [captureLabelMode, setCaptureLabelMode] = useState<number>(0);\n\n  const onCreateStream = (): void => {\n    let url = `/api/streams/connect/?part_id=${partId}&rtsp=${rtsp}`;\n    if (!canCapture) url += '&inference=1';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.status === 'ok') {\n          setStreamId(data.stream_id);\n        }\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoStart) onVideoStart();\n  };\n\n  const onCapturePhoto = (): void => {\n    dispatch(thunkAddCapturedImages(streamId));\n    if (captureLabelMode === 0) {\n      setOpenLabelingPage(true);\n    }\n  };\n\n  const onDisconnect = (): void => {\n    setStreamId('');\n    fetch(`/api/streams/${streamId}/disconnect`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoPause) onVideoPause();\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onDisconnect);\n    return (): void => {\n      window.removeEventListener('beforeunload', onDisconnect);\n    };\n  });\n\n  const src = streamId ? `/api/streams/${streamId}/video_feed` : '';\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '30rem', backgroundColor: 'black' }}>\n        {src ? <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'contain' }} /> : null}\n      </div>\n      <Flex column hAlign=\"center\" gap=\"gap.small\">\n        <Flex styles={{ height: '50px' }} hAlign=\"center\" gap=\"gap.large\">\n          <ImageBtn\n            name=\"Play\"\n            src=\"/icons/play-button.png\"\n            disabled={rtsp === null}\n            onClick={onCreateStream}\n          />\n          {canCapture && (\n            <ImageBtn\n              name=\"Capture\"\n              src=\"/icons/screenshot.png\"\n              disabled={!streamId}\n              onClick={onCapturePhoto}\n            />\n          )}\n          <ImageBtn name=\"Stop\" src=\"/icons/stop.png\" disabled={!streamId} onClick={onDisconnect} />\n        </Flex>\n        <RadioGroup\n          checkedValue={captureLabelMode}\n          onCheckedValueChange={(_, newProps): void => {\n            setCaptureLabelMode(newProps.value as number);\n          }}\n          items={[\n            {\n              key: '0',\n              label: 'Capture image and label per image',\n              value: 0,\n            },\n            {\n              key: '1',\n              label: 'Capture image and label all later',\n              value: 1,\n            },\n          ]}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport const RTSPVideo = React.memo(RTSPVideoComponent);\n\nconst ImageBtn = ({ src, name, disabled = false, onClick = () => {} }): JSX.Element => {\n  if (disabled) return <Image src={src} styles={{ height: '100%', filter: 'opacity(50%)' }} />;\n\n  return (\n    <Tooltip content={name}>\n      <Image src={src} styles={{ height: '100%', cursor: 'pointer' }} onClick={onClick} />\n    </Tooltip>\n  );\n};\n","import {\n  AddCapturedImageAction,\n  ADD_CAPTURED_IMAGE,\n  PartThunk,\n  UpdateCapturedImageAction,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\nimport { LabelImage } from '../image/imageTypes';\nimport { postLabelImageSuccess } from '../image/imageActions';\n\nexport const addCapturedImages = (newCapturedImage: LabelImage): AddCapturedImageAction => ({\n  type: ADD_CAPTURED_IMAGE,\n  payload: { newCapturedImage },\n});\n\nexport const updateCapturedImages = (capturedImages: LabelImage[]): UpdateCapturedImageAction => ({\n  type: UPDATE_CAPTURED_IMAGES,\n  payload: { capturedImages },\n});\n\nexport const thunkAddCapturedImages = (streamId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/streams/${streamId}/capture`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 'ok') {\n        dispatch(addCapturedImages(data.image));\n        dispatch(postLabelImageSuccess(data.image));\n      }\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const thunkGetCapturedImages = (partId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/images`)\n    .then((response) => response.json())\n    .then((data) => {\n      const imagesWithRelatedPart = data.reduce((acc, cur) => {\n        if (cur.part.split('/')[5] === partId) acc.push(cur);\n        return acc;\n      }, []);\n      dispatch(updateCapturedImages(imagesWithRelatedPart));\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","export const getIdFromUrl = (url: string): number => parseInt(url.split(\"/\")[5], 10) ;","import { LabelImage } from '../store/image/imageTypes';\nimport { getIdFromUrl } from './GetIDFromUrl';\n\ninterface Options {\n  partId?: number;\n  isRelabel?: boolean;\n}\nexport const getFilteredImages = (\n  images: LabelImage[],\n  { partId, isRelabel = false }: Options,\n): LabelImage[] => {\n  if (partId === undefined) return images;\n  return images.filter((image) => getIdFromUrl(image.part) === partId && image.is_relabel === isRelabel);\n};\n","import { DropdownItemProps } from '@fluentui/react-northstar';\n\nexport type Value = { id: number; name: string } | { id: number; name: string }[];\n\nexport const formatDropdownValue = (value: Value): DropdownItemProps | DropdownItemProps[] => {\n  if (Array.isArray(value)) {\n    return value.map((e) => ({\n      header: e.name,\n      content: {\n        key: e.id,\n      },\n    }));\n  }\n  if (value) {\n    return {\n      header: value.name,\n      content: {\n        key: value.id,\n      },\n    };\n  }\n  return null;\n};\n","import React, { useState, useEffect, useRef, Dispatch } from 'react';\nimport { Flex, Dropdown, Text, DropdownItemProps, Grid } from '@fluentui/react-northstar';\nimport { Link, Prompt } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useCameras } from '../../hooks/useCameras';\nimport { State } from '../../store/State';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { RTSPVideo } from '../RTSPVideo';\nimport { getLabelImages } from '../../store/image/imageActions';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { formatDropdownValue } from '../../util/formatDropdownValue';\n\nexport const CapturePhotos: React.FC<{\n  partId: number;\n  goLabelImageIdx: number;\n  setGoLabelImageIdx: Dispatch<number>;\n}> = ({ partId, goLabelImageIdx, setGoLabelImageIdx }) => {\n  const dispatch = useDispatch();\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n  const [openLabelingPage, setOpenLabelingPage] = useState<boolean>(false);\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const prevImageLength = useRef<number>(filteredImages.length);\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n  useEffect(() => {\n    if (openLabelingPage && prevImageLength.current !== filteredImages.length) {\n      setGoLabelImageIdx(filteredImages.length - 1);\n      setOpenLabelingPage(false);\n      prevImageLength.current = filteredImages.length;\n    }\n  }, [openLabelingPage, filteredImages, setGoLabelImageIdx]);\n\n  return (\n    <Flex gap=\"gap.small\" styles={{ height: '90%', maxHeight: '650px' }}>\n      <Flex column gap=\"gap.small\" styles={{ width: '70%' }}>\n        <CameraSelector selectedCamera={selectedCamera} setSelectedCamera={setSelectedCamera} />\n        <RTSPVideo\n          rtsp={selectedCamera?.rtsp}\n          partId={partId}\n          canCapture={true}\n          setOpenLabelingPage={setOpenLabelingPage}\n        />\n      </Flex>\n      <Flex column gap=\"gap.small\" styles={{ width: '30%' }}>\n        <CapturedImagesContainer partId={partId} goLabelImageIdx={goLabelImageIdx} />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst CameraSelector = ({ selectedCamera, setSelectedCamera }): JSX.Element => {\n  const availableCameras = useCameras();\n\n  const items: DropdownItemProps[] = availableCameras.map((ele) => ({\n    header: ele.name,\n    content: {\n      key: ele.id,\n    },\n  }));\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setSelectedCamera((prev) => prev);\n    else {\n      const { key } = data.value.content;\n      const newSelectedCamera = availableCameras.find((ele) => ele.id === key);\n      if (newSelectedCamera) setSelectedCamera(newSelectedCamera);\n    }\n  };\n\n  // FIXME Find a better way to replace the setState in the effect\n  useEffect(() => {\n    if (availableCameras.length === 1) setSelectedCamera(availableCameras[0]);\n  }, [availableCameras, setSelectedCamera]);\n\n  return (\n    <Flex gap=\"gap.small\" vAlign=\"center\">\n      <Text>Select Camera</Text>\n      <Dropdown items={items} onChange={onDropdownChange} value={formatDropdownValue(selectedCamera)} />\n      <Link to=\"/cameras\">Add Camera</Link>\n    </Flex>\n  );\n};\n\nexport const CapturedImagesContainer = ({ goLabelImageIdx, partId }): JSX.Element => {\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n  const imageCount = filteredImages.length;\n\n  return (\n    <>\n      <Text>Total: {imageCount}</Text>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"2\"\n        styles={{\n          border: '1px solid grey',\n          height: '40rem',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n          justifyItems: 'center',\n          alignItems: 'center',\n          overflow: 'scroll',\n        }}\n      >\n        {filteredImages.map((image, i, arr) => (\n          <div key={image.id} style={{ height: '100%', width: '100%' }}>\n            <span>{i + 1}</span>\n            <LabelingPageDialog\n              key={i}\n              imageIndex={i}\n              images={arr}\n              forceOpen={goLabelImageIdx === i}\n              trigger={\n                <div style={{ height: 150, width: 200 }}>\n                  <LabelDisplayImage labelImage={image} pointerCursor />\n                </div>\n              }\n              isRelabel={false}\n            />\n          </div>\n        ))}\n      </Grid>\n      <Prompt\n        when={imageCount < 15}\n        message=\"The count of images is less than 15, which may cause error when configure part identification. Sure you want to leave?\"\n      />\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Text, Grid, Flex } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/State';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getLabelImages, postLabelImage } from '../../store/image/imageActions';\n\nexport const UploadPhotos = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  function handleUpload(e: React.ChangeEvent<HTMLInputElement>): void {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const formData = new FormData();\n      formData.append('image', e.target.files[i]);\n      formData.append('part', `/api/parts/${partId}/`);\n      dispatch(postLabelImage(formData));\n    }\n  }\n\n  return (\n    <Flex gap=\"gap.smaller\" column>\n      <input type=\"file\" onChange={handleUpload} accept=\"image/*\" multiple />\n      <CapturedImagesContainer capturedImages={filteredImages} isValid={isValid} partId={partId} />\n    </Flex>\n  );\n};\n\nconst CapturedImagesContainer = ({ capturedImages, isValid, partId }): JSX.Element => {\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"6\"\n        styles={{\n          border: '1px solid grey',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n          justifyItems: 'center',\n          alignItems: 'center',\n          overflow: 'scroll',\n        }}\n      >\n        {capturedImages.map((image, i, arr) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            images={arr}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor />}\n            isRelabel={false}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import React from 'react';\nimport { Dialog, Flex, ExclamationCircleIcon } from '@fluentui/react-northstar';\nimport { WarningDialogProps } from './WarningDialog.type';\n\nexport const WarningDialog: React.FC<WarningDialogProps> = ({\n  onConfirm = null,\n  onCancel = null,\n  trigger,\n  contentText,\n  cancelButton = 'Cancel',\n  confirmButton = 'Confirm',\n  open = undefined,\n}): JSX.Element => {\n  return (\n    <Dialog\n      styles={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n      cancelButton={cancelButton}\n      confirmButton={confirmButton}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      open={open}\n      content={\n        <>\n          <Flex hAlign=\"center\" column>\n            <ExclamationCircleIcon\n              size=\"largest\"\n              styles={({ theme: { siteVariables } }): any => ({\n                color: siteVariables.colorScheme.brand.foreground,\n              })}\n            />\n            <div>{contentText}</div>\n          </Flex>\n        </>\n      }\n      trigger={trigger}\n    />\n  );\n};\n","import { ThemeInput, mergeThemes, themes } from '@fluentui/react-northstar';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colors: {\n      brand: {\n        '50': '#f3fafd',\n        '100': '#d1ecf9',\n        '200': '#aadcf4',\n        '300': '#5dbce8',\n        '400': '#1ba0dd',\n        '500': '#0094d8',\n        '600': '#0085c3',\n        '700': '#0071a5',\n        '800': '#005379',\n        '900': 'black',\n      },\n    },\n    colorScheme: {\n      brand: {\n        foreground: '#0094d8',\n        background: '#0094d8',\n        border: '#E1DFDD',\n        shadow: '#000',\n        foregroundHover: '#0094d8',\n        backgroundHover: '#0085c3',\n        borderHover: '#5dbce8',\n        shadowHover: '#000',\n        foregroundActive: '#0094d8',\n        backgroundActive: '#0094d8',\n        borderActive: '#E1DFDD',\n        shadowActive: undefined,\n        foregroundFocus: '#0094d8',\n        backgroundFocus: '#0094d8',\n        borderFocus: '#000',\n        shadowFocus: undefined,\n        foregroundPressed: '#0071a5',\n        backgroundPressed: '#0071a5',\n        borderPressed: '#5dbce8',\n        shadowPressed: undefined,\n        foregroundDisabled: '#C8C6C4',\n        backgroundDisabled: '#EDEBE9',\n        borderDisabled: '#EDEBE9',\n        shadowDisabled: undefined,\n        foreground1: '#0094d8',\n        foreground2: '#0085c3',\n        foreground3: '#aadcf4',\n        foreground4: '#fff',\n        background1: '#d1ecf9',\n        background2: '#005379',\n        background3: '#373644',\n        background4: '#0071a5',\n        border1: '#aadcf4',\n        border2: '#5dbce8',\n        foregroundHover1: '#fff',\n        foregroundHover2: '#aadcf4',\n        backgroundHover1: '#f3fafd',\n        foregroundPressed1: '#fff',\n        foregroundActive1: '#0094d8',\n        foregroundActive2: '#aadcf4',\n        backgroundActive1: '#0094d8',\n        borderActive1: '#aadcf4',\n        borderActive2: '#5dbce8',\n        foregroundFocus1: '#0094d8',\n        foregroundFocus2: '#0085c3',\n        foregroundFocus3: '#aadcf4',\n        foregroundFocus4: '#fff',\n        backgroundFocus1: '#d1ecf9',\n        backgroundFocus2: '#005379',\n        backgroundFocus3: '#373644',\n        borderFocusWithin: '#fff',\n        borderFocus1: '#0094d8',\n        foregroundDisabled1: '#C8C6C4',\n        backgroundDisabled1: '#EDEBE9',\n      },\n    },\n  },\n};\n\n/**\n * Primary color is based on #0094d8 and generated by https://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/theming-designer/index.html\n */\nexport const mainTheme = mergeThemes(themes.teams, theme);\n","import { ThemeInput, mergeThemes } from '@fluentui/react-northstar';\nimport { mainTheme } from './mainTheme';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colorScheme: {\n      brand: {\n        foreground: '#C4314B',\n        background: '#C4314B',\n        foregroundHover: '#A72037',\n        backgroundHover: '#A72037',\n        foregroundActive: '#8E192E',\n        backgroundActive: '#8E192E',\n        foregroundPressed: '#8E192E',\n        backgroundPressed: '#8E192E',\n      },\n    },\n  },\n};\n\nexport const errorTheme = mergeThemes(mainTheme, theme);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Project } from '../store/project/projectTypes';\nimport { thunkGetProject } from '../store/project/projectActions';\n\n/**\n * Fetch the project data from server and set to Redux Store\n */\nexport const useProject = (isDemo?: boolean): Project => {\n  const dispatch = useDispatch();\n  const project = useSelector<State, Project>((state) => state.project);\n\n  useEffect(() => {\n    dispatch(thunkGetProject(isDemo));\n  }, [dispatch, isDemo]);\n\n  return project;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Input, Button, Menu, Grid, Alert, Provider } from '@fluentui/react-northstar';\nimport { Link, useLocation, Switch, Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { CapturePhotos } from '../components/CapturePhoto';\nimport { UploadPhotos } from '../components/UploadPhotos';\nimport { useQuery } from '../hooks/useQuery';\nimport { WarningDialog } from '../components/WarningDialog';\nimport { errorTheme } from '../themes/errorTheme';\nimport { LoadingDialog, Status } from '../components/LoadingDialog/LoadingDialog';\nimport { useProject } from '../hooks/useProject';\n\nexport const PartDetails = (): JSX.Element => {\n  const partId = useQuery().get('partId');\n  const [goLabelImageIdx, setGoLabelImageIdx] = useState<number>(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const [status, setStatus] = useState<Status>(Status.None);\n  const project = useProject(false);\n\n  const onSave = (): void => {\n    axios({\n      method: 'PUT',\n      url: `/api/parts/${partId}/`,\n      data: {\n        name,\n        description,\n      },\n    })\n      .then(() => {\n        history.push(`/parts/`);\n        return void 0;\n      })\n      .catch((err) => {\n        setError(JSON.stringify(err.response.data));\n      });\n  };\n\n  const onDelete = async (): Promise<void> => {\n    setStatus(Status.Loading);\n\n    try {\n      await axios.get(`/api/projects/${project.data.id}/delete_tag?part_name=${name}`);\n      await axios.delete(`/api/parts/${partId}/`);\n      setStatus(Status.Success);\n    } catch (e) {\n      setError(e);\n    }\n  };\n\n  return (\n    <Grid columns={'68% 30%'} rows={'80px auto 30px'} styles={{ gridColumnGap: '20px', height: '100%' }}>\n      {partId ? <Tab partId={partId} /> : null}\n      <PartInfoForm\n        partId={partId}\n        name={name}\n        setName={setName}\n        description={description}\n        setDescription={setDescription}\n      />\n      <Flex column gap=\"gap.small\" styles={{ gridColumn: '1 / span 2' }}>\n        <CaptureImagePanel\n          partId={partId}\n          goLabelImageIdx={goLabelImageIdx}\n          setGoLabelImageIdx={setGoLabelImageIdx}\n        />\n      </Flex>\n      <Flex styles={{ gridColumn: '2 / span 1' }} hAlign=\"center\" vAlign=\"center\" gap=\"gap.small\">\n        <Button content=\"Save\" primary onClick={onSave} disabled={!name} />\n        <Provider theme={errorTheme}>\n          <WarningDialog\n            contentText={\n              <p>\n                Sure you want to delete the part <b>{name}</b>?\n              </p>\n            }\n            trigger={<Button content=\"Delete\" primary />}\n            onConfirm={onDelete}\n          />\n        </Provider>\n        <LoadingDialog\n          status={status}\n          onConfirm={() => {\n            if (status === Status.Success) history.push(`/parts/`);\n          }}\n        />\n        {!!error && <Alert danger content={error} dismissible />}\n      </Flex>\n    </Grid>\n  );\n};\n\nconst PartInfoForm = ({ partId, name, setName, description, setDescription }): JSX.Element => {\n  useEffect(() => {\n    if (partId) {\n      axios\n        .get(`/api/parts/${partId}/`)\n        .then(({ data }) => {\n          setName(data.name);\n          setDescription(data.description);\n          return void 0;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [partId, setDescription, setName]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n      }}\n    >\n      <Input\n        placeholder=\"Enter Part Name...\"\n        fluid\n        value={name}\n        onChange={(_, newProps): void => {\n          setName(newProps.value);\n        }}\n      />\n      <Input\n        placeholder=\"Enter Description...\"\n        fluid\n        value={description}\n        onChange={(_, newProps): void => {\n          setDescription(newProps.value);\n        }}\n      />\n    </div>\n  );\n};\n\nconst CaptureImagePanel = ({ partId, goLabelImageIdx, setGoLabelImageIdx }): JSX.Element => {\n  return (\n    <Switch>\n      <Route path={`/parts/detail/capturePhotos`}>\n        <CapturePhotos\n          partId={parseInt(partId, 10)}\n          goLabelImageIdx={goLabelImageIdx}\n          setGoLabelImageIdx={setGoLabelImageIdx}\n        />\n      </Route>\n      <Route path={`/parts/detail/uploadPhotos`}>\n        <UploadPhotos partId={parseInt(partId, 10)} />\n      </Route>\n    </Switch>\n  );\n};\n\nconst Tab = ({ partId }): JSX.Element => {\n  const items = [\n    {\n      key: 'uploadPhotos',\n      as: Link,\n      to: `/parts/detail/uploadPhotos?partId=${partId}`,\n      content: 'Upload Photos',\n    },\n    {\n      key: 'capturePhotos',\n      as: Link,\n      to: `/parts/detail/capturePhotos?partId=${partId}`,\n      content: 'Capture Photo',\n    },\n  ];\n\n  const { pathname } = useLocation();\n  const activeIndex = items.findIndex((ele) => ele.to.split('?')[0] === pathname);\n\n  return (\n    <div>\n      <Menu items={items} activeIndex={activeIndex} pointing primary />\n    </div>\n  );\n};\n","import axios from 'axios';\nimport {\n  GET_LOCATION_SUCCESS,\n  POST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  GetLocationsSuccess,\n  RequestLocationsFailure,\n  PostLocationSuccess,\n  Location,\n} from './locationTypes';\n\nconst getLocationsSuccess = (data: Location[]): GetLocationsSuccess => ({\n  type: GET_LOCATION_SUCCESS,\n  payload: data,\n});\n\nconst requestLocationsFailure = (error: any): RequestLocationsFailure => {\n  console.error(error);\n  alert(error);\n  return { type: REQUEST_LOCATION_FAILURE };\n};\n\nconst postLocationSuccess = (data: Location): PostLocationSuccess => ({\n  type: POST_LOCATION_SUCCESS,\n  payload: data,\n});\n\nexport const getLocations = () => (dispatch): Promise<void> => {\n  return axios('/api/locations/')\n    .then(({ data }) => {\n      dispatch(getLocationsSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n\nexport const postLocation = (newLocation: Location) => (dispatch): Promise<void> => {\n  return axios('/api/locations/', {\n    method: 'POST',\n    data: newLocation,\n  })\n    .then(({ data }) => {\n      dispatch(postLocationSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n","import React, { useEffect, FC } from 'react';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { State } from '../store/State';\nimport { Location } from '../store/location/locationTypes';\nimport ImageLink from '../components/ImageLink';\nimport { getLocations, postLocation } from '../store/location/locationActions';\nimport { AddModuleDialog } from '../components/AddModuleDialog';\n\nconst Locations: FC = () => {\n  const dispatch = useDispatch();\n  const locations = useSelector<State, Location[]>((state) => state.locations.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getLocations());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {locations.map((location, i) => (\n          <ImageLink\n            key={i}\n            to={`/locations/detail?name=${location.name}`}\n            defaultSrc=\"/icons/defaultLocation.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            label={location.name}\n          />\n        ))}\n      </Grid>\n      <div style={{ alignSelf: 'flex-end' }}>\n        <AddModuleDialog\n          header=\"Add Location\"\n          fields={[\n            {\n              placeholder: 'Location Name',\n              key: 'name',\n              type: 'input',\n              required: true,\n            },\n            {\n              placeholder: 'Description',\n              key: 'description',\n              type: 'textArea',\n              required: false,\n            },\n          ]}\n          onConfirm={({ name, description }): void => {\n            dispatch(postLocation({ name, description, is_demo: false }));\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Locations;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Flex, Text, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { Location } from '../store/location/locationTypes';\nimport { State } from '../store/State';\nimport { useQuery } from '../hooks/useQuery';\n\nconst LocationDetails: FC = () => {\n  const name = useQuery().get('name');\n  const location = useSelector<State, Location>((state) => state.locations.find((e) => e.name === name));\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Details\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"6.25em\" height=\"6.25em\" />\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Text styles={{ paddingTop: '0.625em', minHeight: '6.25em' }}>{location.name}</Text>\n          <Text styles={{ height: '60%' }}>{location.description}</Text>\n        </Flex>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationDetails;\n","import React, { useState, useEffect, SetStateAction, Dispatch, FC, memo, useMemo } from 'react';\nimport { Dropdown, DropdownItemProps, Text, RadioGroup } from '@fluentui/react-northstar';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImageIdentificationItemProps {\n  confidenceLevel: number;\n  relabelImages: RelabelImage[];\n  imageIndex: number;\n  setJudgedImageList: Dispatch<SetStateAction<JudgedImageList>>;\n  partId: number;\n  partItems: DropdownItemProps[];\n  isPartCorrect: number;\n}\nconst ImageIdentificationItem: FC<ImageIdentificationItemProps> = ({\n  confidenceLevel,\n  relabelImages,\n  imageIndex,\n  setJudgedImageList,\n  partId,\n  partItems,\n  isPartCorrect,\n}) => {\n  const filteredPartItems = useMemo(\n    () => [\n      {\n        header: 'No Object',\n        content: {\n          key: null,\n        },\n      },\n      ...partItems.filter((e) => (e.content as { key: number }).key !== partId),\n    ],\n    [partId, partItems],\n  );\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(filteredPartItems[0]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n\n      setJudgedImageList((prev) => {\n        const next = [...prev];\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx === -1) throw new Error(\"Image id doesn't match\");\n        next[idx] = { ...next[idx], partId: value.content.key };\n\n        return next;\n      });\n    }\n  };\n\n  const onRadioGroupChange = (_, newProps): void => {\n    setJudgedImageList((prev) => {\n      const next = [...prev];\n\n      if (newProps.value === 1) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId };\n        else next.push({ imageId: relabelImages[imageIndex].id, partId });\n      } else if (newProps.value === 0) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId: null };\n        else {\n          next.push({\n            imageId: relabelImages[imageIndex].id,\n            partId: null,\n          });\n        }\n      }\n      return next;\n    });\n  };\n\n  useEffect(() => {\n    setJudgedImageList([]);\n    setSelectedPartItem(filteredPartItems[0]);\n  }, [filteredPartItems, setSelectedPartItem, setJudgedImageList]);\n\n  return (\n    <div\n      style={{\n        minHeight: '16em',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <LabelingPageDialog\n        imageIndex={imageIndex}\n        images={relabelImages}\n        isRelabel={true}\n        trigger={\n          <div\n            style={{\n              padding: '0.5em',\n              height: '96%',\n              flex: '1 0 0',\n            }}\n          >\n            <LabelDisplayImage pointerCursor labelImage={relabelImages[imageIndex]} />\n          </div>\n        }\n      />\n      <div\n        style={{\n          height: '96%',\n          maxHeight: '10em',\n          flex: '1 0 0',\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <Text truncated>\n          Confidence Level: <b>{confidenceLevel}%</b>\n        </Text>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '50%',\n            padding: '0.2em',\n          }}\n        >\n          <RadioGroup\n            checkedValue={isPartCorrect}\n            onCheckedValueChange={onRadioGroupChange}\n            items={[\n              {\n                key: '1',\n                label: 'Yes',\n                value: 1,\n              },\n              {\n                key: '0',\n                label: 'No',\n                value: 0,\n              },\n            ]}\n          />\n          {isPartCorrect === 0 && filteredPartItems.length > 0 && (\n            <div style={{ width: '50%' }}>\n              <Dropdown\n                fluid\n                items={filteredPartItems}\n                onChange={onDropdownChange}\n                value={selectedPartItem}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImageIdentificationItem);\n","import React, { FC, Dispatch, memo } from 'react';\nimport { Grid, DropdownItemProps } from '@fluentui/react-northstar';\nimport ImageIdentificationItem from './ImageItem';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImagesContainerProps {\n  images: RelabelImage[];\n  judgedImageList: JudgedImageList;\n  setJudgedImageList: Dispatch<JudgedImageList>;\n  selectedPartId: number;\n  partItems: DropdownItemProps[];\n}\nconst ImagesContainer: FC<ImagesContainerProps> = ({\n  images,\n  judgedImageList,\n  setJudgedImageList,\n  selectedPartId,\n  partItems,\n}) => (\n  <Grid\n    columns=\"2\"\n    styles={{\n      width: '100%',\n      height: '80%',\n      overflow: 'scroll',\n      borderWidth: '0.0625em',\n      borderStyle: 'solid',\n    }}\n  >\n    {images\n      .filter((img) => img.display)\n      .map((img, i, arr) => {\n        if (img.display) {\n          let isPartCorrect: number = null;\n          const idx = judgedImageList.findIndex((e) => e.imageId === img.id);\n\n          if (idx >= 0) {\n            if (judgedImageList[idx].partId === selectedPartId) {\n              isPartCorrect = 1;\n            } else isPartCorrect = 0;\n          }\n\n          return (\n            <ImageIdentificationItem\n              key={img.id}\n              confidenceLevel={img.confidenceLevel}\n              imageIndex={i}\n              relabelImages={arr}\n              isPartCorrect={isPartCorrect}\n              setJudgedImageList={setJudgedImageList}\n              partId={selectedPartId}\n              partItems={partItems}\n            />\n          );\n        }\n        return void 0;\n      })}\n  </Grid>\n);\n\nexport default memo(ImagesContainer);\n","import React, { useState, useEffect, useRef, useMemo, FC } from 'react';\nimport {\n  Dropdown,\n  DropdownItemProps,\n  Grid,\n  Flex,\n  Text,\n  Divider,\n  Button,\n  ArrowDownIcon,\n  ArrowUpIcon,\n} from '@fluentui/react-northstar';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport { Range, Handle } from 'rc-slider';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../rc-slider.css';\n\nimport { State } from '../store/State';\nimport { useParts } from '../hooks/useParts';\nimport { ProjectData } from '../store/project/projectTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getFilteredImages } from '../util/getFilteredImages';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { getLabelImages } from '../store/image/imageActions';\nimport { JudgedImageList, RelabelImage } from '../components/ManualIdentification/types';\nimport ImagesContainer from '../components/ManualIdentification/ImagesContainer';\n\nconst ManualIdentification: FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { projectData, images } = useSelector<State, { projectData: ProjectData; images: LabelImage[] }>(\n    (state) => ({\n      projectData: state.project.data,\n      images: state.images,\n    }),\n  );\n  const parts = useParts(false);\n  const partItems = useMemo<DropdownItemProps[]>(() => {\n    if (parts.length === 0 || projectData.parts.length === 0) return [];\n\n    return projectData.parts.reduce((acc, partId) => {\n      const part = parts.find((e) => e.id === partId);\n\n      if (!part) return acc;\n\n      acc.push({\n        header: part.name,\n        content: {\n          key: part.id,\n        },\n      });\n      return acc;\n    }, []);\n  }, [parts, projectData]);\n\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(null);\n  const selectedPartId: number = (selectedPartItem?.content as { key: number })?.key ?? null;\n\n  const [confidenceLevelRange, setConfidenceLevelRange] = useState<[number, number]>([\n    projectData.accuracyRangeMin,\n    projectData.accuracyRangeMax,\n  ]);\n  const [ascend, setAscend] = useState<boolean>(false);\n  const sortRef = useRef({ sorted: false, prevIsAscend: false });\n  const [judgedImageList, setJudgedImageList] = useState<JudgedImageList>([]);\n\n  const [relabelImages, setRelabelImages] = useState<RelabelImage[]>([]);\n\n  useEffect(() => {\n    dispatch(thunkGetProject(false));\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setRelabelImages(\n      getFilteredImages(images, {\n        partId: selectedPartId,\n        isRelabel: true,\n      }).map((e) => {\n        const confidenceLevel = ((e.confidence * 1000) | 0) / 10;\n        return {\n          ...e,\n          confidenceLevel,\n          display: confidenceLevel >= confidenceLevelRange[0] && confidenceLevel <= confidenceLevelRange[1],\n        };\n      }),\n    );\n    return (): void => {\n      setAscend(false);\n      sortRef.current = { sorted: false, prevIsAscend: false };\n    };\n  }, [confidenceLevelRange, images, selectedPartId]);\n\n  useEffect(() => {\n    if (sortRef.current.sorted) {\n      if (sortRef.current.prevIsAscend !== ascend) {\n        setRelabelImages((prev) => {\n          const next = [...prev];\n          next.reverse();\n          return next;\n        });\n        sortRef.current.prevIsAscend = ascend;\n      }\n    } else {\n      setRelabelImages((prev) => {\n        if (ascend) prev.sort((a, b) => a.confidenceLevel - b.confidenceLevel);\n        else prev.sort((a, b) => b.confidenceLevel - a.confidenceLevel);\n        return [...prev];\n      });\n      sortRef.current = { sorted: true, prevIsAscend: true };\n    }\n  }, [ascend]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n    }\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Manual Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.medium\" space=\"between\" styles={{ height: '75vh', padding: '1em' }}>\n        <Grid columns=\"3\" styles={{ columnGap: '1em', justifyItems: 'center' }}>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text truncated>Select Part:</Text>\n            <Dropdown items={partItems} onChange={onDropdownChange} value={selectedPartItem} />\n          </Flex>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\" styles={{ width: '80%' }}>\n            <Text>Confidence Level:</Text>\n            <div style={{ width: '70%' }}>\n              <Range\n                value={confidenceLevelRange}\n                allowCross={false}\n                onChange={setConfidenceLevelRange}\n                handle={({ value, dragging, index, ...restProps }): JSX.Element => {\n                  return (\n                    <Tooltip\n                      prefixCls=\"rc-slider-tooltip\"\n                      overlay={`${value}%`}\n                      visible={dragging}\n                      placement=\"top\"\n                      key={index}\n                    >\n                      <Handle value={value} {...restProps} />\n                    </Tooltip>\n                  );\n                }}\n              />\n            </div>\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text truncated>Sort:</Text>\n            <Button\n              icon={ascend ? <ArrowDownIcon /> : <ArrowUpIcon />}\n              styles={{ color: sortRef.current.sorted ? '#0094d8' : 'grey' }}\n              text\n              iconOnly\n              onClick={(): void => {\n                setAscend((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Grid>\n        <div style={{ display: 'flex', minWidth: '20em', maxWidth: '20%', justifyContent: 'space-around' }}>\n          <Button\n            primary\n            content=\"Yes to all\"\n            onClick={(): void => {\n              setJudgedImageList(relabelImages.map((e) => ({ imageId: e.id, partId: selectedPartId })));\n            }}\n          />\n          <Button\n            styles={{\n              backgroundColor: '#E97548',\n              color: 'white',\n              ':hover': { backgroundColor: '#CC4A31', color: 'white' },\n            }}\n            content=\"No to remaining\"\n            onClick={(): void => {\n              setJudgedImageList((prev) =>\n                relabelImages.map((relabelImage) => {\n                  const judgedImage = prev.find((imgInList) => imgInList.imageId === relabelImage.id);\n                  return judgedImage ?? { imageId: relabelImage.id, partId: null };\n                }),\n              );\n            }}\n          />\n        </div>\n        <ImagesContainer\n          images={relabelImages}\n          judgedImageList={judgedImageList}\n          setJudgedImageList={setJudgedImageList}\n          selectedPartId={selectedPartId}\n          partItems={partItems}\n        />\n        <Button\n          content=\"Update\"\n          styles={{ width: '15%' }}\n          primary\n          disabled={judgedImageList.length === 0}\n          onClick={(): void => {\n            Axios({ method: 'POST', url: '/api/relabel/update', data: judgedImageList })\n              .then(() => {\n                // * Check if all relabelImages are updated\n                // TODO: Use response to update\n                const judgedIds = judgedImageList.map((e) => e.imageId);\n                if (relabelImages.every((e) => judgedIds.includes(e.id))) {\n                  history.push('/partIdentification');\n                }\n\n                dispatch(getLabelImages());\n                setJudgedImageList([]);\n                return void 0;\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ManualIdentification;\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\nimport { AddModuleDialog } from '../components/AddModuleDialog';\n\nexport const Parts: React.FC = () => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const partsAPI = Axios.get('/api/parts/');\n    const imagesAPI = Axios.get('/api/images/');\n\n    Axios.all([partsAPI, imagesAPI])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: partsRes } = responses[0];\n          const { data: images } = responses[1];\n          setParts(\n            partsRes.map((e) => ({\n              ...e,\n              images: images.find((img) => getIdFromUrl(img.part) === e.id)?.image,\n            })),\n          );\n        }),\n      )\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <Flex gap=\"gap.large\" wrap>\n        {parts\n          .filter((e) => !e.is_demo)\n          .map((ele) => (\n            <Item key={ele.id} src={ele.images} id={ele.id} name={ele.name} />\n          ))}\n      </Flex>\n      <div style={{ position: 'absolute', right: '100px', bottom: '100px' }}>\n        <AddModuleDialog\n          header=\"Add Part\"\n          fields={[\n            {\n              placeholder: 'Part Name',\n              key: 'name',\n              type: 'input',\n              required: true,\n            },\n            {\n              placeholder: 'Description',\n              key: 'description',\n              type: 'textArea',\n              required: false,\n            },\n          ]}\n          onConfirm={({ name, description }): void => {\n            // TODO Migrate this to part action\n            Axios({\n              method: 'POST',\n              url: `/api/parts/`,\n              data: {\n                name,\n                description,\n              },\n            })\n              .then(({ data }) => {\n                setParts((prev) => prev.concat(data));\n                return void 0;\n              })\n              .catch((e) => {\n                if (e.response) {\n                  throw new Error(e.response.data.log);\n                } else if (e.request) {\n                  throw new Error(e.request);\n                } else {\n                  throw e;\n                }\n              })\n              .catch((err) => {\n                alert(err);\n              });\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst Item = ({ src, id, name }): JSX.Element => {\n  return (\n    <Flex column hAlign=\"center\" gap=\"gap.large\" as={Link} to={`/parts/detail/capturePhotos?partId=${id}`}>\n      <div style={{ width: '250px', height: '250px' }}>\n        <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n      </div>\n      <Text size=\"larger\">{name}</Text>\n    </Flex>\n  );\n};\n","import { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport { ReactPlugin } from '@microsoft/applicationinsights-react-js';\n\nlet reactPlugin = null;\nlet appInsights = null;\n\n/**\n * Create the App Insights Telemetry Service\n * @return {{reactPlugin: ReactPlugin, appInsights: Object, initialize: Function}} - Object\n */\nconst createTelemetryService = (): { reactPlugin; appInsights; initialize } => {\n  /**\n   * Initialize the Application Insights class\n   * @param {string} instrumentationKey - Application Insights Instrumentation Key\n   * @param {Object} browserHistory - client's browser history, supplied by the withRouter HOC\n   * @return {void}\n   */\n  const initialize = (instrumentationKey: string, isAppInsightOn: boolean, browserHistory): any => {\n    if (!browserHistory) {\n      throw new Error('Could not initialize Telemetry Service');\n    }\n    if (!instrumentationKey) {\n      throw new Error('Instrumentation key not provided in /src/components/TelemetryProvider.tsx');\n    }\n\n    reactPlugin = new ReactPlugin();\n\n    appInsights = new ApplicationInsights({\n      config: {\n        instrumentationKey,\n        maxBatchInterval: 0,\n        disableFetchTracking: false,\n        disableTelemetry: !isAppInsightOn,\n        extensions: [reactPlugin],\n        extensionConfig: {\n          [reactPlugin.identifier]: {\n            history: browserHistory,\n          },\n        },\n      },\n    });\n\n    appInsights.loadAppInsights();\n  };\n\n  return { reactPlugin, appInsights, initialize };\n};\n\nexport const ai = createTelemetryService();\nexport const getAppInsights = (): ApplicationInsights => appInsights;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { AddModuleDialog } from '.';\nimport { postCamera } from '../../store/camera/cameraActions';\n\nexport const AddCameraLink = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <AddModuleDialog\n      header=\"Add Camera\"\n      fields={[\n        {\n          placeholder: 'Name',\n          key: 'name',\n          type: 'input',\n          required: true,\n        },\n        {\n          placeholder: 'RTSP URL',\n          key: 'rtsp',\n          type: 'input',\n          required: true,\n        },\n      ]}\n      trigger={<p style={{ textDecoration: 'underline', cursor: 'pointer' }}>Add Camera</p>}\n      onConfirm={({ name, rtsp }): void => {\n        (dispatch(postCamera({ name, rtsp, is_demo: false })) as any)\n          .then(() => window.location.reload())\n          .catch(alert);\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { AddModuleDialog } from '.';\nimport { postLocation } from '../../store/location/locationActions';\n\nexport const AddLocationLink = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <AddModuleDialog\n      header=\"Add Location\"\n      fields={[\n        {\n          placeholder: 'Location Name',\n          key: 'name',\n          type: 'input',\n          required: true,\n        },\n        {\n          placeholder: 'Description',\n          key: 'description',\n          type: 'textArea',\n          required: false,\n        },\n      ]}\n      trigger={<p style={{ textDecoration: 'underline', cursor: 'pointer' }}>Add Location</p>}\n      onConfirm={({ name, description }): void => {\n        (dispatch(postLocation({ name, description, is_demo: false })) as any)\n          .then(() => window.location.reload())\n          .catch((e) => alert(e));\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport Axios from 'axios';\n\nimport { AddModuleDialog } from '.';\n\nexport const AddPartLink = () => {\n  return (\n    <AddModuleDialog\n      trigger={<p style={{ textDecoration: 'underline', cursor: 'pointer' }}>Add Part</p>}\n      header=\"Add Part\"\n      fields={[\n        {\n          placeholder: 'Part Name',\n          key: 'name',\n          type: 'input',\n          required: true,\n        },\n        {\n          placeholder: 'Description',\n          key: 'description',\n          type: 'textArea',\n          required: false,\n        },\n      ]}\n      onConfirm={({ name, description }): void => {\n        // TODO Migrate this to part action\n        Axios({\n          method: 'POST',\n          url: `/api/parts/`,\n          data: {\n            name,\n            description,\n          },\n        })\n          .then(() => window.location.reload())\n          .catch((err) => {\n            alert(err);\n          });\n      }}\n    />\n  );\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Divider,\n  Text,\n  Flex,\n  Dropdown,\n  Button,\n  DropdownItemProps,\n  Checkbox,\n  Input,\n  Alert,\n  ShorthandCollection,\n} from '@fluentui/react-northstar';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\n\nimport { thunkGetProject, thunkPostProject, updateProjectData } from '../store/project/projectActions';\nimport { Project, ProjectData } from '../store/project/projectTypes';\nimport { State } from '../store/State';\nimport { formatDropdownValue, Value } from '../util/formatDropdownValue';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\nimport { getAppInsights } from '../TelemetryService';\nimport { WarningDialog } from '../components/WarningDialog';\nimport { AddCameraLink } from '../components/AddModuleDialog/AddCameraLink';\nimport { AddLocationLink } from '../components/AddModuleDialog/AddLocationLink';\nimport { AddPartLink } from '../components/AddModuleDialog/AddPartLink';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getLabelImages } from '../store/image/imageActions';\n\nconst sendTrainInfoToAppInsight = async (selectedParts): Promise<void> => {\n  const { data: images } = await Axios.get('/api/images/');\n\n  const selectedPartIds = selectedParts.map((e) => e.id);\n  const interestedImagesLength = images.filter((e) => selectedPartIds.includes(getIdFromUrl(e.part))).length;\n  const appInsight = getAppInsights();\n  if (appInsight)\n    appInsight.trackEvent({\n      name: 'train',\n      properties: {\n        images: interestedImagesLength,\n        parts: selectedParts.length,\n        source: '',\n      },\n    });\n};\n\nexport const PartIdentification: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error, data } = useSelector<State, Project>((state) => state.project);\n  const {\n    id: projectId,\n    camera,\n    location,\n    parts,\n    needRetraining,\n    accuracyRangeMin,\n    accuracyRangeMax,\n    maxImages: maxImage,\n    sendMessageToCloud,\n    framesPerMin,\n    accuracyThreshold,\n  } = data;\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const [isTestModel, setIsTestModel] = useState(false);\n  const [cameraLoading, dropDownCameras, selectedCamera, setSelectedCameraById] = useDropdownItems<any>(\n    'cameras',\n    isTestModel,\n  );\n  const [partLoading, dropDownParts, selectedParts, setSelectedPartsById] = useDropdownItems<any>(\n    'parts',\n    isTestModel,\n    true,\n  );\n  const [locationLoading, dropDownLocations, selectedLocations, setSelectedLocationById] = useDropdownItems<\n    any\n  >('locations', isTestModel);\n  const history = useHistory();\n  const [maxImgCountError, setMaxImgCountError] = useState(false);\n  const [suggestMessage, setSuggestMessage] = useState({ min: 0, max: 0, partName: '', rangeMessage: '' });\n\n  useEffect(() => {\n    if (!cameraLoading && !partLoading && !locationLoading) {\n      dispatch(thunkGetProject(isTestModel));\n    }\n  }, [dispatch, cameraLoading, locationLoading, partLoading, isTestModel]);\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!isTestModel) {\n      if (location) setSelectedLocationById(location);\n      if (parts.length) setSelectedPartsById(parts);\n      if (camera) setSelectedCameraById(camera);\n    }\n  }, [\n    camera,\n    isTestModel,\n    location,\n    parts,\n    setSelectedCameraById,\n    setSelectedLocationById,\n    setSelectedPartsById,\n  ]);\n\n  const handleSubmitConfigure = async (): Promise<void> => {\n    try {\n      if (!isTestModel) sendTrainInfoToAppInsight(selectedParts);\n\n      const id = await dispatch(\n        thunkPostProject(projectId, selectedLocations, selectedParts, selectedCamera, isTestModel),\n      );\n\n      if (typeof id !== 'undefined')\n        history.push(`/cameras/detail?name=${selectedCamera.name}&isDemo=${isTestModel}`);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  const setData = (keyName: keyof ProjectData, value: ProjectData[keyof ProjectData]): void => {\n    dispatch(updateProjectData({ [keyName]: value }));\n  };\n\n  useEffect(() => {\n    const partsWithImageLength = images.reduce((acc, cur) => {\n      const id = getIdFromUrl(cur.part);\n      const relatedPartIdx = acc.findIndex((e) => e.id === id);\n      if (relatedPartIdx >= 0) acc[relatedPartIdx].length = acc[relatedPartIdx].length + 1 || 1;\n      return acc;\n    }, selectedParts);\n\n    const minimumLengthPart = partsWithImageLength.reduce(\n      (acc, cur) => {\n        if (cur.length < acc.length) return { name: cur.name, length: cur.length };\n        return acc;\n      },\n      { name: '', length: Infinity },\n    );\n\n    if (minimumLengthPart.length === Infinity) return;\n    if (minimumLengthPart.length < 30)\n      setSuggestMessage({\n        min: 10,\n        max: 40,\n        partName: minimumLengthPart.name,\n        rangeMessage: 'lower than 30',\n      });\n    else if (minimumLengthPart.length >= 30 && minimumLengthPart.length < 80)\n      setSuggestMessage({\n        min: 30,\n        max: 60,\n        partName: minimumLengthPart.name,\n        rangeMessage: 'between 30 to 80',\n      });\n    else if (minimumLengthPart.length >= 80 && minimumLengthPart.length < 130)\n      setSuggestMessage({\n        min: 50,\n        max: 80,\n        partName: minimumLengthPart.name,\n        rangeMessage: 'between 80 to 130',\n      });\n    else if (minimumLengthPart.length >= 130)\n      setSuggestMessage({\n        min: 60,\n        max: 90,\n        partName: minimumLengthPart.name,\n        rangeMessage: 'more than 130',\n      });\n  }, [accuracyRangeMin, dispatch, images, selectedParts]);\n\n  const accracyRangeDisabled = !needRetraining || isTestModel;\n  const messageToCloudDisabled = !sendMessageToCloud;\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Part Identification\n      </Text>\n      <Divider color=\"black\" />\n      {error && (\n        <Alert danger header=\"Load Part Identification Error\" content={`${error.name}: ${error.message}`} />\n      )}\n      <Flex column gap=\"gap.large\" design={{ paddingTop: '30px' }}>\n        <ModuleSelector\n          moduleName=\"camera\"\n          to=\"/cameras\"\n          value={selectedCamera}\n          setSelectedModuleItem={setSelectedCameraById}\n          items={dropDownCameras}\n          isMultiple={false}\n        />\n        <ModuleSelector\n          moduleName=\"parts\"\n          to=\"/parts\"\n          value={selectedParts}\n          setSelectedModuleItem={setSelectedPartsById}\n          items={dropDownParts}\n          isMultiple={true}\n        />\n        <ModuleSelector\n          moduleName=\"location\"\n          to=\"/locations\"\n          value={selectedLocations}\n          setSelectedModuleItem={setSelectedLocationById}\n          items={dropDownLocations}\n          isMultiple={false}\n          isTestModel={isTestModel}\n        />\n        <Flex gap=\"gap.large\">\n          <Flex column gap=\"gap.medium\">\n            <Checkbox\n              label=\"Set up retraining\"\n              checked={needRetraining}\n              onChange={(_, { checked }): void => setData('needRetraining', checked)}\n              disabled={isTestModel}\n            />\n            <Text disabled={accracyRangeDisabled}>Capture Image</Text>\n            <Text disabled={accracyRangeDisabled}>\n              Minimum:{' '}\n              <Input\n                type=\"number\"\n                disabled={accracyRangeDisabled}\n                inline\n                value={accuracyRangeMin}\n                onChange={(_, { value }): void => setData('accuracyRangeMin', value)}\n              />\n              %\n            </Text>\n            <Text disabled={accracyRangeDisabled}>\n              Maximum:{' '}\n              <Input\n                type=\"number\"\n                disabled={accracyRangeDisabled}\n                inline\n                value={accuracyRangeMax}\n                onChange={(_, { value }): void => setData('accuracyRangeMax', value)}\n              />\n              %\n            </Text>\n            <Text styles={{ fontSize: '12px' }} success>\n              {`The Part ${suggestMessage.partName} contains images ${suggestMessage.rangeMessage}, recommend to set the range to Min ${suggestMessage.min}% and Max ${suggestMessage.max}% `}\n            </Text>\n            <Text disabled={accracyRangeDisabled}>\n              Maximum Images to Store:{' '}\n              <Input\n                type=\"number\"\n                disabled={accracyRangeDisabled}\n                inline\n                value={maxImage}\n                onChange={(_, { value }): void => {\n                  if ((value as any) < 15) setMaxImgCountError(true);\n                  else setMaxImgCountError(false);\n                  setData('maxImages', value);\n                }}\n              />\n              {maxImgCountError && <Text error>Cannot be less than 15</Text>}\n            </Text>\n          </Flex>\n          <Flex column gap=\"gap.medium\">\n            <Checkbox\n              label=\"Send message to cloud\"\n              checked={sendMessageToCloud}\n              onChange={(_, { checked }): void => setData('sendMessageToCloud', checked)}\n            />\n            <Text disabled={messageToCloudDisabled}>\n              Frames per minute:{' '}\n              <Input\n                type=\"number\"\n                disabled={messageToCloudDisabled}\n                inline\n                value={framesPerMin}\n                onChange={(_, { value }): void => setData('framesPerMin', value)}\n              />\n            </Text>\n            <Text disabled={messageToCloudDisabled}>\n              Accuracy threshold:{' '}\n              <Input\n                type=\"number\"\n                disabled={messageToCloudDisabled}\n                inline\n                value={accuracyThreshold}\n                onChange={(_, { value }): void => setData('accuracyThreshold', value)}\n              />\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex gap=\"gap.large\">\n          <Button\n            content=\"Configure\"\n            primary\n            onClick={handleSubmitConfigure}\n            disabled={(!selectedCamera || !selectedLocations || !selectedParts || isLoading) && !isTestModel}\n            loading={isLoading}\n          />\n          <TestModelButton isTestModel={isTestModel} setIsTestModel={setIsTestModel} />\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nconst TestModelButton = ({ isTestModel, setIsTestModel }): JSX.Element => {\n  if (isTestModel) {\n    return <Button content=\"Back\" onClick={(): void => setIsTestModel(false)} primary />;\n  }\n\n  return (\n    <WarningDialog\n      confirmButton=\"Confirm\"\n      onConfirm={(): void => setIsTestModel(true)}\n      contentText={\n        <>\n          <p>\n            &quot;Demo Pretrained Detection&quot; is for seeing inference result, no retraining experience\n            here.\n          </p>\n          <p>For retraining experience, please create a new model</p>\n        </>\n      }\n      trigger={<Button content=\"Demo Pretrained Detection\" primary />}\n    />\n  );\n};\n\n// TODO Make this integrate with Redux\nfunction useDropdownItems<T>(\n  moduleName: string,\n  isTestModel: boolean,\n  isMultiple?: boolean,\n): [boolean, DropdownItemProps[], T | T[], (id: string | string[]) => void] {\n  const originItems = useRef<(T & { id: number })[]>([]);\n  const [dropDownItems, setDropDownItems] = useState<DropdownItemProps[]>([]);\n  const [selectedItem, setSelectedItem] = useState<T | T[]>(isMultiple ? [] : null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const url =\n      moduleName === 'cameras' && isTestModel\n        ? `/api/${moduleName}/`\n        : `/api/${moduleName}/?is_demo=${Number(isTestModel)}`;\n    setLoading(true);\n    Axios(url)\n      .then(({ data }) => {\n        if (data.length === 0) {\n          setDropDownItems([\n            {\n              header: `No ${moduleName.replace('s', '')} found, please add ${moduleName.replace('s', '')}`,\n              content: {\n                key: 'Dummy',\n              },\n            },\n          ]);\n        } else {\n          setDropDownItems(\n            data.map((e) => ({\n              header: e.name,\n              content: {\n                key: e.id,\n              },\n            })),\n          );\n        }\n        originItems.current = data;\n        if (isMultiple) {\n          setSelectedItem(data);\n        } else {\n          setSelectedItem(data[0]);\n        }\n        setLoading(false);\n        return void 0;\n      })\n      .catch((err) => console.error(err))\n      .finally(() => setLoading(false));\n  }, [isMultiple, moduleName, isTestModel]);\n\n  const setSelectedItemById = useCallback((id: string | string[]): void => {\n    if (Array.isArray(id)) {\n      const correspondedItems = id.reduce((acc, cur) => {\n        const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === cur.toString());\n        if (correspondedItem) acc.push(correspondedItem);\n        return acc;\n      }, []);\n      setSelectedItem(correspondedItems as any);\n    } else {\n      const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === id.toString());\n      if (correspondedItem) setSelectedItem(correspondedItem);\n    }\n  }, []);\n\n  return [loading, dropDownItems, selectedItem, setSelectedItemById];\n}\n\n/* Module Selector */\n\ntype ModuleSelectorProps = {\n  moduleName: string;\n  to: string;\n  value: Value;\n  setSelectedModuleItem: (id: string | string[]) => void;\n  items: ShorthandCollection<DropdownItemProps>;\n  isMultiple: boolean;\n  isTestModel?: boolean;\n};\n\nconst ModuleSelector: React.FC<ModuleSelectorProps> = ({\n  moduleName,\n  to,\n  value,\n  setSelectedModuleItem,\n  items,\n  isMultiple,\n  isTestModel,\n}): JSX.Element => {\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) return;\n    if (Array.isArray(data.value)) {\n      const ids = data.value.map((ele) => ele.content.key);\n      setSelectedModuleItem(ids);\n    } else {\n      const { key } = data.value.content;\n      setSelectedModuleItem(key);\n    }\n  };\n\n  const getAddModuleLink = (): JSX.Element => {\n    switch (moduleName) {\n      case 'camera':\n        return <AddCameraLink />;\n      case 'location':\n        return <AddLocationLink />;\n      case 'parts':\n        return <AddPartLink />;\n      default:\n        return <p>Un supported module</p>;\n    }\n  };\n\n  return (\n    <Flex vAlign=\"center\" gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }}>{`Select ${moduleName}`}</Text>\n      {isTestModel ? (\n        <Dropdown items={items} value={formatDropdownValue(value)} multiple={isMultiple} open={false} />\n      ) : (\n        <Dropdown\n          items={items}\n          onChange={onDropdownChange}\n          value={formatDropdownValue(value)}\n          multiple={isMultiple}\n        />\n      )}\n      {getAddModuleLink()}\n    </Flex>\n  );\n};\n","import Axios, { AxiosRequestConfig } from 'axios';\n\nimport {\n  UpdateKeyAction,\n  UpdateNamespaceAction,\n  GetSettingRequestAction,\n  GetSettingSuccessAction,\n  Setting,\n  GetSettingFailedAction,\n  SettingThunk,\n  GetAllCvProjectsRequestAction,\n  GetAllCvProjectsSuccessAction,\n  GetAllCvProjectsErrorAction,\n} from './settingType';\n\nexport const updateKey = (key: string): UpdateKeyAction => ({ type: 'UPDATE_KEY', payload: key });\n\nexport const updateNamespace = (namespace: string): UpdateNamespaceAction => ({\n  type: 'UPDATE_NAMESPACE',\n  payload: namespace,\n});\n\nexport const settingRequest = (): GetSettingRequestAction => ({\n  type: 'REQUEST_START',\n});\n\nexport const settingSuccess = (data: Setting): GetSettingSuccessAction => ({\n  type: 'REQUEST_SUCCESS',\n  payload: data,\n});\n\nexport const settingFailed = (error: Error): GetSettingFailedAction => ({\n  type: 'REQUEST_FAIL',\n  error,\n});\n\nconst getAllCvProjectsRequest = (): GetAllCvProjectsRequestAction => ({\n  type: 'GET_ALL_CV_PROJECTS_REQUEST',\n});\n\nconst getAllCvProjectsSuccess = (cvProjects: Record<string, string>): GetAllCvProjectsSuccessAction => ({\n  type: 'GET_ALL_CV_PROJECTS_SUCCESS',\n  pyload: cvProjects,\n});\n\nconst getAllCvProjectError = (error: Error): GetAllCvProjectsErrorAction => ({\n  type: 'GET_ALL_CV_PROJECTS_ERROR',\n  error,\n});\n\nexport const thunkGetSetting = () => (dispatch): Promise<any> => {\n  dispatch(settingRequest());\n\n  return Axios.get('/api/settings/')\n    .then(({ data }) => {\n      if (data.length > 0) {\n        dispatch(\n          settingSuccess({\n            loading: false,\n            error: null,\n            current: {\n              id: data[0].id,\n              key: data[0].training_key,\n              namespace: data[0].endpoint,\n            },\n            origin: {\n              id: data[0].id,\n              key: data[0].training_key,\n              namespace: data[0].endpoint,\n            },\n            isTrainerValid: data[0].is_trainer_valid,\n            appInsightHasInit: data[0].app_insight_has_init,\n          }),\n        );\n      }\n      return data[0].is_collect_data;\n    })\n    .catch((err) => {\n      dispatch(settingFailed(err));\n    });\n};\n\nexport const thunkPostSetting = (): SettingThunk => (dispatch, getStore): Promise<any> => {\n  const settingData = getStore().setting.current;\n  const isSettingEmpty = settingData.id === -1;\n  const url = isSettingEmpty ? `/api/settings/` : `/api/settings/${settingData.id}/`;\n  const requestConfig: AxiosRequestConfig = isSettingEmpty\n    ? {\n        data: {\n          training_key: settingData.key,\n          endpoint: settingData.namespace,\n          name: '',\n          iot_hub_connection_string: '',\n          device_id: '',\n          module_id: '',\n        },\n        method: 'POST',\n      }\n    : {\n        data: {\n          training_key: settingData.key,\n          endpoint: settingData.namespace,\n        },\n        method: 'PUT',\n      };\n\n  dispatch(settingRequest());\n\n  return Axios(url, requestConfig)\n    .then(({ data }) => {\n      dispatch(\n        settingSuccess({\n          loading: false,\n          error: null,\n          current: {\n            id: data.id,\n            key: data.training_key,\n            namespace: data.endpoint,\n          },\n          origin: {\n            id: data.id,\n            key: data.training_key,\n            namespace: data.endpoint,\n          },\n          isTrainerValid: data.is_trainer_valid,\n          appInsightHasInit: data.app_insight_has_init,\n        }),\n      );\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(settingFailed(err));\n    });\n};\n\nexport const thunkGetAllCvProjects = (): SettingThunk => (dispatch, getState) => {\n  dispatch(getAllCvProjectsRequest());\n\n  const settingId = getState().setting.current.id;\n  return Axios.get(`/api/settings/${settingId}/list_projects`)\n    .then(({ data }) => {\n      dispatch(getAllCvProjectsSuccess(data));\n      return void 0;\n    })\n    .catch((e) => {\n      if (e.response) {\n        throw new Error(e.response.data.log);\n      } else if (e.request) {\n        throw new Error(e.request);\n      } else {\n        throw e;\n      }\n    })\n    .catch((e) => {\n      dispatch(getAllCvProjectError(e));\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport * as R from 'ramda';\nimport {\n  Divider,\n  Flex,\n  Text,\n  Input,\n  Button,\n  Alert,\n  Dropdown,\n  DropdownItemProps,\n  Checkbox,\n  Dialog,\n  QuestionCircleIcon,\n  Tooltip,\n} from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useProject } from '../hooks/useProject';\nimport { getAppInsights } from '../TelemetryService';\nimport { WarningDialog } from '../components/WarningDialog';\nimport { State } from '../store/State';\nimport { Setting as SettingType } from '../store/setting/settingType';\nimport {\n  updateNamespace,\n  updateKey,\n  thunkGetSetting,\n  thunkPostSetting,\n  thunkGetAllCvProjects,\n} from '../store/setting/settingAction';\nimport { updateProjectData, updateOriginProjectData, thunkGetProject } from '../store/project/projectActions';\n\nexport const Setting = (): JSX.Element => {\n  const {\n    loading,\n    error,\n    current: settingData,\n    origin: originSettingData,\n    isTrainerValid,\n    cvProjects,\n    appInsightHasInit,\n  } = useSelector<State, SettingType>((state) => state.setting);\n  const dispatch = useDispatch();\n  const [checkboxChecked, setCheckboxChecked] = useState(false);\n  const [isUserGuideOpen, setIsUserGuideOpen] = useState(false);\n  const [otherError, setOtherError] = useState<Error>(null);\n\n  const notEmpty = originSettingData.namespace && originSettingData.key;\n\n  const cannotUpdateOrSave = R.equals(settingData, originSettingData);\n\n  useEffect(() => {\n    (dispatch(thunkGetSetting()) as any)\n      .then((isCollectData: boolean) => setCheckboxChecked(isCollectData))\n      .catch((e) => console.error(e));\n  }, [dispatch]);\n\n  const onSave = (): void => {\n    (dispatch(thunkPostSetting()) as any)\n      .then(() => {\n        // Reload page so PreviousProjectPanel can query again\n        window.location.reload();\n        return void 0;\n      })\n      .catch((e) => console.error(e));\n  };\n\n  const updateIsCollectData = (isCollectData, hasInit?): void => {\n    Axios.patch(`/api/settings/${settingData.id}`, {\n      is_collect_data: isCollectData,\n      ...(hasInit && { app_insight_has_init: hasInit }),\n    })\n      .then(() => {\n        const appInsight = getAppInsights();\n        if (!appInsight) throw Error('App Insight hasnot been initialize');\n        appInsight.config.disableTelemetry = !isCollectData;\n        // FIXME\n        window.location.reload();\n        return void 0;\n      })\n      .catch((err) => {\n        setCheckboxChecked(checkboxChecked);\n        setOtherError(err);\n      });\n  };\n\n  const onCheckBoxClick = (): void => {\n    const newCheckboxChecked = !checkboxChecked;\n    setCheckboxChecked(newCheckboxChecked);\n    updateIsCollectData(newCheckboxChecked);\n  };\n\n  useEffect(() => {\n    if (settingData.id !== -1) {\n      dispatch(thunkGetAllCvProjects());\n    }\n  }, [dispatch, settingData.id]);\n\n  return (\n    <>\n      <h1>Setting</h1>\n      <Divider color=\"grey\" design={{ paddingBottom: '10px' }} />\n      <Flex gap=\"gap.large\" design={{ height: '80%' }}>\n        <Flex column gap=\"gap.large\" design={{ width: '50%' }}>\n          <Text size=\"large\" weight=\"bold\">\n            Azure Cognitive Services Settings:\n          </Text>\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: '100px auto 50px',\n              gridTemplateRows: 'auto auto',\n              rowGap: '30px',\n            }}\n          >\n            <Text size=\"large\">Endpoint:</Text>\n            <Input\n              value={settingData.namespace}\n              onChange={(_, { value }): void => {\n                dispatch(updateNamespace(value));\n              }}\n              fluid\n            />\n            <Tooltip\n              trigger={\n                <Button\n                  text\n                  icon={<QuestionCircleIcon />}\n                  iconOnly\n                  onClick={(): void => setIsUserGuideOpen(true)}\n                />\n              }\n              content=\"Where to get Endpoint and Key?\"\n            />\n            <Dialog\n              open={isUserGuideOpen}\n              header=\"Get Endpoint and Key\"\n              content={\n                <Flex column styles={{ maxHeight: '800px', overflow: 'scroll' }}>\n                  <p>\n                    Step 1: Login Custom vision,{' '}\n                    <a href=\"https://www.customvision.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      https://www.customvision.ai/\n                    </a>\n                  </p>\n                  <p>Step 2: Click on the setting icon on the top</p>\n                  <img src=\"/icons/guide_step_2.png\" style={{ width: '100%' }} />\n                  <p>\n                    Step 3: Choose the resources under the account, you will see information of\n                    &quot;Key&quot; and &quot;Endpoint&quot;\n                  </p>\n                  <img src=\"/icons/guide_step_3.png\" style={{ width: '100%' }} />\n                </Flex>\n              }\n              confirmButton=\"Close\"\n              onConfirm={(): void => setIsUserGuideOpen(false)}\n            />\n            <Text size=\"large\">Key:</Text>\n            <Input\n              value={settingData.key}\n              onChange={(_, { value }): void => {\n                dispatch(updateKey(value));\n              }}\n              fluid\n            />\n          </div>\n          <Flex gap=\"gap.large\">\n            <WarningDialog\n              onConfirm={onSave}\n              trigger={\n                <Button primary disabled={cannotUpdateOrSave || loading} loading={loading}>\n                  {notEmpty ? 'Update' : 'Save'}\n                </Button>\n              }\n              contentText={<p>Update Key / Namespace will remove all the parts, sure you want to update?</p>}\n            />\n            <Button primary as={Link} to={isTrainerValid ? '/' : 'setting'}>\n              Cancel\n            </Button>\n          </Flex>\n          {error ? <Alert danger content={`${error.message}`} dismissible /> : null}\n          {otherError ? <Alert danger content={`${otherError.message}`} dismissible /> : null}\n        </Flex>\n        {isTrainerValid && <PreviousProjectPanel cvProjects={cvProjects} />}\n      </Flex>\n      <Divider color=\"grey\" />\n      <Checkbox\n        label=\"Allow to Send Usage Data\"\n        toggle\n        checked={checkboxChecked}\n        onChange={onCheckBoxClick}\n      />\n      <WarningDialog\n        contentText={<p>Allow to Send Usage Data?</p>}\n        open={!appInsightHasInit}\n        confirmButton=\"Yes\"\n        cancelButton=\"No\"\n        onConfirm={(): void => updateIsCollectData(true, true)}\n        onCancel={(): void => updateIsCollectData(false, true)}\n      />\n    </>\n  );\n};\n\nconst initialDropdownItem = [\n  {\n    header: '+ Create New Project',\n    content: {\n      key: 'NEW',\n    },\n  },\n];\n\nconst PreviousProjectPanel: React.FC<{ cvProjects: Record<string, string> }> = ({ cvProjects = {} }) => {\n  const { isLoading: isProjectLoading, error: projectError, data: projectData, originData } = useProject(\n    false,\n  );\n  const [loadFullImages, setLoadFullImages] = useState(false);\n  const [otherLoading, setOtherLoading] = useState(false);\n  const [otherError, setOtherError] = useState<Error>(null);\n  const [createProjectModel, setCreateProjectModel] = useState(false);\n  const [projectName, setProjectName] = useState('');\n  const [successDialog, setSuccessDialog] = useState('');\n  const dispatch = useDispatch();\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) dispatch(updateProjectData({ cvProjectId: projectData.cvProjectId }));\n    else if (data.value.content.key === initialDropdownItem[0].content.key) setCreateProjectModel(true);\n    else dispatch(updateProjectData({ cvProjectId: data.value.content.key }));\n  };\n\n  const onLoad = (): void => {\n    setOtherLoading(true);\n    Axios.get(\n      `/api/projects/${projectData.id}/pull_cv_project?customvision_project_id=${\n        projectData.cvProjectId\n      }&partial=${Number(!loadFullImages)}`,\n    )\n      .then(() => {\n        dispatch(updateOriginProjectData());\n        setSuccessDialog('Load Project Success');\n        return void 0;\n      })\n      .catch((err) => setOtherError(err))\n      .finally(() => setOtherLoading(false));\n  };\n\n  const onCreateNewProject = async (): Promise<void> => {\n    setOtherLoading(true);\n    try {\n      await Axios.get(`/api/projects/${projectData.id}/reset_project?project_name=${projectName}`);\n      // Update cvProject when create success\n      dispatch(thunkGetProject(false));\n      dispatch(thunkGetAllCvProjects());\n      setSuccessDialog('Create Project Success');\n    } catch (err) {\n      setOtherError(err);\n    }\n    setOtherLoading(false);\n  };\n\n  useEffect(() => {\n    let didCancel = false;\n    if (successDialog) {\n      setTimeout(() => {\n        if (!didCancel) setSuccessDialog('');\n      }, 3000);\n    }\n\n    return (): void => {\n      didCancel = true;\n    };\n  });\n\n  const dropdownItems: DropdownItemProps[] = [\n    ...initialDropdownItem,\n    ...Object.entries(cvProjects).map(([key, value]) => ({\n      header: value,\n      content: {\n        key,\n      },\n    })),\n  ];\n\n  const loading = otherLoading || isProjectLoading;\n  const error = [otherError, projectError].filter((e) => !!e);\n\n  const selectedDropdownItems = dropdownItems.find((e) => (e.content as any).key === projectData.cvProjectId);\n\n  return (\n    <>\n      <Divider color=\"grey\" vertical styles={{ height: '100%' }} />\n      <Flex column gap=\"gap.large\">\n        <Text size=\"large\" weight=\"bold\">\n          Projects:{' '}\n        </Text>\n        <Dropdown items={dropdownItems} onChange={onDropdownChange} value={selectedDropdownItems} />\n        {loadFullImages && projectData.cvProjectId !== 'NEW' && (\n          <Checkbox\n            checked={loadFullImages}\n            label=\"Load Full Images\"\n            onClick={(): void => setLoadFullImages((prev) => !prev)}\n          />\n        )}\n        {!loadFullImages && projectData.cvProjectId !== 'NEW' && (\n          <WarningDialog\n            contentText={<p>Depends on the number of images, loading full images takes time</p>}\n            onConfirm={(): void => setLoadFullImages((prev) => !prev)}\n            trigger={<Checkbox checked={loadFullImages} label=\"Load Full Images\" />}\n          />\n        )}\n        {projectData.cvProjectId === 'NEW' && (\n          <Input\n            placeholder=\"Input a project name\"\n            fluid\n            onChange={(_, { value }): void => {\n              setProjectName(value);\n            }}\n          />\n        )}\n        {projectData.cvProjectId === 'NEW' ? (\n          <Button\n            primary\n            content={'Create'}\n            disabled={loading}\n            loading={loading}\n            onClick={onCreateNewProject}\n          />\n        ) : (\n          <WarningDialog\n            contentText={<p>Load Project will remove all the parts, sure you want to do that?</p>}\n            onConfirm={onLoad}\n            trigger={\n              <Button\n                primary\n                content={'Load'}\n                disabled={(!loadFullImages && projectData.cvProjectId === originData.cvProjectId) || loading}\n                loading={loading}\n              />\n            }\n          />\n        )}\n        <WarningDialog\n          contentText={<p>Create New Project will remove all the parts, sure you want to do that?</p>}\n          open={createProjectModel}\n          onConfirm={(): void => {\n            setCreateProjectModel(false);\n            dispatch(updateProjectData({ ...projectData, cvProjectId: 'NEW' }));\n          }}\n          onCancel={(): void => setCreateProjectModel(false)}\n        />\n        {error.length ? <Alert danger content={`Failed to load ${error.join(', ')}`} dismissible /> : null}\n        {successDialog && <Alert dismissible header={successDialog} success visible />}\n      </Flex>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../store/State';\nimport { thunkGetSetting } from '../store/setting/settingAction';\n\nexport const PrivateRoute: React.FC<RouteProps> = ({ component, ...rest }) => {\n  const isTrainerValid = useSelector<State, boolean>((state) => state.setting.isTrainerValid);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(thunkGetSetting());\n  }, [dispatch]);\n\n  if (isTrainerValid) return <Route {...rest} component={component} />;\n\n  return <Route {...rest} render={() => <Redirect to=\"/setting\" />} />;\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Cameras from '../pages/Cameras';\nimport CameraDetails from '../pages/CameraDetails';\nimport { PartDetails } from '../pages/PartDetails';\nimport Locations from '../pages/Locations';\nimport LocationDetails from '../pages/LocationDetails';\nimport ManualIdentification from '../pages/ManualIdentification';\nimport { Parts } from '../pages/Parts';\nimport { PartIdentification } from '../pages/PartIdentification';\nimport { Setting } from '../pages/Setting';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const RootRouter: FC = () => {\n  return (\n    <Switch>\n      <PrivateRoute path=\"/manual\" component={ManualIdentification} />\n      <PrivateRoute path=\"/locations/detail\" component={LocationDetails} />\n      <PrivateRoute path=\"/locations\" component={Locations} />\n      <PrivateRoute path=\"/cameras/detail\" component={CameraDetails} />\n      <PrivateRoute path=\"/cameras\" component={Cameras} />\n      <PrivateRoute path=\"/parts/detail\" component={PartDetails} />\n      <PrivateRoute path=\"/parts\" component={Parts} />\n      <PrivateRoute path=\"/partIdentification\" component={PartIdentification} />\n      <Route path=\"/setting\" component={Setting} />\n      <PrivateRoute path=\"/\" component={Home} />\n    </Switch>\n  );\n};\n","import React, { FC, MouseEvent, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nconst getTitle = (pathname: string): string => {\n  switch (pathname) {\n    case 'cameras':\n      return 'Camera';\n    case 'parts':\n      return 'Part';\n    case 'locations':\n      return 'Location';\n    case 'register':\n      return 'Register';\n    case 'label':\n      return 'Label';\n    case 'manual':\n      return 'Identify Manually';\n    case 'detail':\n      return 'Details';\n    case 'partIdentification':\n      return 'Job Configuration';\n    case 'capturePhotos':\n      return null;\n    case 'uploadPhotos':\n      return null;\n    default:\n      if (typeof pathname === 'string') return 'Details';\n      return null;\n  }\n};\n\nconst Breadcrumb: FC<{ disabled: boolean }> = ({ disabled }) => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/') return <Text color=\"black\">Home</Text>;\n\n  const { pathTitles } = pathname\n    .split('/')\n    .slice(1)\n    .reduce(\n      (acc, cur) => {\n        const title = getTitle(cur);\n        if (!title) return acc;\n\n        const path = `${acc.path}/${cur}`;\n\n        return {\n          pathTitles: [...acc.pathTitles, { title, to: path }],\n          path,\n        };\n      },\n      { pathTitles: [], path: '' },\n    );\n\n  return (\n    <Flex gap=\"gap.smaller\">\n      <Link\n        to={'/'}\n        style={{ color: '#0094d8', textDecoration: 'none', cursor: disabled && 'default' }}\n        onClick={(e: MouseEvent): void => {\n          if (disabled) e.preventDefault();\n        }}\n      >\n        <Text>Home</Text>\n      </Link>\n      {pathTitles.map((e, i, arr) => {\n        return (\n          <Fragment key={i}>\n            <Text color=\"black\">{'>'}</Text>\n            {i === arr.length - 1 ? (\n              <Text color=\"black\">{e.title}</Text>\n            ) : (\n              <Link to={`${e.to}`} style={{ color: '#0094d8', textDecoration: 'none' }}>\n                <Text>{e.title}</Text>\n              </Link>\n            )}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { memo, MouseEvent, FC } from 'react';\nimport { Segment, Image, Flex } from '@fluentui/react-northstar';\nimport { NavLink } from 'react-router-dom';\nimport { useProject } from '../../hooks/useProject';\nimport { useCameras } from '../../hooks/useCameras';\n\nconst LeftNav: FC<any> = ({ styles, disabled }): JSX.Element => {\n  const project = useProject(false);\n  const cameras = useCameras();\n  const cameraInUsed = cameras.find((e) => e.id === project.data.camera);\n\n  return (\n    <Segment color=\"grey\" inverted styles={{ ...styles, padding: 0, paddingTop: '1em' }}>\n      <Flex column gap=\"gap.large\" hAlign=\"center\">\n        <NavItem disabled={disabled} src=\"/icons/location.png\" to=\"/locations\"></NavItem>\n        <NavItem\n          disabled={disabled}\n          src=\"/icons/camera.png\"\n          to={cameraInUsed ? `/cameras/detail?name=${cameraInUsed.name}` : '/cameras'}\n        />\n        <NavItem disabled={disabled} src=\"/icons/part.png\" to=\"/parts\"></NavItem>\n        <NavItem disabled={disabled} src=\"/icons/partIdentification.png\" to=\"/partIdentification\"></NavItem>\n        <NavItem disabled={disabled} src=\"/icons/manual.png\" to=\"/manual\"></NavItem>\n      </Flex>\n    </Segment>\n  );\n};\n\ninterface NavItemProps {\n  src: string;\n  to: string;\n  disabled: boolean;\n}\nconst NavItem: FC<NavItemProps> = ({ src, to, disabled }): JSX.Element => {\n  return (\n    <NavLink\n      to={to}\n      style={{ display: 'flex', justifyContent: 'center', padding: '0.8em', cursor: disabled && 'default' }}\n      activeStyle={{ backgroundColor: 'rgba(250, 83, 5, 0.5)' }}\n      onClick={(e: MouseEvent): void => {\n        if (disabled) e.preventDefault();\n      }}\n    >\n      <Image src={src} design={{ width: '100%' }} />\n    </NavLink>\n  );\n};\n\nexport default memo(LeftNav);\n","import React, { FC, MouseEvent } from 'react';\nimport { Grid, Segment, Image, Flex, Text, MenuIcon, Button } from '@fluentui/react-northstar';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Breadcrumb from '../Breadcrumb';\nimport LeftNav from './LeftNav';\nimport { State } from '../../store/State';\n\nexport const MainLayout: FC = ({ children }) => {\n  const isTrainerValid = useSelector<State, boolean>((state) => state.setting.isTrainerValid);\n\n  return (\n    <Grid\n      columns=\"60px auto\"\n      rows=\"50px auto\"\n      design={{ height: '100vh' }}\n      styles={{ justifyContent: 'stretch' }}\n    >\n      <TopNav disabled={!isTrainerValid} />\n      <LeftNav\n        styles={{\n          gridColumn: '1 / span 1',\n          gridRow: '2 / span 1',\n          boxShadow: '1px 0px 10px 0px rgba(0,0,0,0.75)',\n          zIndex: 1,\n        }}\n        disabled={!isTrainerValid}\n      />\n\n      <Segment styles={{ gridColumn: 'span 1', padding: '30px' }}>\n        <Breadcrumb disabled={!isTrainerValid} />\n        {children}\n      </Segment>\n    </Grid>\n  );\n};\n\nconst TopNav: FC<{ disabled: boolean }> = ({ disabled }) => {\n  return (\n    <Flex\n      space=\"between\"\n      vAlign=\"center\"\n      padding=\"padding.medium\"\n      styles={{\n        backgroundColor: '#0094d8',\n        gridColumn: '1 / span 2',\n        boxShadow: '0px 1px 10px 0px rgba(0,0,0,0.75)',\n        zIndex: 2,\n        fontSize: '20px',\n        padding: '0.5em 1em',\n      }}\n    >\n      <Flex gap=\"gap.large\" vAlign=\"center\">\n        <NavLink\n          to={'/'}\n          style={{ textDecoration: 'none', cursor: disabled && 'default' }}\n          onClick={(e: MouseEvent): void => {\n            if (disabled) e.preventDefault();\n          }}\n        >\n          <Flex gap=\"gap.medium\">\n            <Image src=\"/icons/Home_white.png\" design={{ width: '30px' }} />\n            <Text color=\"white\">Vision on Edge</Text>\n          </Flex>\n        </NavLink>\n      </Flex>\n      <Flex\n        vAlign=\"center\"\n        hAlign=\"end\"\n        gap=\"gap.medium\"\n        styles={{ height: '100%' }}\n        onClick={(e: MouseEvent): void => {\n          if (disabled) e.preventDefault();\n        }}\n      >\n        <Link to=\"/setting\" style={{ height: '100%', cursor: disabled && 'default' }}>\n          <Image styles={{ height: '100%' }} src=\"/icons/setting.png\" />\n        </Link>\n        <Text color=\"white\">User</Text>\n      </Flex>\n    </Flex>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\nimport { withRouter } from 'react-router-dom';\n\nimport { ai } from '../TelemetryService';\n\n/**\n * This Component provides telemetry with Azure App Insights\n */\nconst TelemetryProvider: React.FC<any> = ({ instrumentationKey, isAppInsightOn, history, children }) => {\n  const initialized = useRef(false);\n\n  useEffect(() => {\n    const AppInsightsInstrumentationKey = instrumentationKey;\n    if (!initialized.current && Boolean(AppInsightsInstrumentationKey) && Boolean(history)) {\n      ai.initialize(AppInsightsInstrumentationKey, isAppInsightOn, history);\n      initialized.current = true;\n    }\n  }, [history, instrumentationKey, isAppInsightOn]);\n\n  return <>{children}</>;\n};\n\nexport default withRouter(withAITracking(ai.reactPlugin, TelemetryProvider, 'TelemetryProvider'));\n","import React, { FC, useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from '@fluentui/react-northstar';\nimport Axios from 'axios';\nimport { RootRouter } from './routes/RootRouter';\nimport { MainLayout } from './components/MainLayout';\nimport { mainTheme } from './themes/mainTheme';\nimport TelemetryProvider from './components/TelemetryProvider';\n\nconst App: FC = (): JSX.Element => {\n  const [appInsightInfo, setAppInsightInfo] = useState({\n    key: '',\n    isAppInsightOn: false,\n  });\n\n  useEffect(() => {\n    const appInsightKey = Axios.get('/api/appinsight/key');\n    const settings = Axios.get('/api/settings/');\n\n    Axios.all([appInsightKey, settings])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: appInsightKeyData } = responses[0];\n          const { data: settingsData } = responses[1];\n\n          if (appInsightKeyData.key)\n            return setAppInsightInfo({\n              key: appInsightKeyData.key,\n              isAppInsightOn: settingsData[0].is_collect_data,\n            });\n          throw new Error('No API Key');\n        }),\n      )\n      .catch((e) => console.error(e));\n  }, []);\n\n  return (\n    <Provider theme={mainTheme}>\n      <BrowserRouter>\n        <TelemetryProvider\n          instrumentationKey={appInsightInfo.key}\n          isAppInsightOn={appInsightInfo.isAppInsightOn}\n        >\n          <div className=\"App\">\n            <MainLayout>\n              <RootRouter />\n            </MainLayout>\n          </div>\n        </TelemetryProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/State';\n\nconst { store, persistor } = configureStore(initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading..</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}