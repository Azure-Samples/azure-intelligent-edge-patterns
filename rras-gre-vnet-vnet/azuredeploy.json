{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "apiProfile": "2019-03-01-hybrid",
  "parameters": {
    "WindowsImageSKU": {
      "defaultValue": "2019-Datacenter",
      "allowedValues": [ "2016-Datacenter","2019-Datacenter" ],
      "type": "string",
      "metadata": {
        "description": "Please select the base Windows VM image"
      }
    },
    "VMSize": {
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [ "Standard_DS3_v2","Standard_DS4_v2","Standard_F8s_v2","Standard_F16s_v2" ],
      "type": "string",
      "metadata": {
        "description": "Please select the VM size"
      }
    },
    "adminUsername": {
      "defaultValue": "rrasadmin",
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs"
      }
    },
    "adminPassword": {
      "defaultValue": "[subscription().subscriptionId]",
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs. Default value is subscription id"
      }
    },
    "VNet1Name": {
      "defaultValue":"VNet1",
      "type": "string",
      "metadata": {
        "description": "The name of VNet1.  THis will be used to label the resources"
      }
    },
    "VNet1AddressSpace": {
      "defaultValue":"10.1.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Address Space for VNet1"
      }
    },
    "VNet1TunnelSubnetRange": {
      "defaultValue":"10.1.254.0/24",
      "type": "string",
      "metadata": {
        "description": "Address Range for VNet1 Tunnel Subnet"
      }
    },
    "VNet1TunnelGW": {
      "defaultValue":"10.1.254.4",
      "type": "string",
      "metadata": {
        "description": "Static Address for VNet1 RRAS Server. "
      }
    },
    "VNet1InternalSubnetRange": {
      "defaultValue":"10.1.1.0/24",
      "type": "string",
      "metadata": {
        "description": "Address Range for VNet1 Internal Subnet"
      }      
    },
    "VNet1InternalGW": {
      "defaultValue":"10.1.1.4",
      "type": "string",
      "metadata": {
        "description": "Static Address for VNet1 RRAS Server.  Used for User defined route in Route table."
      }
    },
    "VNet2Name": {
      "defaultValue":"VNet2",
      "type": "string",
      "metadata": {
        "description": "The name of VNet1.  THis will e used to label the resources"
      }
    },
    "VNet2AddressSpace": {
      "defaultValue":"10.2.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Address Space for VNet2"
      }
    },
    "VNet2TunnelSubnetRange": {
      "defaultValue":"10.2.254.0/24",
      "type": "string",
      "metadata": {
        "description": "Address Range for VNet2 Tunnel Subnet"
      }
    },
    "VNet2TunnelGW": {
      "defaultValue":"10.2.254.4",
      "type": "string",
      "metadata": {
        "description": "Static Address for VNet2 RRAS Server. "
      }
    },
    "VNet2InternalSubnetRange": {
      "defaultValue":"10.2.1.0/24",
      "type": "string",
      "metadata": {
        "description": "Address Range for VNet2 Internal Subnet"
      }
    },
    "VNet2InternalGW": {
      "defaultValue":"10.2.1.4",
      "type": "string",
      "metadata": {
        "description": "Static Address for VNet2 RRAS Server.  Used for User defined route in Route table."
      }
    },  
    "_artifactsLocation": {
      "defaultValue": "https://raw.githubusercontent.com/Inttruder/azure-intelligent-edge-patterns/master/rras-gre-vnet-vnet/",
      "type": "string",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      }
    },
    "_artifactsLocationSasToken": {
      "defaultValue": "",
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },

  "variables": {
    "WindowsImageSKU": "[parameters('WindowsImageSKU')]",
    "storageAccountType": "Standard_LRS",
    "ManagedOSDiskType": "Premium_LRS",
    "storageName": "[concat('sa', uniquestring(resourceGroup().id))]",
    "VMSize": "[parameters('VMSize')]",    
    "windowsImagePublisher": "MicrosoftWindowsServer",
    "windowsImageOffer": "WindowsServer",
    "windowsImageVersion": "latest",   
    "vmName": "-RRAS",
    "VNet1VMName": "[concat(variables('VNet1'),variables('vmName'))]",
    "VNet2VMName": "[concat(variables('VNet2'),variables('vmName'))]",

    "VNet1": "[parameters('VNet1Name')]",
    "VNet2": "[parameters('VNet2Name')]",
    "VNet1AddressSpace": "[parameters('VNet1AddressSpace')]",
    "VNet1TunnelSubnetRange": "[parameters('VNet1TunnelSubnetRange')]",
    "VNet1TunnelGW": "[parameters('VNet1TunnelGW')]",
    "VNet1InternalSubnetRange": "[parameters('VNet1InternalSubnetRange')]",
    "VNet1InternalGW": "[parameters('VNet1InternalGW')]",
    "VNet2AddressSpace": "[parameters('VNet2AddressSpace')]",
    "VNet2TunnelSubnetRange": "[parameters('VNet2TunnelSubnetRange')]",
    "VNet2TunnelGW": "[parameters('VNet2TunnelGW')]",
    "VNet2InternalSubnetRange": "[parameters('VNet2InternalSubnetRange')]",
    "VNet2InternalGW": "[parameters('VNet2InternalGW')]",
    
    "TunnelSubnetName": "Tunnel",
    "VNet1InternalSubnetName": "Internal",
    "VNet2InternalSubnetName": "Internal",              
            
    "VNet1Name": "[concat(variables('vnet1'),'-vnet' )]",
    "VNet2Name": "[concat(variables('vnet2'),'-vnet')]",
    "vnetID1": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNet1Name'))]",
    "vnetID2": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNet2Name'))]",    
    
    "TunnelSubnetRefVNet1": "[concat(variables('vnetID1'),'/subnets/',variables('TunnelSubnetName'))]",
    "InternalSubnetRefVNet1": "[concat(variables('vnetID1'),'/subnets/',variables('VNet1InternalSubnetName'))]",
    "TunnelSubnetRefVNet2": "[concat(variables('vnetID2'),'/subnets/',variables('TunnelSubnetName'))]",
    "InternalSubnetRefVNet2": "[concat(variables('vnetID2'),'/subnets/',variables('VNet2InternalSubnetName'))]",

    "RouteTable1Name": "[concat('RoutesFor',variables('VNet1'),'-rt' )]",
    "RouteTable2Name": "[concat('RoutesFor',variables('VNet2'),'-rt' )]",
    
    "TunnelnsgName": "[concat(variables('TunnelSubnetName'),'-nsg' )]",
    "TunnelnsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('TunnelnsgName'))]",    
    "NICPrefixVNet1": "[concat(variables('VNet1'),variables('vmName'))]",
    "NICPrefixVNet2": "[concat(variables('VNet2'),variables('vmName'))]",
    "VNet1TunnelPIPName": "[concat(variables('VNet1'),'-',variables('TunnelSubnetName'),'-pip')]",    
    "VNet2TunnelPIPName": "[concat(variables('VNet2'),'-',variables('TunnelSubnetName'),'-pip')]",    
    
    "InstallRRASDSC": "[concat(parameters('_artifactsLocation'), 'DSC/InstallRRAS.zip', parameters('_artifactsLocationSasToken'))]",
    "InstallRRAS": "InstallRRAS.ps1\\InstallRRAS",
    "scriptfilename": "Add-Site2SiteGRE.ps1",
    "scriptfilepath": "[concat(parameters('_artifactsLocation'), variables('scriptfilename'), parameters('_artifactsLocationSasToken'))]"
  },

  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('TunnelnsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "500UDP",
            "properties": {
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "4500UDP",
            "properties": {
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 130,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('RouteTable1Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": [
          {
            "name": "[variables('RouteTable1Name')]",
            "properties": {
              "addressPrefix": "[variables('VNet2AddressSpace')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('VNet1InternalGW')]"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('RouteTable2Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": [
          {
            "name": "[variables('RouteTable2Name')]",
            "properties": {
              "addressPrefix": "[variables('VNet1AddressSpace')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('VNet2InternalGW')]"
            }
          }
        ]
      }
    },

    {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "[variables('storageAccountType')]"
        },
        "kind": "Storage"    
      },

    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('VNet1Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VNet1AddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('TunnelSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('VNet1TunnelSubnetRange')]",
              "networkSecurityGroup": {
                "id": "[variables('TunnelnsgID')]"
              }              
            }
          },
          {
            "name": "[variables('VNet1InternalSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('VNet1InternalSubnetRange')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('RouteTable1Name'))]"
              }
              }
            }
        ]
      },
      "dependsOn": [
        "[variables('TunnelnsgID')]",
        "[concat('Microsoft.Network/routeTables/', variables('RouteTable1Name'))]"
      ]
    },
    
    {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('VNet2Name')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('VNet2AddressSpace')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('TunnelSubnetName')]",
              "properties": {
                "addressPrefix": "[variables('VNet2TunnelSubnetRange')]",
                "networkSecurityGroup": {
                  "id": "[variables('TunnelnsgID')]"
                }                
              }
            },
            {
              "name": "[variables('VNet2InternalSubnetName')]",
              "properties": {
                "addressPrefix": "[variables('VNet2InternalSubnetRange')]",
                "routeTable": {
                  "id": "[resourceId('Microsoft.Network/routeTables', variables('RouteTable2Name'))]"
                }
                }
              }
          ]
        },
        "dependsOn": [
          "[variables('TunnelnsgID')]",
          "[concat('Microsoft.Network/routeTables/', variables('RouteTable2Name'))]"
        ]
      },
     
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('VNet1TunnelPIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static"       
      },
      "dependsOn": [
        "[variables('vnetID1')]"
      ]
    },

    {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('VNet2TunnelPIPName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Static"          
        },
        "dependsOn": [
          "[variables('vnetID2')]"
        ]
      },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('NICPrefixVNet1'),'1-', variables('TunnelSubnetName'),'-nic')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enableIPForwarding":true,  
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('VNet1TunnelGW')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('VNet1TunnelPIPName'))]"
              },
              "subnet": {
                "id": "[variables('TunnelSubnetRefVNet1')]"
              }          
            }
          }
        ]
      },
      "dependsOn": [
        "[variables('vnetID1')]",
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('VNet1TunnelPIPName'))]"
      ]
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('NICPrefixVNet1'),'1-', variables('VNet1InternalSubnetName'),'-nic')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enableIPForwarding":true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('VNet1InternalGW')]",
              "subnet": {
                "id": "[variables('InternalSubnetRefVNet1')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[variables('vnetID1')]"
      ]
    },

    {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('NICPrefixVNet2'),'1-', variables('TunnelSubnetName'),'-nic')]",
        "location": "[resourceGroup().location]",
        "properties": {
            "enableIPForwarding":true,
            "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[variables('VNet2TunnelGW')]",
                "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('VNet2TunnelPIPName'))]"
              },
                "subnet": {
                  "id": "[variables('TunnelSubnetRefVNet2')]"
                }
              }
            }
          ]
        },
        "dependsOn": [
          "[variables('vnetID2')]",
          "[resourceId('Microsoft.Network/publicIPAddresses',variables('VNet2TunnelPIPName'))]"
        ]
      },

      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('NICPrefixVNet2'),'1-', variables('VNet2InternalSubnetName'),'-nic')]",
        "location": "[resourceGroup().location]",
        "properties": {
            "enableIPForwarding":true,
            "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[variables('VNet2InternalGW')]",
                "subnet": {
                  "id": "[variables('InternalSubnetRefVNet2')]"
                }
              }
            }
          ]
        },
        "dependsOn": [
          "[variables('vnetID2')]"
        ]
      },

      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(variables('VNet1VMName'), '1')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NICPrefixVNet1'), '1-', variables('TunnelSubnetName'),'-nic'))]",
            "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NICPrefixVNet1'), '1-', variables('VNet1InternalSubnetName'),'-nic'))]",
            "[resourceId('Microsoft.Storage/storageAccounts',concat(variables('storageName')))]"
          ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(variables('VNet1VMName'), '1')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
             "windowsConfiguration": {
                "provisionVmAgent": "true"
              }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('windowsImagePublisher')]",
              "offer": "[variables('windowsImageOffer')]",
              "sku": "[variables('windowsImageSKU')]",
              "version": "[variables('windowsImageVersion')]"
            },
            "osDisk": {
              "name": "[concat(variables('VNet1VMName'), '1-osdisk')]",
              "managedDisk": {
                "storageAccountType": "[variables('ManagedOSDiskType')]"
              }, 
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },        
          "networkProfile": {
            "networkInterfaces": [
              {
                "properties": {
                  "primary": true
                },
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NICPrefixVNet1'),'1-', variables('TunnelSubnetName'),'-nic'))]"
              },
              {
                "properties": {
                  "primary": false
                },
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NICPrefixVNet1'),'1-', variables('VNet1InternalSubnetName'),'-nic'))]"
              }
            ]
          },
          "licenseType": "Windows_Server",
           "diagnosticsProfile": {
            "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[reference(resourceId(resourcegroup().name, 'Microsoft.Storage/storageAccounts', variables('storageName')), '2015-06-15').primaryEndpoints['blob']]"
            }
          }
        }       
      },

    {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(variables('VNet2VMName'), '1')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NICPrefixVNet2'), '1-', variables('TunnelSubnetName'),'-nic'))]",
            "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NICPrefixVNet2'), '1-', variables('VNet2InternalSubnetName'),'-nic'))]",
            "[resourceId('Microsoft.Storage/storageAccounts',concat(variables('storageName')))]"
          ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(variables('VNet2VMName'), '1')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
              "provisionVmAgent": "true"
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('windowsImagePublisher')]",
              "offer": "[variables('windowsImageOffer')]",
              "sku": "[variables('windowsImageSKU')]",
              "version": "[variables('windowsImageVersion')]"
            },
            "osDisk": {
              "name": "[concat(variables('VNet2VMName'), '1-osdisk')]",
              "managedDisk": {
                "storageAccountType": "[variables('ManagedOSDiskType')]"
              }, 
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },         
          "networkProfile": {
            "networkInterfaces": [
              {
                "properties": {
                  "primary": true
                },
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NICPrefixVNet2'),'1-', variables('TunnelSubnetName'),'-nic'))]"
              },
              {
                "properties": {
                  "primary": false
                },
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NICPrefixVNet2'),'1-', variables('VNet2InternalSubnetName'),'-nic'))]"
              }
            ]
          },
          "licenseType": "Windows_Server",
           "diagnosticsProfile": {
            "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[reference(resourceId(resourcegroup().name, 'Microsoft.Storage/storageAccounts', variables('storageName')), '2015-06-15').primaryEndpoints['blob']]"
            }
          }
        }       
      },
     
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(concat(variables('VNet1VMName'), '1','/InstallRRAS'))]",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "InstallRRAS"
        },
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.77",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "modulesUrl": "[variables('InstallRRASDSC')]",
            "configurationFunction": "[variables('InstallRRAS')]"
          },
          "protectedSettings": {
            "Items": {
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines',concat(concat(variables('VNet1VMName'), '1')))]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(concat(variables('VNet2VMName'), '1','/InstallRRAS'))]",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "InstallRRAS"
        },
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.77",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "modulesUrl": "[variables('InstallRRASDSC')]",
            "configurationFunction": "[variables('InstallRRAS')]"
          },
          "protectedSettings": {
            "Items": {
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines',concat(concat(variables('VNet2VMName'), '1')))]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('VNet1VMName'), '1','/CustomScriptExtension')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.8",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[variables('scriptFilepath')]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('scriptFilename'), ' ', '-TargetRRASIP ',  reference(variables('VNet2TunnelPIPName')).ipAddress, ' -TargetIPRange ', variables('VNet2AddressSpace'),' -SourceRRASIP ', variables('VNet1TunnelGW'))]"
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines/extensions',concat(variables('VNet1VMName'), '1'),'InstallRRAS')]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('VNet2VMName'), '1','/CustomScriptExtension')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.8",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
                "[variables('scriptFilepath')]"
            ],
            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('scriptFilename'), ' ', '-TargetRRASIP ',  reference(variables('VNet1TunnelPIPName')).ipAddress, ' -TargetIPRange ', variables('VNet1AddressSpace'),' -SourceRRASIP ', variables('VNet2TunnelGW')) ]"
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines/extensions',concat(variables('VNet2VMName'), '1'),'InstallRRAS')]"
        ]     
      }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "InternalSubnetRefVNet1":{
      "type": "string",
      "value":"[variables('InternalSubnetRefVNet1')]"
    },
    "InternalSubnetRefVNet2":{
      "type": "string",
      "value":"[variables('InternalSubnetRefVNet2')]"
    }
   }
}
